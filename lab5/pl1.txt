1                   J E S 2  J O B  L O G  --  S Y S T E M  2 9 6 4  --  N O D E
0
 08.43.52 JOB06993 ---- WEDNESDAY, 07 APR 2021 ----
 08.43.52 JOB06993  IRR010I  USERID KC03CCA  IS ASSIGNED TO THIS JOB.
 08.43.52 JOB06993  ICH70001I KC03CCA  LAST ACCESS AT 08:41:56 ON WEDNESDAY, APR
 08.43.52 JOB06993  $HASP373 KC03CCAP STARTED - INIT 1    - CLASS A        - SYS
 08.43.54 JOB06993  $HASP395 KC03CCAP ENDED - RC=0000
0------ JES2 JOB STATISTICS ------
-  07 APR 2021 JOB EXECUTION DATE
-           17 CARDS READ
-        6,157 SYSOUT PRINT RECORDS
-            0 SYSOUT PUNCH RECORDS
-          433 SYSOUT SPOOL KBYTES
-         0.03 MINUTES EXECUTION TIME
         1 //KC03CCAP JOB 1,'A. STUDENT',NOTIFY=&SYSUID
           //*ZSCHOLIB JCLLIB ORDER=(KC02315.ZSCHOLAR.PROCLIB)
           //**************************************************
           //* C KC03CCA YOURID ALL
           //* C ZPROF PROFUID ALL
           //*   ==> IF YOU USE NOT ZPROF AS INSTRUCTORID
           //* DELETE ZSCHOLIB STATEMENT IF YOU WANT TO USE
           //*       THE DEFAULT PROC LIBRARY
           //* ORIGINAL COPIED FROM  GMULLER.LANG.CNTL
           //**************************************************
           //* COMPILE PL/I PROGRAM
           //**************************************************
           IEFC653I SUBSTITUTION JCL - 1,'A. STUDENT',NOTIFY=KC03CCA
         2 //STEP1 EXEC PROC=IBMZCB,PARM='OBJECT,OPTIONS,SOURCE',REGION=128M
         3 XXIBMZCB  PROC LNGPRFX='IEL520',LIBPRFX='CEE',
           XX             SYSLBLK=3200,GOPGM=GO
           XX*
           XX*******************************************************************
           XX* Licensed Materials - Property of IBM
           XX* 5655-W67
           XX* Copyright IBM Corp. 1999, 2013 All Rights Reserved
           XX*
           XX* US Government Users Restricted Rights - Use, duplication or
           XX* disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
           XX*
           XX*******************************************************************
           XX*
           XX*       IBM Enterprise PL/I for z/OS
           XX*       Version 4 Release 4 Modification 0
           XX*
           XX*  COMPILE AND BIND A PL/I PROGRAM
           XX*
           XX*  PARAMETER  DEFAULT VALUE    USAGE
           XX*   LNGPRFX   IEL510           PREFIX FOR LANGUAGE DATA SET NAMES
           XX*   LIBPRFX   CEE              PREFIX FOR LIBRARY DATA SET NAMES
           XX*   SYSLBLK   3200             BLKSIZE FOR OBJECT DATA SET
           XX*   GOPGM     GO               MEMBER NAME FOR PROGRAM OBJECT
           XX*
           XX*******************************************************************
           XX* COMPILE STEP
           XX*******************************************************************
         4 XXPLI      EXEC PGM=IBMZPLI,PARM='OBJECT,OPTIONS'
         5 XXSTEPLIB  DD  DSN=&LNGPRFX..SIBMZCMP,DISP=SHR
           IEFC653I SUBSTITUTION JCL - DSN=IEL520.SIBMZCMP,DISP=SHR
         6 XX         DD  DSN=&LIBPRFX..SCEERUN,DISP=SHR
           IEFC653I SUBSTITUTION JCL - DSN=CEE.SCEERUN,DISP=SHR
         7 XXSYSPRINT DD  SYSOUT=*
         8 XXSYSOUT   DD  SYSOUT=*
         9 XXSYSLIN   DD  DSN=&&LOADSET,DISP=(MOD,PASS),UNIT=SYSALLDA,
           XX             SPACE=(CYL,(1,1)),DCB=(LRECL=80,BLKSIZE=&SYSLBLK)
           IEFC653I SUBSTITUTION JCL - DSN=&&LOADSET,DISP=(MOD,PASS),UNIT=SYSALL
           BLKSIZE=3200)
        10 XXSYSUT1   DD  DSN=&&SYSUT1,UNIT=SYSALLDA,
           XX             SPACE=(1024,(200,50),,CONTIG,ROUND),DCB=BLKSIZE=1024
           XX*******************************************************************
           XX* BIND STEP
           XX*******************************************************************
        11 //SYSIN        DD DSN=KC03CCA.LANG.SOURCE(PL1),DISP=SHR
        12 //PLI.SYSLIB   DD DSN=CEE.SCEESAMP,DISP=SHR
        13 XXBIND     EXEC PGM=IEWBLINK,COND=(8,LT,PLI)
        14 XXSYSLIB   DD  DSN=&LIBPRFX..SCEELKED,DISP=SHR
           IEFC653I SUBSTITUTION JCL - DSN=CEE.SCEELKED,DISP=SHR
        15 XXSYSPRINT DD  SYSOUT=*
        16 XXSYSLIN   DD  DSN=*.PLI.SYSLIN,DISP=(OLD,DELETE)
        17 XX         DD  DDNAME=SYSIN
        18 //BIND.SYSLMOD DD DSN=KC03CCA.LANG.LOAD(PL1),DISP=SHR
           X/SYSLMOD  DD  DSN=&&GOSET(&GOPGM),DISP=(MOD,PASS),UNIT=SYSALLDA,
           X/             SPACE=(1024,(50,20,1)),DSNTYPE=LIBRARY
           IEFC653I SUBSTITUTION JCL - DSN=&&GOSET(GO),DISP=(MOD,PASS),UNIT=SYSA
           DSNTYPE=LIBRARY
        19 XXSYSDEFSD DD  DUMMY
        20 XXSYSIN    DD  DUMMY
           //*PLI.STEPLIB DD DISP=SHR,UNIT=3390,VOL=SER=Z9RES2,DSN=IEL360.SIBMZC
  STMT NO. MESSAGE
         2 IEFC001I PROCEDURE IBMZCB WAS EXPANDED USING SYSTEM LIBRARY VENDOR.PR
 ICH70001I KC03CCA  LAST ACCESS AT 08:41:56 ON WEDNESDAY, APRIL 7, 2021
 IEFA111I KC03CCAP IS USING THE FOLLOWING JOB RELATED SETTINGS:
          SWA=ABOVE,TIOT SIZE=32K,DSENQSHR=DISALLOW,GDGBIAS=JOB
 IEF236I ALLOC. FOR KC03CCAP PLI STEP1
 IEF237I 1A1C ALLOCATED TO STEPLIB
 IEF237I 1001 ALLOCATED TO
 IEF237I JES2 ALLOCATED TO SYSPRINT
 IEF237I JES2 ALLOCATED TO SYSOUT
 IGD101I SMS ALLOCATED TO DDNAME (SYSLIN  )
         DSN (SYS21097.T084352.RA000.KC03CCAP.LOADSET.H01 )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IGD101I SMS ALLOCATED TO DDNAME (SYSUT1  )
         DSN (SYS21097.T084352.RA000.KC03CCAP.SYSUT1.H01  )
         STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
         VOL SER NOS= TEMP00
 IGD103I SMS ALLOCATED TO DDNAME SYSIN
 IEF237I 1001 ALLOCATED TO SYSLIB
 IEF237I JES2 ALLOCATED TO SYS00001
 IEF285I   KC03CCA.KC03CCAP.JOB06993.D0000104.?         SYSOUT
 IEF142I KC03CCAP PLI STEP1 - STEP WAS EXECUTED - COND CODE 0000
 IEF285I   IEL520.SIBMZCMP                              KEPT
 IEF285I   VOL SER NOS= VTIELP.
 IEF285I   CEE.SCEERUN                                  KEPT
 IEF285I   VOL SER NOS= VTMVSC.
 IEF285I   KC03CCA.KC03CCAP.JOB06993.D0000101.?         SYSOUT
 IEF285I   KC03CCA.KC03CCAP.JOB06993.D0000102.?         SYSOUT
 IGD106I SYS21097.T084352.RA000.KC03CCAP.LOADSET.H01  PASSED,    DDNAME=SYSLIN
 IGD105I SYS21097.T084352.RA000.KC03CCAP.SYSUT1.H01   DELETED,   DDNAME=SYSUT1
 IGD104I KC03CCA.LANG.SOURCE                          RETAINED,  DDNAME=SYSIN
 IEF285I   CEE.SCEESAMP                                 KEPT
 IEF285I   VOL SER NOS= VTMVSC.
 IEF373I STEP/PLI     /START 2021097.0843
 IEF032I STEP/PLI     /STOP  2021097.0843
         CPU:     0 HR  00 MIN  00.06 SEC    SRB:     0 HR  00 MIN  00.00 SEC
         VIRT:    96K  SYS:   456K  EXT:    80388K  SYS:    14416K
         ATB- REAL:                  1068K  SLOTS:                     0K
              VIRT- ALLOC:      15M SHRD:       0M
 IEF236I ALLOC. FOR KC03CCAP BIND STEP1
 IEF237I 1001 ALLOCATED TO SYSLIB
 IEF237I JES2 ALLOCATED TO SYSPRINT
 IGD103I SMS ALLOCATED TO DDNAME SYSLIN
 IEF237I DMY  ALLOCATED TO
 IGD103I SMS ALLOCATED TO DDNAME SYSLMOD
 IEF237I DMY  ALLOCATED TO SYSDEFSD
 IEF142I KC03CCAP BIND STEP1 - STEP WAS EXECUTED - COND CODE 0000
 IEF285I   CEE.SCEELKED                                 KEPT
 IEF285I   VOL SER NOS= VTMVSC.
 IEF285I   KC03CCA.KC03CCAP.JOB06993.D0000103.?         SYSOUT
 IGD105I SYS21097.T084352.RA000.KC03CCAP.LOADSET.H01  DELETED,   DDNAME=SYSLIN
 IGD104I KC03CCA.LANG.LOAD                            RETAINED,  DDNAME=SYSLMOD
 IEF373I STEP/BIND    /START 2021097.0843
 IEF032I STEP/BIND    /STOP  2021097.0843
         CPU:     0 HR  00 MIN  00.04 SEC    SRB:     0 HR  00 MIN  00.01 SEC
         VIRT:   100K  SYS:   264K  EXT:     2124K  SYS:    12164K
         ATB- REAL:                  1068K  SLOTS:                     0K
              VIRT- ALLOC:      15M SHRD:       0M
 IEF375I  JOB/KC03CCAP/START 2021097.0843
 IEF033I  JOB/KC03CCAP/STOP  2021097.0843
         CPU:     0 HR  00 MIN  00.10 SEC    SRB:     0 HR  00 MIN  00.01 SEC
15655-PL5  IBM(R) Enterprise PL/I for z/OS       V5.R2.M4 (Built:20190123)
-                     Options Specified
0  Install:
0  Command: OBJECT,OPTIONS,SOURCE
0  Line.File Process Statements
0     1.0    *PROCESS MACRO;
0  Install:
-                     Options Used
0     NOAGGREGATE
        ARCH(9)
        ASSERT(ENTRY)
      NOATTRIBUTES
        BACKREG(5)
        BIFPREC(15)
        BLANK('05'x)
        BLKOFF
        BRACKETS('Ý¨')
        CASE(UPPER)
        CASERULES( KEYWORD( MIXED ) )
        CEESTART(FIRST)
        CHECK( NOCONFORMANCE NOSTORAGE )
        CMPAT(V2)
        CODEPAGE(01140)
      NOCOMMON
      NOCOMPILE(S)
      NOCOPYRIGHT
        CSECT
        CSECTCUT(4)
        CURRENCY('$')
      NODBCS
      NODBRMLIB
        DD('SYSPRINT','SYSIN','SYSLIB','SYSPUNCH','SYSLIN','SYSADATA','SYSXMLSD'
        DDSQL('')
        DECIMAL( FOFLONASGN NOFOFLONMULT NOFORCEDSIGN NOTRUNCFLOAT )
      NODECOMP
        DEFAULT(IBM ASSIGNABLE NOINITFILL NONCONNECTED
                DESCRIPTOR DESCLOCATOR DUMMY(ALIGNED) ORDINAL(MIN) NOPADDING
                BYADDR RETURNS(BYADDR) LINKAGE(OPTLINK) NORETCODE
                NOINLINE REORDER NOOVERLAP NONRECURSIVE ALIGNED NULL370
                BIN1ARG PSEUDODUMMY NULLSTRADDR NULLSTRPTR(NULL) EVENDEC
                SHORT(HEXADEC) EBCDIC HEXADEC NATIVE NATIVEADDR E(HEXADEC))
        DEPRECATE(
                   BUILTIN()
                   ENTRY()
                   INCLUDE()
                   VARIABLE()
                   STMT()
                 )
        DEPRECATENEXT(
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0                      BUILTIN()
                       ENTRY()
                       INCLUDE()
                       VARIABLE()
                       STMT()
                     )
        DISPLAY( WTO )
      NODLLINIT
      NOEXIT
        EXPORTALL
        EXTRN(FULL)
        FILEREF
        FLAG(W)
        FLOAT( NODFP )
        FLOATINMATH(ASIS)
      NOGOFF
      NOGONUMBER
      NOGRAPHIC
        HEADER(SOURCE)
      NOIGNORE
        INCAFTER(PROCESS(""))
      NOINCDIR
        INCLUDE
      NOINITAUTO
      NOINITBASED
      NOINITCTL
      NOINITSTATIC
      NOINSOURCE
      NOINTERRUPT
        JSON( CASE(UPPER) )
        LANGLVL(OS)
        LIMITS( EXTNAME(7) FIXEDBIN(31,63) FIXEDDEC(15,31) NAME(100) STRING(32K)
        LINECOUNT(60)
      NOLINEDIR
      NOLIST
        LISTVIEW(SOURCE)
        LP(32)
   +    MACRO
      NOMAP
        MARGINI(' ')
   +    MARGINS(2,72)
        MAXBRANCH(2000)
        MAXGEN(100000)
        MAXINIT(65536)
        MAXMEM(1048576)
        MAXMSG(W 250)
        MAXNEST( BLOCK(17) DO(17) IF(17) )
        MAXSTMT(4096,8192)
        MAXTEMP(50000)
      NOMDECK
      NOMSGSUMMARY
      NONAME
        NAMES('@#$' '@#$')
        NATLANG(ENU)
      NONEST
        NOT('^')
      NONULLDATE
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0       NUMBER
        OBJECT
      NOOFFSET
        OFFSETSIZE(4)
      NOONSNAP
        OPTIMIZE(0)
   +    OPTIONS
        OR('|')
   +    PP( MACRO )
      NOPPCICS
      NOPPINCLUDE
        PPLIST(KEEP)
      NOPPMACRO
      NOPPSQL
      NOPPTRACE
        PRECTYPE(ANS)
        PREFIX(CONVERSION FIXEDOVERFLOW INVALIDOP OVERFLOW
               NOSIZE NOSTRINGRANGE NOSTRINGSIZE NOSUBSCRIPTRANGE
               UNDERFLOW ZERODIVIDE)
      NOPROCEED(S)
        PROCESS(DELETE)
        QUOTE('"')
        REDUCE
      NORENT
        RESEXP
        RESPECT()
        RTCHECK( NONULLPTR )
        RULES(IBM BYNAME COMPLEX CONTROLLED NODECSIZE
              ELSEIF EVENDEC GOTO GLOBAL GLOBALDO
              NOLAXBIF LAXCONV NOLAXCTL NOLAXDCL NOLAXDEF
              LAXENTRY LAXEXPORTS LAXFIELDS NOLAXIF LAXINOUT LAXINTERFACE LAXLIN
              LAXMARGINS LAXNESTED LAXPACKAGE LAXPARMS LAXPUNC LAXQUAL
              LAXRETURN NOLAXSCALE(LOOSE,ALL) LAXSEMI LAXSTG
              LAXSTMT
              NOLAXSTRZ NOMULTICLOSE MULTIENTRY MULTIEXIT MULTISEMI
              PADDING PROCENDONLY RECURSIVE SELFASSIGN
              UNREF UNREFBASED UNREFCTL UNREFDEFINED
              UNREFENTRY UNREFFILE UNREFSTATIC YY )
      NOSEMANTIC(S)
      NOSERVICE
   +    SOURCE
        SPILL(512)
        STATIC(SHORT)
      NOSTDSYS
      NOSTMT
      NOSTORAGE
        STRINGOFGRAPHIC(GRAPHIC)
      NOSYNTAX(S)
        SYSPARM('')
        SYSTEM(MVS)
      NOTEST
        UNROLL(AUTO)
        USAGE( HEX(SIZE) ROUND(IBM) REGEX(RESET) SUBSTR(STRICT) UNSPEC(IBM) )
        WIDECHAR(BIGENDIAN)
        WINDOW(1950)
        WRITABLE
        XINFO( NODEF NOMSG NOSYM NOSYN NOXML )
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0       XML( CASE(UPPER) XMLATTR(APOSTROPHE) )
      NOXREF
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0 Compiler Source
0    Line.File
0       2.0      /*compilation unit: cecgxmp                                 */
        3.0      /************************************************************/
        4.0      /* This routine demonstrates the following LE/370 callable **/
        5.0      /* services:  CEEMOUT, CEELOCT, and CEEDATE.               **/
        6.0      /*                                                         **/
        7.0      /************************************************************/
        8.0      CECGXMP: PROC OPTIONS(MAIN);
        9.0      /* Declarations for callable services */
       10.0       /* BEGIN %INCLUDE CEEIBMAW */
        1.1      /**************************************************************
        2.1      /*
        3.1      /* Licensed Materials - Property of IBM
        4.1      /*
        5.1      /* 5650-ZOS 5688-198
        6.1      /*
        7.1      /* Copyright IBM Corp. 1993, 2017  All Rights Reserved.
        8.1      /*
        9.1      /* US Government Users Restricted Rights - Use, duplication or
       10.1      /* disclosure restricted by GSA ADP Schedule Contract with
       11.1      /* IBM Corp.
       12.1      /*
       13.1      /* STATUS = HLE77B0
       14.1      /*
       15.1      /**************************************************************
       16.1      /**************************************************************
       17.1      *
       18.1      *   CEEIBMAW
       19.1      *
       20.1      *   Language Environment AWI Declarations for PL/I
       21.1      *
       22.1      *   This file provides declarations for the set of all
       23.1      *   Language Environment AWIs.
       24.1      *
       25.1      *   It may be %Included in a PL/I source program to obtain
       26.1      *   consistent declarations for the services.
       27.1      *
       28.1      ***************************************************************
       29.1
      206.1
      207.1
      208.1
      209.1      /*=============================================================
      210.1      /*
      211.1      /*                Declaration of Language Environment
      212.1      /*                Application Writer Interfaces (AWIs)
      213.1      /*
      214.1      /*=============================================================
      215.1
      216.1
      217.1      /*-------------------------------------------------------------
      218.1      /*
      219.1      /*                       General Callable AWIs
      220.1      /*
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     221.1      /*-------------------------------------------------------------
      222.1
      223.1      DECLARE  CEERAN0  /* Genterate Uniform Random Numbers
      224.1         ENTRY(REAL FIXED BINARY(31,0),       /* seed -- value to gen
      224.1      ndom       IN/OUT*/
      225.1                           /*    number:  use 0 to start new
      226.1                           /*    sequence based on GMT, else
      227.1                           /*    re-use prior value each time.
      228.1               REAL FLOAT DECIMAL(16),     /* pseudo-random number un
      228.1              OUTPUT*/
      229.1                           /*    distributed over the open
      230.1                           /*    interval from zero to one
      231.1               1 OPTIONAL ,
      231.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      231.1                               254 /*MsgNum*/         REAL FIXED BINA
      231.1      ,                                           254 /*Flags*/,
      231.1                                                    255 /*Flags_Case
      231.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      231.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      231.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      231.1      CHAR(3),                                        254 /*I_S_Info
      231.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      232.1            OPTIONS( ASSEMBLER );
      233.1
      234.1
      235.1      DECLARE  CEETEST  /* invoke debug tool
      236.1         ENTRY(CHAR(*) VAR OPTIONAL,  /* command_string
      237.1               1 OPTIONAL ,
      237.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      237.1                               254 /*MsgNum*/         REAL FIXED BINA
      237.1      ,                                           254 /*Flags*/,
      237.1                                                    255 /*Flags_Case
      237.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      237.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      237.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      237.1      CHAR(3),                                        254 /*I_S_Info
      237.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      238.1            OPTIONS( ASSEMBLER );
      239.1
      240.1
      241.1      DECLARE  CEETDLI  /* Invoke IMS interface with IMS parameter li
      242.1         ENTRY          /* Parameter types vary by IMS function.
      243.1            OPTIONS( ASSEMBLER );
      244.1
      245.1
      246.1      DECLARE  CEE3DMP  /* Generate Dump
      247.1         ENTRY(CHAR(80),   /* title
      248.1               CHAR(255),  /* options --          objects to dump
      249.1                           /*    ENCLave(ALL)  = dump all current enc
      250.1                           /*    ENCLave(n)    = dump fixed # of encl
      251.1                           /*    ENCLave(CURrent)=dump only current e
      252.1                           /*    THRead(ALL)   = all threads in encla
      253.1                           /*    THRead(CURrent) = only current threa
      254.1                           /*    (NO)TRACEback = dump calling program
      255.1                           /*    (NO)FILEs     = dump file attrs & bu
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     256.1                           /*    (NO)VARiables = dump vars, args & re
      257.1                           /*    (NO)BLOCKs    = dump Language Enviro
      258.1                           /*                       control blocks
      259.1                           /*    (NO)STORage   = dump program storage
      260.1                           /*    StackFrame(n) = number of stack fram
      261.1                           /*    StackFrame(ALL)    to be dumped
      262.1                           /*    PAGEsize(n)   = number of lines per
      263.1                           /*    FNAME(ddname) = file to receive dump
      264.1                           /*    (NO)CONDition = dump Condition
      265.1                           /*                       Information Block
      266.1                           /*    (NO)ENTRY     = dump caller's descri
      267.1                           /*                       and registers
      268.1                           /* Notes:
      269.1                           /*    Abbreviation is shown in uppercase
      270.1                           /*    defaults are THREAD(CURRENT) TRACEBA
      271.1                           /*                 FILES VARIABLES NOBLOCK
      272.1                           /*                 NOSTORAGE CONDITION ENT
      273.1                           /*                 STACKFRAME(ALL) ENCLAVE
      274.1                           /*                 PAGESIZE(60) FNAME(CEED
      275.1               1 OPTIONAL ,
      275.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      275.1                               254 /*MsgNum*/         REAL FIXED BINA
      275.1      ,                                           254 /*Flags*/,
      275.1                                                    255 /*Flags_Case
      275.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      275.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      275.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      275.1      CHAR(3),                                        254 /*I_S_Info
      275.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      276.1            OPTIONS( ASSEMBLER );
      277.1
      278.1
      279.1      DECLARE  CEE3GRC  /* Get enclave Return Code
      280.1         ENTRY(REAL FIXED BINARY(31,0),                    /* return
      280.1                 OUTPUT*/
      281.1               1 OPTIONAL ,
      281.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      281.1                               254 /*MsgNum*/         REAL FIXED BINA
      281.1      ,                                           254 /*Flags*/,
      281.1                                                    255 /*Flags_Case
      281.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      281.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      281.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      281.1      CHAR(3),                                        254 /*I_S_Info
      281.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      282.1            OPTIONS( ASSEMBLER );
      283.1
      284.1
      285.1      DECLARE  CEE3PRM  /* Query Parameter String
      286.1         ENTRY(CHAR(80),     /* char_parm_string
      286.1      */
      287.1               1 OPTIONAL ,
      287.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      287.1                               254 /*MsgNum*/         REAL FIXED BINA
      287.1      ,                                           254 /*Flags*/,
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     287.1                                                    255 /*Flags_Case
      287.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      287.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      287.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      287.1      CHAR(3),                                        254 /*I_S_Info
      287.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      288.1            OPTIONS( ASSEMBLER );
      289.1
      290.1      DECLARE  CEE3PR2  /* Query Parameter String
      291.1         ENTRY(REAL FIXED BINARY(31,0),    /* parm_length
      291.1                 IN/OUT*/
      292.1               CHAR(255) VAR, /* char_parm_string
      292.1      TPUT*/
      293.1               1 OPTIONAL ,
      293.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      293.1                               254 /*MsgNum*/         REAL FIXED BINA
      293.1      ,                                           254 /*Flags*/,
      293.1                                                    255 /*Flags_Case
      293.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      293.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      293.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      293.1      CHAR(3),                                        254 /*I_S_Info
      293.1      REAL FIXED BINARY(31,0))  /* feedback cond. Token    OUTPUT*/
      294.1            OPTIONS( ASSEMBLER );
      295.1
      296.1      DECLARE  CEE3SRC  /* Set enclave Return Code
      297.1         ENTRY(REAL FIXED BINARY(31,0),                     /* return
      297.1                  INPUT*/
      298.1               1 OPTIONAL ,
      298.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      298.1                               254 /*MsgNum*/         REAL FIXED BINA
      298.1      ,                                           254 /*Flags*/,
      298.1                                                    255 /*Flags_Case
      298.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      298.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      298.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      298.1      CHAR(3),                                        254 /*I_S_Info
      298.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      299.1            OPTIONS( ASSEMBLER );
      300.1
      301.1
      302.1      DECLARE  CEE3SRP  /* Set Resume Point
      303.1         ENTRY(POINTER,                  /* ptr to mach. state block
      304.1               1 OPTIONAL ,
      304.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      304.1                               254 /*MsgNum*/         REAL FIXED BINA
      304.1      ,                                           254 /*Flags*/,
      304.1                                                    255 /*Flags_Case
      304.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      304.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      304.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      304.1      CHAR(3),                                        254 /*I_S_Info
      304.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      305.1            OPTIONS( ASSEMBLER );
      306.1
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     307.1
      308.1      DECLARE  CEE3USR  /* Set or Query User Area Fields
      309.1         ENTRY(REAL FIXED BINARY(31,0),       /* function_code:
      309.1                  INPUT*/
      310.1                           /*    1 = SET
      311.1                           /*    2 = QUERY
      312.1               REAL FIXED BINARY(31,0),       /* field_number (1 or 2
      312.1                       */
      313.1               REAL FIXED BINARY(31,0),       /* field_value:
      313.1                       */
      314.1                           /*                     for function 1 --
      315.1                           /*                     for function 2 --
      316.1               1 OPTIONAL ,
      316.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      316.1                               254 /*MsgNum*/         REAL FIXED BINA
      316.1      ,                                           254 /*Flags*/,
      316.1                                                    255 /*Flags_Case
      316.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      316.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      316.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      316.1      CHAR(3),                                        254 /*I_S_Info
      316.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      317.1            OPTIONS( ASSEMBLER );
      318.1
      319.1
      320.1      DECLARE  CEEENV  /* Process environment variables
      321.1         ENTRY(REAL FIXED BINARY(31,0),        /* Function Code:
      321.1                  INPUT*/
      322.1                            /*   1 = get existing environment variabl
      323.1                            /*   2 = add environmnet variable
      324.1                            /*   3 = clear environment variables
      325.1                            /*   4 = delete existing environment vari
      326.1                            /*   5 = overwrite existing environment
      327.1                            /*       variable
      328.1               REAL FIXED BINARY(31,0),        /* Environment variabl
      328.1      ength       INPUT*/
      329.1               CHARACTER(*),/* Environment variable name
      330.1               REAL FIXED BINARY(31,0),        /* Environment variabl
      330.1      length     IN/OUT*/
      331.1               POINTER,     /* Environment variable value
      332.1               1 OPTIONAL ,
      332.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      332.1                               254 /*MsgNum*/         REAL FIXED BINA
      332.1      ,                                           254 /*Flags*/,
      332.1                                                    255 /*Flags_Case
      332.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      332.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      332.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      332.1      CHAR(3),                                        254 /*I_S_Info
      332.1      REAL FIXED BINARY(31,0))  /* Feedback cond. token    OUTPUT*/
      333.1            OPTIONS( ASSEMBLER );
      334.1
      335.1      DECLARE  CEE3DLY /* Delay enclave's process for # of seconds
      336.1         ENTRY(REAL FIXED BINARY(31,0),        /* number of seconds
      336.1                  INPUT*/
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     337.1               1 OPTIONAL ,
      337.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      337.1                               254 /*MsgNum*/         REAL FIXED BINA
      337.1      ,                                           254 /*Flags*/,
      337.1                                                    255 /*Flags_Case
      337.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      337.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      337.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      337.1      CHAR(3),                                        254 /*I_S_Info
      337.1      REAL FIXED BINARY(31,0)) /* Feedback cond. token     OUTPUT*/
      338.1            OPTIONS( ASSEMBLER );
      339.1
      340.1
      341.1      DECLARE  CEEDLYM /* Delay enclave's process for # of millisecon
      342.1         ENTRY(REAL FIXED BINARY(31,0),        /* number of milliseco
      342.1                  INPUT*/
      343.1               1 OPTIONAL ,
      343.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      343.1                               254 /*MsgNum*/         REAL FIXED BINA
      343.1      ,                                           254 /*Flags*/,
      343.1                                                    255 /*Flags_Case
      343.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      343.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      343.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      343.1      CHAR(3),                                        254 /*I_S_Info
      343.1      REAL FIXED BINARY(31,0)) /* Feedback cond. token     OUTPUT*/
      344.1            OPTIONS( ASSEMBLER );
      345.1
      346.1
      347.1      DECLARE  CEEGTJS /* Retrieve the value of an exported JCL symbo
      348.1         ENTRY(REAL FIXED BINARY(31,0),        /* Function Code:
      348.1                  INPUT*/
      349.1                            /*   1 = retrieve the value of an exporte
      350.1                            /*   JCL symbol.
      351.1               CHAR(255) VAR,     /* JCL symbol name
      351.1      NPUT*/
      352.1               CHAR(255),   /* value of the JCL symbol
      353.1               REAL FIXED BINARY(31,0),        /* the length of the v
      353.1      the exported                             /* JCL symbol
      354.1                 OUTPUT*/
      355.1               1 OPTIONAL ,
      355.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      355.1                               254 /*MsgNum*/         REAL FIXED BINA
      355.1      ,                                           254 /*Flags*/,
      355.1                                                    255 /*Flags_Case
      355.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      355.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      355.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      355.1      CHAR(3),                                        254 /*I_S_Info
      355.1      REAL FIXED BINARY(31,0))  /* Feedback cond. token    OUTPUT*/
      356.1            OPTIONS( ASSEMBLER );
      357.1
      360.1      DECLARE  CEERCDM /* Records information of the active condition
      361.1         ENTRY(REAL FIXED BINARY(31,0),        /* Function Code:
      361.1                  INPUT*/
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     362.1                            /*   1 = Record the dataset name of a dum
      363.1                            /*       for the active condition.
      364.1               POINTER BYVALUE,           /* Information
      365.1               1 OPTIONAL ,
      365.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      365.1                               254 /*MsgNum*/         REAL FIXED BINA
      365.1      ,                                           254 /*Flags*/,
      365.1                                                    255 /*Flags_Case
      365.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      365.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      365.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      365.1      CHAR(3),                                        254 /*I_S_Info
      365.1      REAL FIXED BINARY(31,0))  /* Feedback cond. token    OUTPUT*/
      366.1            OPTIONS( ASSEMBLER );
      368.1      /*-------------------------------------------------------------
      369.1      /*
      370.1      /*                        Storage Manager AWIs
      371.1      /*
      372.1      /*-------------------------------------------------------------
      373.1
      374.1      DECLARE  CEECRHP  /* CReate a HeaP
      375.1         ENTRY(REAL FIXED BINARY(31,0),       /* heap_id of the creat
      375.1                 OUTPUT*/
      376.1               REAL FIXED BINARY(31,0),       /* initial size, in byt
      376.1      eap to           */
      377.1                           /*    be created (0 for default)
      378.1               REAL FIXED BINARY(31,0),       /* increment - number o
      378.1      to extend heap   */
      379.1                           /*    when necessary to enlarge to satisfy
      380.1                           /*    a create request (0 for default)
      381.1               REAL FIXED BINARY(31,0),       /* options -
      381.1                  INPUT*/
      382.1                           /*    00  Use same attributes as the Initi
      383.1                           /*          Heap (copy from HEAP runtime o
      384.1                           /*    01  HEAP(,,,FREE) (location inherite
      385.1                           /*          from HEAP runtime option)
      386.1                           /*    70  HEAP(,,,KEEP) (location inherite
      387.1                           /*          from HEAP runtime option)
      388.1                           /*    71  HEAP(,,ANYWHERE,KEEP)
      389.1                           /*    72  HEAP(,,ANYWHERE,KEEP)
      390.1                           /*    73  HEAP(,,BELOW,KEEP)
      391.1                           /*    74  HEAP(,,BELOW,FREE)
      392.1                           /*    75  HEAP(,,ANYWHERE) (disposition
      393.1                           /*          inherited from HEAP runtime op
      394.1                           /*    76  HEAP(,,BELOW) (disposition inher
      395.1                           /*          from HEAP runtime option)
      396.1               1 OPTIONAL ,
      396.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      396.1                               254 /*MsgNum*/         REAL FIXED BINA
      396.1      ,                                           254 /*Flags*/,
      396.1                                                    255 /*Flags_Case
      396.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      396.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      396.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      396.1      CHAR(3),                                        254 /*I_S_Info
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     396.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      397.1            OPTIONS( ASSEMBLER );
      398.1
      399.1
      400.1      DECLARE  CEECZST  /* reallocate storage - Change siZe STorage
      401.1         ENTRY(POINTER,    /* Pointer storage block to be resized:
      402.1                           /*  INPUT: old addr of 1st byte of alloc m
      403.1                           /*  OUTPUT: new addr of 1st byte alloc'd m
      404.1               REAL FIXED BINARY(31,0),       /* Number of bytes of s
      404.1      o be             */
      405.1                           /*  allocated for the new storage block
      406.1               1 OPTIONAL ,
      406.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      406.1                               254 /*MsgNum*/         REAL FIXED BINA
      406.1      ,                                           254 /*Flags*/,
      406.1                                                    255 /*Flags_Case
      406.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      406.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      406.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      406.1      CHAR(3),                                        254 /*I_S_Info
      406.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      407.1            OPTIONS( ASSEMBLER );
      408.1
      409.1
      410.1      DECLARE  CEEDSHP  /* DiScard HeaP
      411.1         ENTRY(REAL FIXED BINARY(31,0),       /* ID of heap to be dis
      411.1                  INPUT*/
      412.1               1 OPTIONAL ,
      412.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      412.1                               254 /*MsgNum*/         REAL FIXED BINA
      412.1      ,                                           254 /*Flags*/,
      412.1                                                    255 /*Flags_Case
      412.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      412.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      412.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      412.1      CHAR(3),                                        254 /*I_S_Info
      412.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      413.1            OPTIONS( ASSEMBLER );
      414.1
      415.1
      416.1      DECLARE  CEEFRST  /* FRee STorage - deallocate at the specified
      417.1         ENTRY(POINTER,    /* Address of storage returned by previous
      418.1                           /*    CEEGTST call or a language intrinsic
      419.1                           /*    (such as ALLOCATE)
      420.1               1 OPTIONAL ,
      420.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      420.1                               254 /*MsgNum*/         REAL FIXED BINA
      420.1      ,                                           254 /*Flags*/,
      420.1                                                    255 /*Flags_Case
      420.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      420.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      420.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      420.1      CHAR(3),                                        254 /*I_S_Info
      420.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      421.1            OPTIONS( ASSEMBLER );
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     422.1
      423.1
      424.1      DECLARE  CEEGTST  /* GeT STorage - allocate in the designated h
      425.1         ENTRY(REAL FIXED BINARY(31,0),       /* ID of heap to alloca
      425.1      age from    INPUT*/
      426.1               REAL FIXED BINARY(31,0),       /* Number of bytes stor
      426.1      llocate     INPUT*/
      427.1               POINTER,    /* Address of first byte of
      428.1                           /*    allocated memory
      429.1               1 OPTIONAL ,
      429.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      429.1                               254 /*MsgNum*/         REAL FIXED BINA
      429.1      ,                                           254 /*Flags*/,
      429.1                                                    255 /*Flags_Case
      429.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      429.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      429.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      429.1      CHAR(3),                                        254 /*I_S_Info
      429.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      430.1            OPTIONS( ASSEMBLER );
      431.1
      432.1
      433.1      DECLARE  CEE3RPH  /* Set Report Heading
      434.1         ENTRY(CHAR(80),     /* report_heading
      434.1      */
      435.1               1 OPTIONAL ,
      435.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      435.1                               254 /*MsgNum*/         REAL FIXED BINA
      435.1      ,                                           254 /*Flags*/,
      435.1                                                    255 /*Flags_Case
      435.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      435.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      435.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      435.1      CHAR(3),                                        254 /*I_S_Info
      435.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      436.1            OPTIONS( ASSEMBLER );
      437.1
      438.1
      439.1
      440.1      /*-------------------------------------------------------------
      441.1      /*
      442.1      /*                      Condition Handling AWIs
      443.1      /*
      444.1      /*-------------------------------------------------------------
      445.1
      446.1      DECLARE  CEEDCOD  /* Decompose a COnDtion Token
      447.1         ENTRY(1 ,
      447.1       /*MsgSev*/         REAL FIXED BINARY(15,0),
      447.1                      254 /*MsgNum*/         REAL FIXED BINARY(15,0),
      447.1                                         254 /*Flags*/,
      447.1                                           255 /*Flags_Case    */  BI
      447.1      UNALIGNED,                              255 /*Flags_Severity*/
      447.1      UNALIGNED,                              255 /*Flags_Control */
      447.1      UNALIGNED,                            254 /*Facility_ID */   CH
      447.1                                            254 /*I_S_Info    */   RE
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     447.1       BINARY(31,0),  /* condition token to be decomposed  INPUT*/
      448.1               REAL FIXED BINARY(15,0),       /* condition ID (first
      448.1                 OUTPUT*/
      449.1                           /*    for Case 1:  Severity
      450.1                           /*    for Case 2:  Class_Code
      451.1               REAL FIXED BINARY(15,0),       /* condition ID (second
      451.1      )          OUTPUT*/
      452.1                           /*    for Case 1:  Msg_No
      453.1                           /*    for Case 2:  Cause_Code
      454.1               REAL FIXED BINARY(15,0),       /* Case (format) of con
      454.1      D:         OUTPUT*/
      455.1                           /*    0 = reserved
      456.1                           /*    1 = case 1
      457.1                           /*    2 = case 2
      458.1                           /*    3 = reserved
      459.1               REAL FIXED BINARY(15,0),       /* Severity of conditio
      459.1                 OUTPUT*/
      460.1                           /*    0 = Information only
      461.1                           /*    1 = Warning -- service completed,
      462.1                           /*                   probably correctly
      463.1                           /*    2 = Error detected -- correction
      464.1                           /*           attempted, service completed,
      465.1                           /*           perhaps incorrectly
      466.1                           /*    3 = Severe error -- service not comp
      467.1                           /*    4 = Critical error -- service not
      468.1                           /*           completed, condition signalle
      469.1               REAL FIXED BINARY(15,0),       /* control number - fla
      469.1      ibing aspects    */
      470.1                           /*       of the state of condition:
      471.1                           /*    1 = Facility_ID was assigned by IBM
      472.1                           /*    0 = Facility_ID was assigned by user
      473.1               CHAR(3),    /* Facility ID
      474.1                           /*    for Facility_ID assigned by IBM,
      475.1                           /*       first char will be "A" thru "I"
      476.1                           /*    for Facility_ID assigned by user,
      477.1                           /*       first char must NOT be "A" thru "
      478.1               REAL FIXED BINARY(31,0),       /* Instance Specific In
      478.1      Info)      OUTPUT*/
      479.1               1 OPTIONAL ,
      479.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      479.1                               254 /*MsgNum*/         REAL FIXED BINA
      479.1      ,                                           254 /*Flags*/,
      479.1                                                    255 /*Flags_Case
      479.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      479.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      479.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      479.1      CHAR(3),                                        254 /*I_S_Info
      479.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      480.1            OPTIONS( ASSEMBLER );
      481.1
      482.1
      483.1      DECLARE  CEEGPID  /* Get CEE version & Platform ID
      484.1         ENTRY(REAL FIXED BINARY(31,0),       /* 32-bit representatio
      484.1       version         */
      485.1                           /*    being run
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     486.1               REAL FIXED BINARY(31,0),       /* Platform currently p
      486.1      g:         OUTPUT*/
      487.1                           /*    2 = OS/2
      488.1                           /*    3 = S/370
      489.1                           /*    4 = AS/400
      490.1               1 OPTIONAL ,
      490.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      490.1                               254 /*MsgNum*/         REAL FIXED BINA
      490.1      ,                                           254 /*Flags*/,
      490.1                                                    255 /*Flags_Case
      490.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      490.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      490.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      490.1      CHAR(3),                                        254 /*I_S_Info
      490.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      491.1            OPTIONS( ASSEMBLER );
      492.1
      493.1      DECLARE  CEE3INF  /*Query Enclave Information
      494.1         ENTRY(REAL FIXED BINARY(31,0) OPTIONAL,    /* systemsubsys
      494.1                 IN/OUT*/
      495.1               REAL FIXED BINARY(31,0) OPTIONAL,    /* env-info
      495.1                 IN/OUT*/
      496.1               REAL FIXED BINARY(31,0) OPTIONAL,    /* member-id
      496.1                 IN/OUT*/
      497.1               REAL FIXED BINARY(31,0) OPTIONAL,    /* gpid
      497.1                 IN/OUT*/
      498.1               1 OPTIONAL ,
      498.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      498.1                               254 /*MsgNum*/         REAL FIXED BINA
      498.1      ,                                           254 /*Flags*/,
      498.1                                                    255 /*Flags_Case
      498.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      498.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      498.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      498.1      CHAR(3),                                        254 /*I_S_Info
      498.1      REAL FIXED BINARY(31,0))  /* feedback cond. Token    OUTPUT*/
      499.1            OPTIONS( ASSEMBLER );
      500.1
      501.1
      502.1      DECLARE CEEHDLR    /* Register user written condition HanDLer
      503.1         ENTRY(ENTRY, /* condition handler routine           INPUT*/
      504.1               *,              /* 32-bit token object
      505.1               1 OPTIONAL ,
      505.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      505.1                               254 /*MsgNum*/         REAL FIXED BINA
      505.1      ,                                           254 /*Flags*/,
      505.1                                                    255 /*Flags_Case
      505.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      505.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      505.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      505.1      CHAR(3),                                        254 /*I_S_Info
      505.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      506.1            OPTIONS( ASSEMBLER );
      507.1
      508.1
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     509.1      DECLARE CEEHDLU    /* Unregister user written condition HanDLer
      510.1         ENTRY(ENTRY, /* condition handler routine           INPUT*/
      511.1               1 OPTIONAL ,
      511.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      511.1                               254 /*MsgNum*/         REAL FIXED BINA
      511.1      ,                                           254 /*Flags*/,
      511.1                                                    255 /*Flags_Case
      511.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      511.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      511.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      511.1      CHAR(3),                                        254 /*I_S_Info
      511.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      512.1            OPTIONS( ASSEMBLER );
      513.1
      514.1
      515.1      DECLARE  CEEITOK  /* Return the Initial Condition Token
      516.1         ENTRY(1 ,
      516.1       /*MsgSev*/         REAL FIXED BINARY(15,0),
      516.1                      254 /*MsgNum*/         REAL FIXED BINARY(15,0),
      516.1                                         254 /*Flags*/,
      516.1                                           255 /*Flags_Case    */  BI
      516.1      UNALIGNED,                              255 /*Flags_Severity*/
      516.1      UNALIGNED,                              255 /*Flags_Control */
      516.1      UNALIGNED,                            254 /*Facility_ID */   CH
      516.1                                            254 /*I_S_Info    */   RE
      516.1       BINARY(31,0),  /* I_CTOK -- identifies initial condition */
      517.1                              /*    in current active data block
      518.1               1 OPTIONAL ,
      518.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      518.1                               254 /*MsgNum*/         REAL FIXED BINA
      518.1      ,                                           254 /*Flags*/,
      518.1                                                    255 /*Flags_Case
      518.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      518.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      518.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      518.1      CHAR(3),                                        254 /*I_S_Info
      518.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      519.1            OPTIONS( ASSEMBLER );
      520.1
      521.1
      522.1      DECLARE  CEEMRCE  /* Move Resume Cursor Explicit
      523.1         ENTRY(POINTER,                  /* ptr to mach. state block
      524.1               1 OPTIONAL ,
      524.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      524.1                               254 /*MsgNum*/         REAL FIXED BINA
      524.1      ,                                           254 /*Flags*/,
      524.1                                                    255 /*Flags_Case
      524.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      524.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      524.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      524.1      CHAR(3),                                        254 /*I_S_Info
      524.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      525.1            OPTIONS( ASSEMBLER );
      526.1
      527.1
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     528.1      DECLARE  CEEMRCR  /* Move Resume CursoR
      529.1         ENTRY(REAL FIXED BINARY(31,0),       /* indicates type of mo
      529.1                  INPUT*/
      530.1                           /*    0 = move resume cursor to call retur
      531.1                           /*       point for current stack frame
      532.1                           /*    1 = move Resume Cursor one stack fra
      533.1                           /*       prior to position of Handler Curs
      534.1                           /*       and move Handler Cursor to first
      535.1                           /*       handler of that stack frame
      536.1               1 OPTIONAL ,
      536.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      536.1                               254 /*MsgNum*/         REAL FIXED BINA
      536.1      ,                                           254 /*Flags*/,
      536.1                                                    255 /*Flags_Case
      536.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      536.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      536.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      536.1      CHAR(3),                                        254 /*I_S_Info
      536.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      537.1            OPTIONS( ASSEMBLER );
      538.1
      539.1
      540.1      DECLARE  CEENCOD  /* eNcode a COnDition token
      541.1         ENTRY(REAL FIXED BINARY(15,0),       /* condition ID  (first
      541.1      )           INPUT*/
      542.1                           /*    for Case 1:  Severity
      543.1                           /*    for Case 2:  Class_Code
      544.1               REAL FIXED BINARY(15,0),       /* condition ID (second
      544.1      )           INPUT*/
      545.1                           /*    for Case 1:  Msg_No
      546.1                           /*    for Case 2:  Cause_Code
      547.1               REAL FIXED BINARY(15,0),       /* Case (format) of con
      547.1      D:          INPUT*/
      548.1                           /*    1 = case 1
      549.1                           /*    2 = case 2
      550.1               REAL FIXED BINARY(15,0),       /* Severity of conditio
      550.1                  INPUT*/
      551.1                           /*    0 = Information only
      552.1                           /*    1 = Warning -- service completed,
      553.1                           /*                   probably correctly
      554.1                           /*    2 = Error detected -- correction
      555.1                           /*           attempted, service completed,
      556.1                           /*           perhaps incorrectly
      557.1                           /*    3 = Severe error -- service not comp
      558.1                           /*    4 = Critical error -- service not
      559.1                           /*           completed, condition signalle
      560.1               REAL FIXED BINARY(15,0),       /* Control:
      560.1                  INPUT*/
      561.1                           /*    1 = Facility_ID was assigned by IBM
      562.1                           /*    0 = Facility_ID was assigned by user
      563.1               CHAR(3),    /* Facility_ID:
      564.1                           /*    for Facility_ID assigned by IBM,
      565.1                           /*       first char will be "A" thru "I"
      566.1                           /*    for Facility_ID assigned by user,
      567.1                           /*       first char must NOT be "A" thru "
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     568.1               REAL FIXED BINARY(31,0),       /* Instance Specific In
      568.1      Info)       INPUT*/
      569.1               1 ,
      569.1       /*MsgSev*/         REAL FIXED BINARY(15,0),
      569.1                      254 /*MsgNum*/         REAL FIXED BINARY(15,0),
      569.1                                         254 /*Flags*/,
      569.1                                           255 /*Flags_Case    */  BI
      569.1      UNALIGNED,                              255 /*Flags_Severity*/
      569.1      UNALIGNED,                              255 /*Flags_Control */
      569.1      UNALIGNED,                            254 /*Facility_ID */   CH
      569.1                                            254 /*I_S_Info    */   RE
      569.1       BINARY(31,0),  /* constructed Condition token      OUTPUT*/
      570.1               1 OPTIONAL ,
      570.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      570.1                               254 /*MsgNum*/         REAL FIXED BINA
      570.1      ,                                           254 /*Flags*/,
      570.1                                                    255 /*Flags_Case
      570.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      570.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      570.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      570.1      CHAR(3),                                        254 /*I_S_Info
      570.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      571.1            OPTIONS( ASSEMBLER );
      572.1
      573.1
      574.1      DECLARE  CEESGL   /* SiGnaL a condition
      575.1         ENTRY(1 ,
      575.1       /*MsgSev*/         REAL FIXED BINARY(15,0),
      575.1                      254 /*MsgNum*/         REAL FIXED BINARY(15,0),
      575.1                                         254 /*Flags*/,
      575.1                                           255 /*Flags_Case    */  BI
      575.1      UNALIGNED,                              255 /*Flags_Severity*/
      575.1      UNALIGNED,                              255 /*Flags_Control */
      575.1      UNALIGNED,                            254 /*Facility_ID */   CH
      575.1                                            254 /*I_S_Info    */   RE
      575.1       BINARY(31,0),  /* Condition to be raised           IN/OUT*/
      576.1               * OPTIONAL,    /* Qualifying_Data_Token:             I
      577.1                              /*    32-bit data object to be passed v
      578.1                              /*       the ISI to all condition handl
      579.1                              /*       called for this condition
      580.1               1 OPTIONAL ,
      580.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      580.1                               254 /*MsgNum*/         REAL FIXED BINA
      580.1      ,                                           254 /*Flags*/,
      580.1                                                    255 /*Flags_Case
      580.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      580.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      580.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      580.1      CHAR(3),                                        254 /*I_S_Info
      580.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      581.1            OPTIONS( ASSEMBLER );
      582.1
      583.1
      584.1      DECLARE  CEE3ABD  /* Terminate Enclave with an ABEND
      585.1         ENTRY(REAL FIXED BINARY(31,0),       /* Abend Code (0 to 409
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     585.1                  INPUT*/
      586.1               REAL FIXED BINARY(31,0))       /* timing:
      586.1                  INPUT*/
      587.1                           /*0 = issue ABEND immediately
      588.1                           /*    without any cleanup
      589.1                           /*1 = issue ABEND with cleanup and
      590.1                           /*    honoring TERMTHDACT
      591.1                           /*2 = issue ABEND with cleanup and
      592.1                           /*    supressing the CEEDUMP
      593.1                           /*3 = issue ABEND with cleanup and
      594.1                           /*    supressing both the system and CEEDU
      595.1                           /*4 = issue ABEND with cleanup and
      596.1                           /*    supressing the system dump
      597.1                           /*5 = issue ABEND with cleanup and
      598.1                           /*    forcing a system dump
      599.1            OPTIONS( ASSEMBLER );
      600.1
      601.1      DECLARE  CEE3AB2 /* Terminate Enclave with a Reason Code
      602.1        ENTRY(REAL FIXED BINARY(31,0),    /* Abend Code (0 to 4095)
      602.1                  INPUT*/
      603.1              REAL FIXED BINARY(31,0),    /* User specified Reason Co
      603.1                  INPUT*/
      604.1              REAL FIXED BINARY(31,0))    /* cleanup:
      604.1                  INPUT*/
      605.1                       /*    0 = issue ABEND immediately
      606.1                       /*        without any cleanup
      607.1                       /*    1 = issue ABEND with cleanup and
      608.1                       /*        honoring TERMTHDACT
      609.1                       /*    2 = issue ABEND with cleanup and
      610.1                       /*        supressing the CEEDUMP
      611.1                       /*    3 = issue ABEND with cleanup and
      612.1                       /*        supressing both the system and CEEDU
      613.1                       /*    4 = issue ABEND with cleanup and
      614.1                       /*        supressing the system dump
      615.1                       /*    5 = issue ABEND with cleanup and
      616.1                       /*        forcing a system dump
      617.1        OPTIONS( ASSEMBLER );
      618.1
      619.1      DECLARE  CEE3CIB  /* Get address of Condition Information Block
      620.1         ENTRY(1 OPTIONAL ,
      620.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      620.1                               254 /*MsgNum*/         REAL FIXED BINA
      620.1      ,                                           254 /*Flags*/,
      620.1                                                    255 /*Flags_Case
      620.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      620.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      620.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      620.1      CHAR(3),                                        254 /*I_S_Info
      620.1      REAL FIXED BINARY(31,0),  /* condition token passed   INPUT*/
      621.1                                          /*    into a user handler
      622.1               POINTER,    /* address of the CIB associated with
      623.1                           /*    the given condition token
      624.1               1 OPTIONAL ,
      624.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      624.1                               254 /*MsgNum*/         REAL FIXED BINA
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     624.1      ,                                           254 /*Flags*/,
      624.1                                                    255 /*Flags_Case
      624.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      624.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      624.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      624.1      CHAR(3),                                        254 /*I_S_Info
      624.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      625.1            OPTIONS( ASSEMBLER );
      626.1
      627.1
      628.1      DECLARE  CEE3CNC  /* Allow Nested Conditions
      629.1         ENTRY(REAL FIXED BINARY(31,0),       /* allow:
      629.1                  INPUT*/
      630.1                           /*    0 = do NOT allow nested conditions
      631.1                           /*    non-0 = do allow nested conditions
      632.1               1 OPTIONAL ,
      632.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      632.1                               254 /*MsgNum*/         REAL FIXED BINA
      632.1      ,                                           254 /*Flags*/,
      632.1                                                    255 /*Flags_Case
      632.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      632.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      632.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      632.1      CHAR(3),                                        254 /*I_S_Info
      632.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      633.1            OPTIONS( ASSEMBLER );
      634.1
      635.1
      636.1      DECLARE  CEE3GRN  /* Get Name of Routine that Incurred Conditio
      637.1         ENTRY(CHAR(80),     /* name
      637.1      */
      638.1               1 OPTIONAL ,
      638.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      638.1                               254 /*MsgNum*/         REAL FIXED BINA
      638.1      ,                                           254 /*Flags*/,
      638.1                                                    255 /*Flags_Case
      638.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      638.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      638.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      638.1      CHAR(3),                                        254 /*I_S_Info
      638.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      639.1            OPTIONS( ASSEMBLER );
      640.1
      641.1
      642.1      DECLARE  CEE3GRO  /* Get Offset of Routine that Incurred Condit
      643.1         ENTRY(REAL FIXED BINARY(31,0),       /* offset
      643.1                  INPUT*/
      644.1               1 OPTIONAL ,
      644.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      644.1                               254 /*MsgNum*/         REAL FIXED BINA
      644.1      ,                                           254 /*Flags*/,
      644.1                                                    255 /*Flags_Case
      644.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      644.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      644.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     644.1      CHAR(3),                                        254 /*I_S_Info
      644.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      645.1            OPTIONS( ASSEMBLER );
      646.1
      647.1
      648.1      DECLARE  CEE3SPM  /* Query and Modify Language Environment
      649.1                        /* Hardware Condition
      650.1         ENTRY(REAL FIXED BINARY(31,0),       /* function:
      650.1                  INPUT*/
      651.1                           /*    1 = SET
      652.1                           /*    2 = QUERY
      653.1                           /*    3 = PUSH
      654.1                           /*    4 = POP
      655.1                           /*    5 = PUSH and SET
      656.1               CHAR(80),     /* cond_string:
      656.1      */
      657.1                           /*                for functions 1 & 3 --
      658.1                           /*                for functions 2 & 4 --
      659.1                           /*    One or more of the following, separa
      660.1                           /*    by blanks or commas:
      661.1                           /*       "F" or "NOF" = FIXED OVERFLOW
      662.1                           /*       "D" or "NOD" = DECIMAL OVERFLOW
      663.1                           /*       "U" or "NOU" = EXPONENT UNDERFLOW
      664.1                           /*       "S" or "NOS" = SIGNIFICANCE
      665.1               1 OPTIONAL ,
      665.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      665.1                               254 /*MsgNum*/         REAL FIXED BINA
      665.1      ,                                           254 /*Flags*/,
      665.1                                                    255 /*Flags_Case
      665.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      665.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      665.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      665.1      CHAR(3),                                        254 /*I_S_Info
      665.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      666.1            OPTIONS( ASSEMBLER );
      667.1
      668.1
      669.1      /*-------------------------------------------------------------
      670.1      /*
      671.1      /*                        Message Services AWIs
      672.1      /*
      673.1      /*-------------------------------------------------------------
      674.1
      675.1
      676.1      DECLARE  CEECMI   /* Create Message Insert
      677.1         ENTRY(1 ,
      677.1       /*MsgSev*/         REAL FIXED BINARY(15,0),
      677.1                      254 /*MsgNum*/         REAL FIXED BINARY(15,0),
      677.1                                         254 /*Flags*/,
      677.1                                           255 /*Flags_Case    */  BI
      677.1      UNALIGNED,                              255 /*Flags_Severity*/
      677.1      UNALIGNED,                              255 /*Flags_Control */
      677.1      UNALIGNED,                            254 /*Facility_ID */   CH
      677.1                                            254 /*I_S_Info    */   RE
      677.1       BINARY(31,0), /* condition to insert message for   IN/OUT*/
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     678.1               REAL FIXED BINARY(31,0),            /* Insert sequence
      678.1                  INPUT*/
      679.1               CHAR(*) VAR,    /* Insert Data (up to 254 chars)
      680.1               1 OPTIONAL ,
      680.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      680.1                               254 /*MsgNum*/         REAL FIXED BINA
      680.1      ,                                           254 /*Flags*/,
      680.1                                                    255 /*Flags_Case
      680.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      680.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      680.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      680.1      CHAR(3),                                        254 /*I_S_Info
      680.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      681.1            OPTIONS( ASSEMBLER );
      682.1
      683.1
      684.1      DECLARE  CEEGQDT  /* Get Qualifying Data Token from ISI
      685.1         ENTRY(1 ,
      685.1       /*MsgSev*/         REAL FIXED BINARY(15,0),
      685.1                      254 /*MsgNum*/         REAL FIXED BINARY(15,0),
      685.1                                         254 /*Flags*/,
      685.1                                           255 /*Flags_Case    */  BI
      685.1      UNALIGNED,                              255 /*Flags_Severity*/
      685.1      UNALIGNED,                              255 /*Flags_Control */
      685.1      UNALIGNED,                            254 /*Facility_ID */   CH
      685.1                                            254 /*I_S_Info    */   RE
      685.1       BINARY(31,0),  /* condition for which the Q_Data_Token   */
      686.1                           /*      is to be retrieved
      687.1               *,          /* Q_Data_Token -- 32-bit data object
      688.1                           /*      placed in ISI by CEESGL
      689.1               1 OPTIONAL ,
      689.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      689.1                               254 /*MsgNum*/         REAL FIXED BINA
      689.1      ,                                           254 /*Flags*/,
      689.1                                                    255 /*Flags_Case
      689.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      689.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      689.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      689.1      CHAR(3),                                        254 /*I_S_Info
      689.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      690.1            OPTIONS( ASSEMBLER );
      691.1
      692.1
      693.1      DECLARE  CEEMGET  /* GET a Message
      694.1         ENTRY(1 ,
      694.1       /*MsgSev*/         REAL FIXED BINARY(15,0),
      694.1                      254 /*MsgNum*/         REAL FIXED BINARY(15,0),
      694.1                                         254 /*Flags*/,
      694.1                                           255 /*Flags_Case    */  BI
      694.1      UNALIGNED,                              255 /*Flags_Severity*/
      694.1      UNALIGNED,                              255 /*Flags_Control */
      694.1      UNALIGNED,                            254 /*Facility_ID */   CH
      694.1                                            254 /*I_S_Info    */   RE
      694.1       BINARY(31,0),    /* Condition token whose message is     */
      695.1                                /*    to be retreived & formatted
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     696.1               CHAR(80),          /* Message_Area to receive message
      696.1      */
      697.1               REAL FIXED BINARY(31,0),            /* Msg_Index:  cha
      697.1       msg       IN/OUT*/
      698.1               1 OPTIONAL ,
      698.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      698.1                               254 /*MsgNum*/         REAL FIXED BINA
      698.1      ,                                           254 /*Flags*/,
      698.1                                                    255 /*Flags_Case
      698.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      698.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      698.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      698.1      CHAR(3),                                        254 /*I_S_Info
      698.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      699.1            OPTIONS( ASSEMBLER );
      700.1
      701.1
      702.1      DECLARE  CEEMOUT  /* dispatch a Message
      703.1         ENTRY(CHAR(*) VAR,  /* Message_String
      704.1               REAL FIXED BINARY(31,0),          /* Destination_Code:
      704.1                  INPUT*/
      705.1                              /*    2 = log in system message file on
      706.1               1 OPTIONAL ,
      706.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      706.1                               254 /*MsgNum*/         REAL FIXED BINA
      706.1      ,                                           254 /*Flags*/,
      706.1                                                    255 /*Flags_Case
      706.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      706.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      706.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      706.1      CHAR(3),                                        254 /*I_S_Info
      706.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      707.1            OPTIONS( ASSEMBLER );
      708.1
      709.1
      710.1      DECLARE  CEEMSG   /* get, format, & dispatch a MeSsaGe
      711.1         ENTRY(1 ,
      711.1       /*MsgSev*/         REAL FIXED BINARY(15,0),
      711.1                      254 /*MsgNum*/         REAL FIXED BINARY(15,0),
      711.1                                         254 /*Flags*/,
      711.1                                           255 /*Flags_Case    */  BI
      711.1      UNALIGNED,                              255 /*Flags_Severity*/
      711.1      UNALIGNED,                              255 /*Flags_Control */
      711.1      UNALIGNED,                            254 /*Facility_ID */   CH
      711.1                                            254 /*I_S_Info    */   RE
      711.1       BINARY(31,0),  /* Cond_Token from Language Environment   */
      712.1                              /*   callable service
      713.1               REAL FIXED BINARY(31,0),          /* Destination_Code:
      713.1                  INPUT*/
      714.1                              /*    2 = log in system message file on
      715.1               1 OPTIONAL ,
      715.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      715.1                               254 /*MsgNum*/         REAL FIXED BINA
      715.1      ,                                           254 /*Flags*/,
      715.1                                                    255 /*Flags_Case
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     715.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      715.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      715.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      715.1      CHAR(3),                                        254 /*I_S_Info
      715.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      716.1            OPTIONS( ASSEMBLER );
      717.1
      718.1
      719.1      /*-------------------------------------------------------------
      720.1      /*
      721.1      /*                         Time and Date AWIs
      722.1      /*
      723.1      /*-------------------------------------------------------------
      724.1
      725.1      DECLARE  CEECBLDY /* convert date to COBOL Lilian format
      726.1         ENTRY(CHAR(*) VAR,  /* input_char_date
      727.1               CHAR(*) VAR,  /* input format picture_string
      728.1               REAL FIXED BINARY(31,0),          /* return code:
      728.1                 OUTPUT*/
      729.1                              /*    00=successful completion
      730.1                              /*    02=year value (YY) not recognized
      731.1                              /*       for given Japanese Era <JJJJ>
      732.1                              /*    03=Japanese Era <JJJJ> or ROC
      733.1                              /*        Era <CCCC> not recognized
      734.1                              /*    04=day value (DD -- Gregorian, DD
      735.1                              /*       -- Julian) is outside valid ra
      736.1                              /*       (returned for invalid dates su
      737.1                              /*       as 2/31/88 and 88.367)
      738.1                              /*    08=month value is outside valid r
      739.1                              /*       1-12 or month is spelled incor
      740.1                              /*    12=date is less than 15 October 1
      741.1                              /*       or greater than 31 December 99
      742.1                              /*    16=input-value does not match pic
      743.1                              /*       specification (non-numeric cha
      744.1                              /*       detected where numeric expecte
      745.1                              /*    24=picture-string specification e
      746.1                              /*    28=descriptors indicate arguments
      747.1                              /*       of the correct length or data
      748.1                              /*    32=data descriptors for arguments
      749.1                              /*       found (or caller not
      750.1                              /*       Language Environment-enabled)
      751.1               REAL FIXED BINARY(31,0))          /* COBOL Lilian date
      751.1                 OUTPUT*/
      752.1            OPTIONS( ASSEMBLER );
      753.1
      754.1      DECLARE  CEEDATE  /* convert Lilian date to character format
      755.1         ENTRY(REAL FIXED BINARY(31,0),          /* input_Lilian_date
      755.1                  INPUT*/
      756.1               CHAR(*) VAR,  /* picture_string
      757.1               CHAR(80),        /* output_char_date
      757.1      */
      758.1               1 OPTIONAL ,
      758.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      758.1                               254 /*MsgNum*/         REAL FIXED BINA
      758.1      ,                                           254 /*Flags*/,
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     758.1                                                    255 /*Flags_Case
      758.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      758.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      758.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      758.1      CHAR(3),                                        254 /*I_S_Info
      758.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      759.1            OPTIONS( ASSEMBLER );
      760.1
      761.1
      762.1      DECLARE  CEEDATM  /* convert seconds to character timestamp
      763.1         ENTRY(REAL FLOAT DECIMAL(16),        /* input_seconds
      763.1               INPUT*/
      764.1               CHAR(*) VAR,  /* picture_string
      765.1               CHAR(80),        /* output_timestamp
      765.1      */
      766.1               1 OPTIONAL ,
      766.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      766.1                               254 /*MsgNum*/         REAL FIXED BINA
      766.1      ,                                           254 /*Flags*/,
      766.1                                                    255 /*Flags_Case
      766.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      766.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      766.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      766.1      CHAR(3),                                        254 /*I_S_Info
      766.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      767.1            OPTIONS( ASSEMBLER );
      768.1
      769.1
      770.1      DECLARE  CEEDAYS  /* convert date to Lilian format
      771.1         ENTRY(CHAR(*) VAR,  /* input_char_date
      772.1               CHAR(*) VAR,  /* input format picture_string
      773.1               REAL FIXED BINARY(31,0),          /* Lilian date
      773.1                 OUTPUT*/
      774.1               1 OPTIONAL ,
      774.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      774.1                               254 /*MsgNum*/         REAL FIXED BINA
      774.1      ,                                           254 /*Flags*/,
      774.1                                                    255 /*Flags_Case
      774.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      774.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      774.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      774.1      CHAR(3),                                        254 /*I_S_Info
      774.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      775.1            OPTIONS( ASSEMBLER );
      776.1
      777.1
      778.1      DECLARE  CEEDYWK  /* calculate DaY of WeeK from Lilian date
      779.1         ENTRY(REAL FIXED BINARY(31,0),       /* input_Lilian_date
      779.1                  INPUT*/
      780.1               REAL FIXED BINARY(31,0),       /* output_day_no
      780.1                 OUTPUT*/
      781.1               1 OPTIONAL ,
      781.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      781.1                               254 /*MsgNum*/         REAL FIXED BINA
      781.1      ,                                           254 /*Flags*/,
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     781.1                                                    255 /*Flags_Case
      781.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      781.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      781.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      781.1      CHAR(3),                                        254 /*I_S_Info
      781.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      782.1            OPTIONS( ASSEMBLER );
      783.1
      784.1
      785.1      DECLARE  CEEGMT   /* get current Greenwich Mean Time
      786.1         ENTRY(REAL FIXED BINARY(31,0),       /* Lilian Greenwich Mea
      786.1                 OUTPUT*/
      787.1               REAL FLOAT DECIMAL(16),     /* output_GMT_seconds
      787.1              OUTPUT*/
      788.1               1 OPTIONAL ,
      788.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      788.1                               254 /*MsgNum*/         REAL FIXED BINA
      788.1      ,                                           254 /*Flags*/,
      788.1                                                    255 /*Flags_Case
      788.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      788.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      788.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      788.1      CHAR(3),                                        254 /*I_S_Info
      788.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      789.1            OPTIONS( ASSEMBLER );
      790.1
      791.1
      792.1      DECLARE  CEEGMTO  /* get Offset from Greenwich Mean Time
      793.1         ENTRY(REAL FIXED BINARY(31,0),       /* offset_hours (range
      793.1      13) GMT    OUTPUT*/
      794.1               REAL FIXED BINARY(31,0),       /* offset_minutes (rang
      794.1      9)         OUTPUT*/
      795.1               REAL FLOAT DECIMAL(16),     /* offset_seconds (-43200
      795.1      0)      OUTPUT*/
      796.1               1 OPTIONAL ,
      796.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      796.1                               254 /*MsgNum*/         REAL FIXED BINA
      796.1      ,                                           254 /*Flags*/,
      796.1                                                    255 /*Flags_Case
      796.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      796.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      796.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      796.1      CHAR(3),                                        254 /*I_S_Info
      796.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      797.1            OPTIONS( ASSEMBLER );
      798.1
      799.1
      800.1      DECLARE  CEEISEC  /* convert Integers to SEConds
      801.1         ENTRY(REAL FIXED BINARY(31,0),       /* input_year
      801.1                  INPUT*/
      802.1               REAL FIXED BINARY(31,0),       /* input_month
      802.1                  INPUT*/
      803.1               REAL FIXED BINARY(31,0),       /* input_day
      803.1                  INPUT*/
      804.1               REAL FIXED BINARY(31,0),       /* input_hours
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     804.1                  INPUT*/
      805.1               REAL FIXED BINARY(31,0),       /* input_minutes
      805.1                  INPUT*/
      806.1               REAL FIXED BINARY(31,0),       /* input_seconds
      806.1                  INPUT*/
      807.1               REAL FIXED BINARY(31,0),       /* input_milliseconds
      807.1                  INPUT*/
      808.1               REAL FLOAT DECIMAL(16),     /* output_seconds
      808.1              OUTPUT*/
      809.1               1 OPTIONAL ,
      809.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      809.1                               254 /*MsgNum*/         REAL FIXED BINA
      809.1      ,                                           254 /*Flags*/,
      809.1                                                    255 /*Flags_Case
      809.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      809.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      809.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      809.1      CHAR(3),                                        254 /*I_S_Info
      809.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      810.1            OPTIONS( ASSEMBLER );
      811.1
      812.1
      813.1      DECLARE  CEELOCT  /* get current LOCal Time
      814.1         ENTRY(REAL FIXED BINARY(31,0),         /* output_Lilian
      814.1                 OUTPUT*/
      815.1               REAL FLOAT DECIMAL(16),       /* output_seconds
      815.1              OUTPUT*/
      816.1               CHAR(17),     /* output_Gregorian YYYYMMDDhhmmss999
      817.1               1 OPTIONAL ,
      817.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      817.1                               254 /*MsgNum*/         REAL FIXED BINA
      817.1      ,                                           254 /*Flags*/,
      817.1                                                    255 /*Flags_Case
      817.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      817.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      817.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      817.1      CHAR(3),                                        254 /*I_S_Info
      817.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      818.1            OPTIONS( ASSEMBLER );
      819.1
      820.1
      821.1      DECLARE  CEESCEN  /* Set the Century Window
      822.1         ENTRY(REAL FIXED BINARY(31,0),         /* century_start (0 t
      822.1                  INPUT*/
      823.1               1 OPTIONAL ,
      823.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      823.1                               254 /*MsgNum*/         REAL FIXED BINA
      823.1      ,                                           254 /*Flags*/,
      823.1                                                    255 /*Flags_Case
      823.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      823.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      823.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      823.1      CHAR(3),                                        254 /*I_S_Info
      823.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      824.1            OPTIONS( ASSEMBLER );
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     825.1
      826.1
      827.1      DECLARE  CEESECI  /* convert SEConds to Integers
      828.1         ENTRY(REAL FLOAT DECIMAL(16),     /* input_seconds
      828.1               INPUT*/
      829.1               REAL FIXED BINARY(31,0),       /* output_year
      829.1                 OUTPUT*/
      830.1               REAL FIXED BINARY(31,0),       /* output_month
      830.1                 OUTPUT*/
      831.1               REAL FIXED BINARY(31,0),       /* output_day
      831.1                 OUTPUT*/
      832.1               REAL FIXED BINARY(31,0),       /* output_hours
      832.1                 OUTPUT*/
      833.1               REAL FIXED BINARY(31,0),       /* output_minutes
      833.1                 OUTPUT*/
      834.1               REAL FIXED BINARY(31,0),       /* output_seconds
      834.1                 OUTPUT*/
      835.1               REAL FIXED BINARY(31,0),       /* output_milliseconds
      835.1                 OUTPUT*/
      836.1               1 OPTIONAL ,
      836.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      836.1                               254 /*MsgNum*/         REAL FIXED BINA
      836.1      ,                                           254 /*Flags*/,
      836.1                                                    255 /*Flags_Case
      836.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      836.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      836.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      836.1      CHAR(3),                                        254 /*I_S_Info
      836.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      837.1            OPTIONS( ASSEMBLER );
      838.1
      839.1
      840.1      DECLARE  CEESECS  /* convert timestamp to number of SECondS
      841.1         ENTRY(CHAR(*) VAR,  /* input_timestamp
      842.1               CHAR(*) VAR,  /* picture_string
      843.1               REAL FLOAT DECIMAL(16),        /* output_seconds
      843.1              OUTPUT*/
      844.1               1 OPTIONAL ,
      844.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      844.1                               254 /*MsgNum*/         REAL FIXED BINA
      844.1      ,                                           254 /*Flags*/,
      844.1                                                    255 /*Flags_Case
      844.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      844.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      844.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      844.1      CHAR(3),                                        254 /*I_S_Info
      844.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      845.1            OPTIONS( ASSEMBLER );
      846.1
      847.1
      848.1      DECLARE  CEEQCEN  /* Query the Century Window
      849.1         ENTRY(REAL FIXED BINARY(31,0),         /* century_start (0 t
      849.1                 OUTPUT*/
      850.1               1 OPTIONAL ,
      850.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     850.1                               254 /*MsgNum*/         REAL FIXED BINA
      850.1      ,                                           254 /*Flags*/,
      850.1                                                    255 /*Flags_Case
      850.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      850.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      850.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      850.1      CHAR(3),                                        254 /*I_S_Info
      850.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      851.1            OPTIONS( ASSEMBLER );
      852.1
      853.1
      854.1      DECLARE  CEEUTC   /* get Coordinated Universal Time (alias CEEG
      855.1         ENTRY(REAL FIXED BINARY(31,0),       /* Lilian Greenwich Mea
      855.1                 OUTPUT*/
      856.1               REAL FLOAT DECIMAL(16),     /* output_GMT_seconds
      856.1              OUTPUT*/
      857.1               1 OPTIONAL ,
      857.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      857.1                               254 /*MsgNum*/         REAL FIXED BINA
      857.1      ,                                           254 /*Flags*/,
      857.1                                                    255 /*Flags_Case
      857.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      857.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      857.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      857.1      CHAR(3),                                        254 /*I_S_Info
      857.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      858.1            OPTIONS( ASSEMBLER );
      859.1
      860.1
      861.1      /*-------------------------------------------------------------
      862.1      /*
      863.1      /*                  National Language Support AWIs
      864.1      /*
      865.1      /*-------------------------------------------------------------
      866.1
      867.1      DECLARE  CEEFMDA  /* Obtain Default Date Format
      868.1         ENTRY(CHAR(2),      /* country_code
      869.1               CHAR(80),       /* date_picture_string
      869.1      */
      870.1               1 OPTIONAL ,
      870.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      870.1                               254 /*MsgNum*/         REAL FIXED BINA
      870.1      ,                                           254 /*Flags*/,
      870.1                                                    255 /*Flags_Case
      870.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      870.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      870.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      870.1      CHAR(3),                                        254 /*I_S_Info
      870.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      871.1            OPTIONS( ASSEMBLER );
      872.1
      873.1
      874.1      DECLARE  CEEFMDT  /* Obtain Default Date and Time Format
      875.1         ENTRY(CHAR(2),      /* country_code
      876.1               CHAR(80),       /* datetime_string (picture)
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     876.1      */
      877.1               1 OPTIONAL ,
      877.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      877.1                               254 /*MsgNum*/         REAL FIXED BINA
      877.1      ,                                           254 /*Flags*/,
      877.1                                                    255 /*Flags_Case
      877.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      877.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      877.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      877.1      CHAR(3),                                        254 /*I_S_Info
      877.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      878.1            OPTIONS( ASSEMBLER );
      879.1
      880.1
      881.1      DECLARE  CEEFMTM  /* Obtain Default Time Format
      882.1         ENTRY(CHAR(2),      /* country_code
      883.1               CHAR(80),       /* time_picture_string
      883.1      */
      884.1               1 OPTIONAL ,
      884.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      884.1                               254 /*MsgNum*/         REAL FIXED BINA
      884.1      ,                                           254 /*Flags*/,
      884.1                                                    255 /*Flags_Case
      884.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      884.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      884.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      884.1      CHAR(3),                                        254 /*I_S_Info
      884.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      885.1            OPTIONS( ASSEMBLER );
      886.1
      887.1
      888.1      DECLARE  CEE3CTY  /* Set Default Country
      889.1         ENTRY(REAL FIXED BINARY(31,0),       /* function:
      889.1                  INPUT*/
      890.1                           /*    1 = SET
      891.1                           /*    2 = QUERY
      892.1                           /*    3 = PUSH
      893.1                           /*    4 = POP
      894.1               CHAR(2),    /* country code:
      895.1                           /*                for functions 1 & 3 --
      896.1                           /*                for functions 2 & 4 --
      897.1               1 OPTIONAL ,
      897.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      897.1                               254 /*MsgNum*/         REAL FIXED BINA
      897.1      ,                                           254 /*Flags*/,
      897.1                                                    255 /*Flags_Case
      897.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      897.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      897.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      897.1      CHAR(3),                                        254 /*I_S_Info
      897.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      898.1            OPTIONS( ASSEMBLER );
      899.1
      900.1
      901.1      DECLARE  CEE3LNG  /* Set National Language
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     902.1         ENTRY(REAL FIXED BINARY(31,0),       /* function:
      902.1                  INPUT*/
      903.1                           /*    1 = SET
      904.1                           /*    2 = QUERY
      905.1                           /*    3 = PUSH
      906.1                           /*    4 = POP
      907.1               CHAR(3),    /* desired_language:
      908.1                           /*                for functions 1 & 3 --
      909.1                           /*                for functions 2 & 4 --
      910.1               1 OPTIONAL ,
      910.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      910.1                               254 /*MsgNum*/         REAL FIXED BINA
      910.1      ,                                           254 /*Flags*/,
      910.1                                                    255 /*Flags_Case
      910.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      910.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      910.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      910.1      CHAR(3),                                        254 /*I_S_Info
      910.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      911.1            OPTIONS( ASSEMBLER );
      912.1
      913.1
      914.1      DECLARE  CEE3MCS  /* Obtain Default Currency Symbol
      915.1         ENTRY(CHAR(2),    /* country_code
      916.1               CHAR(4),    /* currency_symbol
      917.1               1 OPTIONAL ,
      917.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      917.1                               254 /*MsgNum*/         REAL FIXED BINA
      917.1      ,                                           254 /*Flags*/,
      917.1                                                    255 /*Flags_Case
      917.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      917.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      917.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      917.1      CHAR(3),                                        254 /*I_S_Info
      917.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      918.1            OPTIONS( ASSEMBLER );
      919.1
      920.1
      921.1      DECLARE  CEE3MC2  /* Obtain Default Currency Symbol
      922.1         ENTRY(CHAR(2),    /* country_code
      923.1               CHAR(4),    /* currency_symbol
      924.1               CHAR(3),    /* international_currency_symbol
      925.1               1 OPTIONAL ,
      925.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      925.1                               254 /*MsgNum*/         REAL FIXED BINA
      925.1      ,                                           254 /*Flags*/,
      925.1                                                    255 /*Flags_Case
      925.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      925.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      925.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      925.1      CHAR(3),                                        254 /*I_S_Info
      925.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      926.1            OPTIONS( ASSEMBLER );
      927.1
      928.1
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     929.1      DECLARE  CEE3MDS  /* Obtain Default Decimal Separator
      930.1         ENTRY(CHAR(2),      /* country_code
      931.1               CHAR(2),      /* decimal_separator
      932.1               1 OPTIONAL ,
      932.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      932.1                               254 /*MsgNum*/         REAL FIXED BINA
      932.1      ,                                           254 /*Flags*/,
      932.1                                                    255 /*Flags_Case
      932.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      932.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      932.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      932.1      CHAR(3),                                        254 /*I_S_Info
      932.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      933.1            OPTIONS( ASSEMBLER );
      934.1
      935.1
      936.1      DECLARE  CEE3MTS  /* Obtain Default Thousands Separator
      937.1         ENTRY(CHAR(2),    /* country_code
      938.1               CHAR(2),    /* thousands_separator
      939.1               1 OPTIONAL ,
      939.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      939.1                               254 /*MsgNum*/         REAL FIXED BINA
      939.1      ,                                           254 /*Flags*/,
      939.1                                                    255 /*Flags_Case
      939.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      939.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      939.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      939.1      CHAR(3),                                        254 /*I_S_Info
      939.1      REAL FIXED BINARY(31,0))  /* feedback cond. token    OUTPUT*/
      940.1            OPTIONS( ASSEMBLER );
      941.1
      942.1
      943.1      /*-------------------------------------------------------------
      944.1      /*
      945.1      /*                      Math Services AWIs
      946.1      /*
      947.1      /*-------------------------------------------------------------
      948.1
      949.1      DECLARE  CEESDABS /* Scalar Double real ABSolute value
      950.1         ENTRY(REAL FLOAT DECIMAL(16),                    /* argument
      950.1               INPUT*/
      951.1               1 OPTIONAL ,
      951.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      951.1                               254 /*MsgNum*/         REAL FIXED BINA
      951.1      ,                                           254 /*Flags*/,
      951.1                                                    255 /*Flags_Case
      951.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      951.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      951.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      951.1      CHAR(3),                                        254 /*I_S_Info
      951.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
      952.1               REAL FLOAT DECIMAL(16))                    /* result
      952.1              OUTPUT*/
      953.1            OPTIONS( ASSEMBLER );
      954.1
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     955.1
      956.1      DECLARE  CEESDACS /* Scalar Double real circular ArcCoSine
      957.1         ENTRY(REAL FLOAT DECIMAL(16),                    /* argument
      957.1               INPUT*/
      958.1               1 OPTIONAL ,
      958.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      958.1                               254 /*MsgNum*/         REAL FIXED BINA
      958.1      ,                                           254 /*Flags*/,
      958.1                                                    255 /*Flags_Case
      958.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      958.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      958.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      958.1      CHAR(3),                                        254 /*I_S_Info
      958.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
      959.1               REAL FLOAT DECIMAL(16))                    /* result i
      959.1      s       OUTPUT*/
      960.1            OPTIONS( ASSEMBLER );
      961.1
      962.1
      963.1      DECLARE  CEESDASN /* Scalar Double real circular ArcSiNe
      964.1         ENTRY(REAL FLOAT DECIMAL(16),                    /* argument
      964.1               INPUT*/
      965.1               1 OPTIONAL ,
      965.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      965.1                               254 /*MsgNum*/         REAL FIXED BINA
      965.1      ,                                           254 /*Flags*/,
      965.1                                                    255 /*Flags_Case
      965.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      965.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      965.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      965.1      CHAR(3),                                        254 /*I_S_Info
      965.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
      966.1               REAL FLOAT DECIMAL(16))                    /* result i
      966.1      s       OUTPUT*/
      967.1            OPTIONS( ASSEMBLER );
      968.1
      969.1
      970.1      DECLARE  CEESDATH /* Scalar Double real Hyperbolic ArcTangent
      971.1         ENTRY(REAL FLOAT DECIMAL(16),                    /* argument
      971.1               INPUT*/
      972.1               1 OPTIONAL ,
      972.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      972.1                               254 /*MsgNum*/         REAL FIXED BINA
      972.1      ,                                           254 /*Flags*/,
      972.1                                                    255 /*Flags_Case
      972.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      972.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      972.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      972.1      CHAR(3),                                        254 /*I_S_Info
      972.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
      973.1               REAL FLOAT DECIMAL(16))                    /* result i
      973.1      s       OUTPUT*/
      974.1            OPTIONS( ASSEMBLER );
      975.1
      976.1
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     977.1      DECLARE  CEESDATN /* Scalar Double real circular ArcTaNgent
      978.1         ENTRY(REAL FLOAT DECIMAL(16),                    /* argument
      978.1               INPUT*/
      979.1               1 OPTIONAL ,
      979.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      979.1                               254 /*MsgNum*/         REAL FIXED BINA
      979.1      ,                                           254 /*Flags*/,
      979.1                                                    255 /*Flags_Case
      979.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      979.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      979.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      979.1      CHAR(3),                                        254 /*I_S_Info
      979.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
      980.1               REAL FLOAT DECIMAL(16))                    /* result i
      980.1      s       OUTPUT*/
      981.1            OPTIONS( ASSEMBLER );
      982.1
      983.1
      984.1      DECLARE  CEESDAT2 /* Scalar Double real circular ArcTangent 2
      985.1         ENTRY(REAL FLOAT DECIMAL(16),                    /* argument
      985.1               INPUT*/
      986.1               REAL FLOAT DECIMAL(16),                    /* argument
      986.1               INPUT*/
      987.1               1 OPTIONAL ,
      987.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      987.1                               254 /*MsgNum*/         REAL FIXED BINA
      987.1      ,                                           254 /*Flags*/,
      987.1                                                    255 /*Flags_Case
      987.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      987.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      987.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      987.1      CHAR(3),                                        254 /*I_S_Info
      987.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
      988.1               REAL FLOAT DECIMAL(16))                    /* result i
      988.1      s       OUTPUT*/
      989.1            OPTIONS( ASSEMBLER );
      990.1
      991.1
      992.1      DECLARE  CEESDCOS /* Scalar Double real circular COSine
      993.1         ENTRY(REAL FLOAT DECIMAL(16),                    /* argument
      993.1      ans      INPUT*/
      994.1               1 OPTIONAL ,
      994.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
      994.1                               254 /*MsgNum*/         REAL FIXED BINA
      994.1      ,                                           254 /*Flags*/,
      994.1                                                    255 /*Flags_Case
      994.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
      994.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
      994.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
      994.1      CHAR(3),                                        254 /*I_S_Info
      994.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
      995.1               REAL FLOAT DECIMAL(16))                    /* result
      995.1              OUTPUT*/
      996.1            OPTIONS( ASSEMBLER );
      997.1
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     998.1
      999.1      DECLARE  CEESDCSH /* Scalar Double real Hyperbolic CoSine
     1000.1         ENTRY(REAL FLOAT DECIMAL(16),                    /* argument
     1000.1               INPUT*/
     1001.1               1 OPTIONAL ,
     1001.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1001.1                               254 /*MsgNum*/         REAL FIXED BINA
     1001.1      ,                                           254 /*Flags*/,
     1001.1                                                    255 /*Flags_Case
     1001.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1001.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1001.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1001.1      CHAR(3),                                        254 /*I_S_Info
     1001.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1002.1               REAL FLOAT DECIMAL(16))                    /* result
     1002.1              OUTPUT*/
     1003.1            OPTIONS( ASSEMBLER );
     1004.1
     1005.1
     1006.1      DECLARE  CEESDCTN /* Scalar Double real circular CoTaNgent
     1007.1         ENTRY(REAL FLOAT DECIMAL(16),                    /* argument
     1007.1      ans      INPUT*/
     1008.1               1 OPTIONAL ,
     1008.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1008.1                               254 /*MsgNum*/         REAL FIXED BINA
     1008.1      ,                                           254 /*Flags*/,
     1008.1                                                    255 /*Flags_Case
     1008.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1008.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1008.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1008.1      CHAR(3),                                        254 /*I_S_Info
     1008.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1009.1               REAL FLOAT DECIMAL(16))                    /* result
     1009.1              OUTPUT*/
     1010.1            OPTIONS( ASSEMBLER );
     1011.1
     1012.1
     1013.1      DECLARE  CEESDDIM /* Scalar Double real positive Difference
     1014.1         ENTRY(REAL FLOAT DECIMAL(16),                    /* argument
     1014.1               INPUT*/
     1015.1               REAL FLOAT DECIMAL(16),                    /* argument
     1015.1               INPUT*/
     1016.1               1 OPTIONAL ,
     1016.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1016.1                               254 /*MsgNum*/         REAL FIXED BINA
     1016.1      ,                                           254 /*Flags*/,
     1016.1                                                    255 /*Flags_Case
     1016.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1016.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1016.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1016.1      CHAR(3),                                        254 /*I_S_Info
     1016.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1017.1               REAL FLOAT DECIMAL(16))                    /* result
     1017.1              OUTPUT*/
     1018.1            OPTIONS( ASSEMBLER );
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1019.1
     1020.1
     1021.1      DECLARE  CEESDERC /* Scalar Double real ErroR function Compleme
     1022.1         ENTRY(REAL FLOAT DECIMAL(16),                    /* argument
     1022.1               INPUT*/
     1023.1               1 OPTIONAL ,
     1023.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1023.1                               254 /*MsgNum*/         REAL FIXED BINA
     1023.1      ,                                           254 /*Flags*/,
     1023.1                                                    255 /*Flags_Case
     1023.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1023.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1023.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1023.1      CHAR(3),                                        254 /*I_S_Info
     1023.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1024.1               REAL FLOAT DECIMAL(16))                    /* result
     1024.1              OUTPUT*/
     1025.1            OPTIONS( ASSEMBLER );
     1026.1
     1027.1
     1028.1      DECLARE  CEESDERF /* Scalar Double real ErroR Function
     1029.1         ENTRY(REAL FLOAT DECIMAL(16),                    /* argument
     1029.1               INPUT*/
     1030.1               1 OPTIONAL ,
     1030.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1030.1                               254 /*MsgNum*/         REAL FIXED BINA
     1030.1      ,                                           254 /*Flags*/,
     1030.1                                                    255 /*Flags_Case
     1030.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1030.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1030.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1030.1      CHAR(3),                                        254 /*I_S_Info
     1030.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1031.1               REAL FLOAT DECIMAL(16))                    /* result
     1031.1              OUTPUT*/
     1032.1            OPTIONS( ASSEMBLER );
     1033.1
     1034.1
     1035.1      DECLARE  CEESDEXP /* Scalar Double real EXPonent, base e
     1036.1         ENTRY(REAL FLOAT DECIMAL(16),                    /* argument
     1036.1      of e)    INPUT*/
     1037.1               1 OPTIONAL ,
     1037.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1037.1                               254 /*MsgNum*/         REAL FIXED BINA
     1037.1      ,                                           254 /*Flags*/,
     1037.1                                                    255 /*Flags_Case
     1037.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1037.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1037.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1037.1      CHAR(3),                                        254 /*I_S_Info
     1037.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1038.1               REAL FLOAT DECIMAL(16))                    /* result
     1038.1              OUTPUT*/
     1039.1            OPTIONS( ASSEMBLER );
     1040.1
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1041.1
     1042.1      DECLARE  CEESDGMA /* Scalar Double real GaMma function
     1043.1         ENTRY(REAL FLOAT DECIMAL(16),                    /* argument
     1043.1               INPUT*/
     1044.1               1 OPTIONAL ,
     1044.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1044.1                               254 /*MsgNum*/         REAL FIXED BINA
     1044.1      ,                                           254 /*Flags*/,
     1044.1                                                    255 /*Flags_Case
     1044.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1044.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1044.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1044.1      CHAR(3),                                        254 /*I_S_Info
     1044.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1045.1               REAL FLOAT DECIMAL(16))                    /* result
     1045.1              OUTPUT*/
     1046.1            OPTIONS( ASSEMBLER );
     1047.1
     1048.1
     1049.1      DECLARE  CEESDINT /* Scalar Double real truncation
     1050.1         ENTRY(REAL FLOAT DECIMAL(16),                    /* argument
     1050.1               INPUT*/
     1051.1               1 OPTIONAL ,
     1051.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1051.1                               254 /*MsgNum*/         REAL FIXED BINA
     1051.1      ,                                           254 /*Flags*/,
     1051.1                                                    255 /*Flags_Case
     1051.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1051.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1051.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1051.1      CHAR(3),                                        254 /*I_S_Info
     1051.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1052.1               REAL FLOAT DECIMAL(16))                    /* result
     1052.1              OUTPUT*/
     1053.1            OPTIONS( ASSEMBLER );
     1054.1
     1055.1
     1056.1      DECLARE  CEESDLG1 /* Scalar Double real LoG base 10
     1057.1         ENTRY(REAL FLOAT DECIMAL(16),                    /* argument
     1057.1               INPUT*/
     1058.1               1 OPTIONAL ,
     1058.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1058.1                               254 /*MsgNum*/         REAL FIXED BINA
     1058.1      ,                                           254 /*Flags*/,
     1058.1                                                    255 /*Flags_Case
     1058.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1058.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1058.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1058.1      CHAR(3),                                        254 /*I_S_Info
     1058.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1059.1               REAL FLOAT DECIMAL(16))                    /* result
     1059.1              OUTPUT*/
     1060.1            OPTIONS( ASSEMBLER );
     1061.1
     1062.1
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1063.1      DECLARE  CEESDLG2 /* Scalar Double real LoG base 2
     1064.1         ENTRY(REAL FLOAT DECIMAL(16),                    /* argument
     1064.1               INPUT*/
     1065.1               1 OPTIONAL ,
     1065.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1065.1                               254 /*MsgNum*/         REAL FIXED BINA
     1065.1      ,                                           254 /*Flags*/,
     1065.1                                                    255 /*Flags_Case
     1065.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1065.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1065.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1065.1      CHAR(3),                                        254 /*I_S_Info
     1065.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1066.1               REAL FLOAT DECIMAL(16))                    /* result
     1066.1              OUTPUT*/
     1067.1            OPTIONS( ASSEMBLER );
     1068.1
     1069.1
     1070.1      DECLARE  CEESDLGM /* Scalar Double real LoG gaMma function
     1071.1         ENTRY(REAL FLOAT DECIMAL(16),                    /* argument
     1071.1               INPUT*/
     1072.1               1 OPTIONAL ,
     1072.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1072.1                               254 /*MsgNum*/         REAL FIXED BINA
     1072.1      ,                                           254 /*Flags*/,
     1072.1                                                    255 /*Flags_Case
     1072.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1072.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1072.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1072.1      CHAR(3),                                        254 /*I_S_Info
     1072.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1073.1               REAL FLOAT DECIMAL(16))                    /* result
     1073.1              OUTPUT*/
     1074.1            OPTIONS( ASSEMBLER );
     1075.1
     1076.1
     1077.1      DECLARE  CEESDLOG /* Scalar Double real LOG base e
     1078.1         ENTRY(REAL FLOAT DECIMAL(16),                    /* argument
     1078.1               INPUT*/
     1079.1               1 OPTIONAL ,
     1079.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1079.1                               254 /*MsgNum*/         REAL FIXED BINA
     1079.1      ,                                           254 /*Flags*/,
     1079.1                                                    255 /*Flags_Case
     1079.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1079.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1079.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1079.1      CHAR(3),                                        254 /*I_S_Info
     1079.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1080.1               REAL FLOAT DECIMAL(16))                    /* result
     1080.1              OUTPUT*/
     1081.1            OPTIONS( ASSEMBLER );
     1082.1
     1083.1
     1084.1      DECLARE  CEESDMOD /* Scalar Double real MODular arithmetic
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1085.1         ENTRY(REAL FLOAT DECIMAL(16),                    /* argument
     1085.1               INPUT*/
     1086.1               REAL FLOAT DECIMAL(16),                    /* argument
     1086.1               INPUT*/
     1087.1               1 OPTIONAL ,
     1087.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1087.1                               254 /*MsgNum*/         REAL FIXED BINA
     1087.1      ,                                           254 /*Flags*/,
     1087.1                                                    255 /*Flags_Case
     1087.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1087.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1087.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1087.1      CHAR(3),                                        254 /*I_S_Info
     1087.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1088.1               REAL FLOAT DECIMAL(16))                    /* result
     1088.1              OUTPUT*/
     1089.1            OPTIONS( ASSEMBLER );
     1090.1
     1091.1
     1092.1      DECLARE  CEESDNIN /* Scalar Double real Nearest INteger
     1093.1         ENTRY(REAL FLOAT DECIMAL(16),                    /* argument
     1093.1               INPUT*/
     1094.1               1 OPTIONAL ,
     1094.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1094.1                               254 /*MsgNum*/         REAL FIXED BINA
     1094.1      ,                                           254 /*Flags*/,
     1094.1                                                    255 /*Flags_Case
     1094.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1094.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1094.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1094.1      CHAR(3),                                        254 /*I_S_Info
     1094.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1095.1               REAL FIXED BINARY(31,0))                      /* resul
     1095.1                 OUTPUT*/
     1096.1            OPTIONS( ASSEMBLER );
     1097.1
     1098.1
     1099.1      DECLARE  CEESDNWN /* Scalar Double real Nearest Whole Nunber
     1100.1         ENTRY(REAL FLOAT DECIMAL(16),                    /* argument
     1100.1               INPUT*/
     1101.1               1 OPTIONAL ,
     1101.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1101.1                               254 /*MsgNum*/         REAL FIXED BINA
     1101.1      ,                                           254 /*Flags*/,
     1101.1                                                    255 /*Flags_Case
     1101.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1101.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1101.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1101.1      CHAR(3),                                        254 /*I_S_Info
     1101.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1102.1               REAL FLOAT DECIMAL(16))                    /* result
     1102.1              OUTPUT*/
     1103.1            OPTIONS( ASSEMBLER );
     1104.1
     1105.1
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1106.1      DECLARE  CEESDSGN /* Scalar Double real transfer of SiGN
     1107.1         ENTRY(REAL FLOAT DECIMAL(16),                    /* argument
     1107.1               INPUT*/
     1108.1               REAL FLOAT DECIMAL(16),                    /* argument
     1108.1               INPUT*/
     1109.1               1 OPTIONAL ,
     1109.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1109.1                               254 /*MsgNum*/         REAL FIXED BINA
     1109.1      ,                                           254 /*Flags*/,
     1109.1                                                    255 /*Flags_Case
     1109.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1109.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1109.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1109.1      CHAR(3),                                        254 /*I_S_Info
     1109.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1110.1               REAL FLOAT DECIMAL(16))                    /* result
     1110.1              OUTPUT*/
     1111.1            OPTIONS( ASSEMBLER );
     1112.1
     1113.1
     1114.1      DECLARE  CEESDSIN /* Scalar Double real circular SINe
     1115.1         ENTRY(REAL FLOAT DECIMAL(16),                    /* argument
     1115.1      ans      INPUT*/
     1116.1               1 OPTIONAL ,
     1116.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1116.1                               254 /*MsgNum*/         REAL FIXED BINA
     1116.1      ,                                           254 /*Flags*/,
     1116.1                                                    255 /*Flags_Case
     1116.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1116.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1116.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1116.1      CHAR(3),                                        254 /*I_S_Info
     1116.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1117.1               REAL FLOAT DECIMAL(16))                    /* result
     1117.1              OUTPUT*/
     1118.1            OPTIONS( ASSEMBLER );
     1119.1
     1120.1
     1121.1      DECLARE  CEESDSNH /* Scalar Double real Hyperbolic SiNe
     1122.1         ENTRY(REAL FLOAT DECIMAL(16),                    /* argument
     1122.1               INPUT*/
     1123.1               1 OPTIONAL ,
     1123.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1123.1                               254 /*MsgNum*/         REAL FIXED BINA
     1123.1      ,                                           254 /*Flags*/,
     1123.1                                                    255 /*Flags_Case
     1123.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1123.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1123.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1123.1      CHAR(3),                                        254 /*I_S_Info
     1123.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1124.1               REAL FLOAT DECIMAL(16))                    /* result
     1124.1              OUTPUT*/
     1125.1            OPTIONS( ASSEMBLER );
     1126.1
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1127.1
     1128.1      DECLARE  CEESDSQT /* Scalar Double real SQuare rooT
     1129.1         ENTRY(REAL FLOAT DECIMAL(16),                    /* argument
     1129.1               INPUT*/
     1130.1               1 OPTIONAL ,
     1130.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1130.1                               254 /*MsgNum*/         REAL FIXED BINA
     1130.1      ,                                           254 /*Flags*/,
     1130.1                                                    255 /*Flags_Case
     1130.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1130.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1130.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1130.1      CHAR(3),                                        254 /*I_S_Info
     1130.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1131.1               REAL FLOAT DECIMAL(16))                    /* result
     1131.1              OUTPUT*/
     1132.1            OPTIONS( ASSEMBLER );
     1133.1
     1134.1
     1135.1      DECLARE  CEESDTAN /* Scalar Double real circular TANgent
     1136.1         ENTRY(REAL FLOAT DECIMAL(16),                    /* argument
     1136.1      ans      INPUT*/
     1137.1               1 OPTIONAL ,
     1137.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1137.1                               254 /*MsgNum*/         REAL FIXED BINA
     1137.1      ,                                           254 /*Flags*/,
     1137.1                                                    255 /*Flags_Case
     1137.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1137.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1137.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1137.1      CHAR(3),                                        254 /*I_S_Info
     1137.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1138.1               REAL FLOAT DECIMAL(16))                    /* result
     1138.1              OUTPUT*/
     1139.1            OPTIONS( ASSEMBLER );
     1140.1
     1141.1
     1142.1      DECLARE  CEESDTNH /* Scalar Double real Hyperbolic TaNgent
     1143.1         ENTRY(REAL FLOAT DECIMAL(16),                    /* argument
     1143.1               INPUT*/
     1144.1               1 OPTIONAL ,
     1144.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1144.1                               254 /*MsgNum*/         REAL FIXED BINA
     1144.1      ,                                           254 /*Flags*/,
     1144.1                                                    255 /*Flags_Case
     1144.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1144.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1144.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1144.1      CHAR(3),                                        254 /*I_S_Info
     1144.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1145.1               REAL FLOAT DECIMAL(16))                    /* result
     1145.1              OUTPUT*/
     1146.1            OPTIONS( ASSEMBLER );
     1147.1
     1148.1
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1149.1      DECLARE  CEESDXPD /* Scalar Double real EXponentiation
     1150.1         ENTRY(REAL FLOAT DECIMAL(16),                    /* argument
     1150.1               INPUT*/
     1151.1               REAL FLOAT DECIMAL(16),                    /* argument
     1151.1               INPUT*/
     1152.1               1 OPTIONAL ,
     1152.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1152.1                               254 /*MsgNum*/         REAL FIXED BINA
     1152.1      ,                                           254 /*Flags*/,
     1152.1                                                    255 /*Flags_Case
     1152.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1152.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1152.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1152.1      CHAR(3),                                        254 /*I_S_Info
     1152.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1153.1               REAL FLOAT DECIMAL(16))                    /* result
     1153.1              OUTPUT*/
     1154.1            OPTIONS( ASSEMBLER );
     1155.1
     1156.1
     1157.1      DECLARE  CEESDXPI /* Scalar Double real base raised to Integer
     1158.1         ENTRY(REAL FLOAT DECIMAL(16),                    /* argument
     1158.1               INPUT*/
     1159.1               REAL FIXED BINARY(31,0),                      /* argum
     1159.1      er)         INPUT*/
     1160.1               1 OPTIONAL ,
     1160.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1160.1                               254 /*MsgNum*/         REAL FIXED BINA
     1160.1      ,                                           254 /*Flags*/,
     1160.1                                                    255 /*Flags_Case
     1160.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1160.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1160.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1160.1      CHAR(3),                                        254 /*I_S_Info
     1160.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1161.1               REAL FLOAT DECIMAL(16))                    /* result
     1161.1              OUTPUT*/
     1162.1            OPTIONS( ASSEMBLER );
     1163.1
     1164.1
     1165.1      DECLARE  CEESEABS /* Scalar doublE complex ABSolute value
     1166.1         ENTRY(COMPLEX FLOAT BINARY(53),                  /* argument
     1166.1               INPUT*/
     1167.1               1 OPTIONAL ,
     1167.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1167.1                               254 /*MsgNum*/         REAL FIXED BINA
     1167.1      ,                                           254 /*Flags*/,
     1167.1                                                    255 /*Flags_Case
     1167.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1167.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1167.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1167.1      CHAR(3),                                        254 /*I_S_Info
     1167.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1168.1               REAL FLOAT DECIMAL(16))                    /* result
     1168.1              OUTPUT*/
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1169.1            OPTIONS( ASSEMBLER );
     1170.1
     1171.1
     1172.1      DECLARE  CEESEATH /* Scalar doublE complex Hyperbolic ArcTangen
     1173.1         ENTRY(COMPLEX FLOAT BINARY(53),                  /* argument
     1173.1               INPUT*/
     1174.1               1 OPTIONAL ,
     1174.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1174.1                               254 /*MsgNum*/         REAL FIXED BINA
     1174.1      ,                                           254 /*Flags*/,
     1174.1                                                    255 /*Flags_Case
     1174.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1174.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1174.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1174.1      CHAR(3),                                        254 /*I_S_Info
     1174.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1175.1               COMPLEX FLOAT BINARY(53))                  /* result
     1175.1              OUTPUT*/
     1176.1            OPTIONS( ASSEMBLER );
     1177.1
     1178.1
     1179.1      DECLARE  CEESEATN /* Scalar doublE complex circular ArcTaNgent
     1180.1         ENTRY(COMPLEX FLOAT BINARY(53),                  /* argument
     1180.1               INPUT*/
     1181.1               1 OPTIONAL ,
     1181.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1181.1                               254 /*MsgNum*/         REAL FIXED BINA
     1181.1      ,                                           254 /*Flags*/,
     1181.1                                                    255 /*Flags_Case
     1181.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1181.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1181.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1181.1      CHAR(3),                                        254 /*I_S_Info
     1181.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1182.1               COMPLEX FLOAT BINARY(53))                  /* result
     1182.1              OUTPUT*/
     1183.1            OPTIONS( ASSEMBLER );
     1184.1
     1185.1
     1186.1      DECLARE  CEESECJG /* ConJugate of Complex
     1187.1         ENTRY(COMPLEX FLOAT BINARY(53),                  /* argument
     1187.1               INPUT*/
     1188.1               1 OPTIONAL ,
     1188.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1188.1                               254 /*MsgNum*/         REAL FIXED BINA
     1188.1      ,                                           254 /*Flags*/,
     1188.1                                                    255 /*Flags_Case
     1188.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1188.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1188.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1188.1      CHAR(3),                                        254 /*I_S_Info
     1188.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1189.1               COMPLEX FLOAT BINARY(53))                  /* result
     1189.1              OUTPUT*/
     1190.1            OPTIONS( ASSEMBLER );
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1191.1
     1192.1
     1193.1      DECLARE  CEESECOS /* Scalar doublE complex circular COSine
     1194.1         ENTRY(COMPLEX FLOAT BINARY(53),                  /* argument
     1194.1               INPUT*/
     1195.1               1 OPTIONAL ,
     1195.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1195.1                               254 /*MsgNum*/         REAL FIXED BINA
     1195.1      ,                                           254 /*Flags*/,
     1195.1                                                    255 /*Flags_Case
     1195.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1195.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1195.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1195.1      CHAR(3),                                        254 /*I_S_Info
     1195.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1196.1               COMPLEX FLOAT BINARY(53))                  /* result
     1196.1              OUTPUT*/
     1197.1            OPTIONS( ASSEMBLER );
     1198.1
     1199.1
     1200.1      DECLARE  CEESECSH /* Scalar doublE complex Hyperbolic CoSine
     1201.1         ENTRY(COMPLEX FLOAT BINARY(53),                  /* argument
     1201.1               INPUT*/
     1202.1               1 OPTIONAL ,
     1202.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1202.1                               254 /*MsgNum*/         REAL FIXED BINA
     1202.1      ,                                           254 /*Flags*/,
     1202.1                                                    255 /*Flags_Case
     1202.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1202.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1202.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1202.1      CHAR(3),                                        254 /*I_S_Info
     1202.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1203.1               COMPLEX FLOAT BINARY(53))                  /* result
     1203.1              OUTPUT*/
     1204.1            OPTIONS( ASSEMBLER );
     1205.1
     1206.1
     1207.1      DECLARE  CEESEDVD /* Scalar doublE complex DiViDe
     1208.1         ENTRY(COMPLEX FLOAT BINARY(53),                  /* argument
     1208.1      nd)      INPUT*/
     1209.1               COMPLEX FLOAT BINARY(53),                  /* argument
     1209.1      r)       INPUT*/
     1210.1               1 OPTIONAL ,
     1210.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1210.1                               254 /*MsgNum*/         REAL FIXED BINA
     1210.1      ,                                           254 /*Flags*/,
     1210.1                                                    255 /*Flags_Case
     1210.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1210.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1210.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1210.1      CHAR(3),                                        254 /*I_S_Info
     1210.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1211.1               COMPLEX FLOAT BINARY(53))                  /* result (
     1211.1      )       OUTPUT*/
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1212.1            OPTIONS( ASSEMBLER );
     1213.1
     1214.1
     1215.1      DECLARE  CEESEEXP /* Scalar doublE complex EXPonent
     1216.1         ENTRY(COMPLEX FLOAT BINARY(53),                  /* argument
     1216.1      of e)    INPUT*/
     1217.1               1 OPTIONAL ,
     1217.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1217.1                               254 /*MsgNum*/         REAL FIXED BINA
     1217.1      ,                                           254 /*Flags*/,
     1217.1                                                    255 /*Flags_Case
     1217.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1217.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1217.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1217.1      CHAR(3),                                        254 /*I_S_Info
     1217.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1218.1               COMPLEX FLOAT BINARY(53))                  /* result
     1218.1              OUTPUT*/
     1219.1            OPTIONS( ASSEMBLER );
     1220.1
     1221.1
     1222.1      DECLARE  CEESEIMG /* IMaGinary part of Scalar doublE complex
     1223.1         ENTRY(COMPLEX FLOAT BINARY(53),                  /* argument
     1223.1               INPUT*/
     1224.1               1 OPTIONAL ,
     1224.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1224.1                               254 /*MsgNum*/         REAL FIXED BINA
     1224.1      ,                                           254 /*Flags*/,
     1224.1                                                    255 /*Flags_Case
     1224.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1224.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1224.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1224.1      CHAR(3),                                        254 /*I_S_Info
     1224.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1225.1               REAL FLOAT DECIMAL(16))                    /* result
     1225.1              OUTPUT*/
     1226.1            OPTIONS( ASSEMBLER );
     1227.1
     1228.1
     1229.1      DECLARE  CEESELOG /* Scalar doublE complex LOG base e
     1230.1         ENTRY(COMPLEX FLOAT BINARY(53),                  /* argument
     1230.1               INPUT*/
     1231.1               1 OPTIONAL ,
     1231.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1231.1                               254 /*MsgNum*/         REAL FIXED BINA
     1231.1      ,                                           254 /*Flags*/,
     1231.1                                                    255 /*Flags_Case
     1231.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1231.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1231.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1231.1      CHAR(3),                                        254 /*I_S_Info
     1231.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1232.1               COMPLEX FLOAT BINARY(53))                  /* result
     1232.1              OUTPUT*/
     1233.1            OPTIONS( ASSEMBLER );
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1234.1
     1235.1
     1236.1      DECLARE  CEESEMLT /* floating Scalar doublE complex MuLTiply
     1237.1         ENTRY(COMPLEX FLOAT BINARY(53),                  /* argument
     1237.1      licand)  INPUT*/
     1238.1               COMPLEX FLOAT BINARY(53),                  /* argument
     1238.1      lier)    INPUT*/
     1239.1               1 OPTIONAL ,
     1239.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1239.1                               254 /*MsgNum*/         REAL FIXED BINA
     1239.1      ,                                           254 /*Flags*/,
     1239.1                                                    255 /*Flags_Case
     1239.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1239.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1239.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1239.1      CHAR(3),                                        254 /*I_S_Info
     1239.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1240.1               COMPLEX FLOAT BINARY(53))                  /* result (
     1240.1              OUTPUT*/
     1241.1            OPTIONS( ASSEMBLER );
     1242.1
     1243.1
     1244.1      DECLARE  CEESESIN /* Scalar doublE complex circular SINe
     1245.1         ENTRY(COMPLEX FLOAT BINARY(53),                  /* argument
     1245.1               INPUT*/
     1246.1               1 OPTIONAL ,
     1246.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1246.1                               254 /*MsgNum*/         REAL FIXED BINA
     1246.1      ,                                           254 /*Flags*/,
     1246.1                                                    255 /*Flags_Case
     1246.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1246.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1246.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1246.1      CHAR(3),                                        254 /*I_S_Info
     1246.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1247.1               COMPLEX FLOAT BINARY(53))                  /* result
     1247.1              OUTPUT*/
     1248.1            OPTIONS( ASSEMBLER );
     1249.1
     1250.1
     1251.1      DECLARE  CEESESNH /* Scalar doublE complex Hyperbolic SiNe
     1252.1         ENTRY(COMPLEX FLOAT BINARY(53),                  /* argument
     1252.1               INPUT*/
     1253.1               1 OPTIONAL ,
     1253.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1253.1                               254 /*MsgNum*/         REAL FIXED BINA
     1253.1      ,                                           254 /*Flags*/,
     1253.1                                                    255 /*Flags_Case
     1253.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1253.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1253.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1253.1      CHAR(3),                                        254 /*I_S_Info
     1253.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1254.1               COMPLEX FLOAT BINARY(53))                  /* result
     1254.1              OUTPUT*/
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1255.1            OPTIONS( ASSEMBLER );
     1256.1
     1257.1
     1258.1      DECLARE  CEESESQT /* Scalar doublE complex SQuare rooT
     1259.1         ENTRY(COMPLEX FLOAT BINARY(53),                  /* argument
     1259.1               INPUT*/
     1260.1               1 OPTIONAL ,
     1260.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1260.1                               254 /*MsgNum*/         REAL FIXED BINA
     1260.1      ,                                           254 /*Flags*/,
     1260.1                                                    255 /*Flags_Case
     1260.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1260.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1260.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1260.1      CHAR(3),                                        254 /*I_S_Info
     1260.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1261.1               COMPLEX FLOAT BINARY(53))                  /* result
     1261.1              OUTPUT*/
     1262.1            OPTIONS( ASSEMBLER );
     1263.1
     1264.1
     1265.1      DECLARE  CEESETAN /* Scalar doublE complex circular TANgent
     1266.1         ENTRY(COMPLEX FLOAT BINARY(53),                  /* argument
     1266.1               INPUT*/
     1267.1               1 OPTIONAL ,
     1267.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1267.1                               254 /*MsgNum*/         REAL FIXED BINA
     1267.1      ,                                           254 /*Flags*/,
     1267.1                                                    255 /*Flags_Case
     1267.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1267.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1267.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1267.1      CHAR(3),                                        254 /*I_S_Info
     1267.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1268.1               COMPLEX FLOAT BINARY(53))                  /* result
     1268.1              OUTPUT*/
     1269.1            OPTIONS( ASSEMBLER );
     1270.1
     1271.1
     1272.1      DECLARE  CEESETNH /* Scalar doublE complex Hyperbolic TaNgent
     1273.1         ENTRY(COMPLEX FLOAT BINARY(53),                  /* argument
     1273.1               INPUT*/
     1274.1               1 OPTIONAL ,
     1274.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1274.1                               254 /*MsgNum*/         REAL FIXED BINA
     1274.1      ,                                           254 /*Flags*/,
     1274.1                                                    255 /*Flags_Case
     1274.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1274.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1274.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1274.1      CHAR(3),                                        254 /*I_S_Info
     1274.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1275.1               COMPLEX FLOAT BINARY(53))                  /* result
     1275.1              OUTPUT*/
     1276.1            OPTIONS( ASSEMBLER );
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1277.1
     1278.1
     1279.1      DECLARE  CEESEXPE /* Scalar doublE complex eXPonentiation
     1280.1         ENTRY(COMPLEX FLOAT BINARY(53),                  /* argument
     1280.1               INPUT*/
     1281.1               COMPLEX FLOAT BINARY(53),                  /* argument
     1281.1               INPUT*/
     1282.1               1 OPTIONAL ,
     1282.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1282.1                               254 /*MsgNum*/         REAL FIXED BINA
     1282.1      ,                                           254 /*Flags*/,
     1282.1                                                    255 /*Flags_Case
     1282.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1282.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1282.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1282.1      CHAR(3),                                        254 /*I_S_Info
     1282.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1283.1               COMPLEX FLOAT BINARY(53))                  /* result
     1283.1              OUTPUT*/
     1284.1            OPTIONS( ASSEMBLER );
     1285.1
     1286.1
     1287.1      DECLARE  CEESEXPI /* Scalar doublE complex eXPonent Integer
     1288.1         ENTRY(COMPLEX FLOAT BINARY(53),                  /* argument
     1288.1               INPUT*/
     1289.1               REAL FIXED BINARY(31,0),                      /* argum
     1289.1      er)         INPUT*/
     1290.1               1 OPTIONAL ,
     1290.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1290.1                               254 /*MsgNum*/         REAL FIXED BINA
     1290.1      ,                                           254 /*Flags*/,
     1290.1                                                    255 /*Flags_Case
     1290.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1290.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1290.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1290.1      CHAR(3),                                        254 /*I_S_Info
     1290.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1291.1               COMPLEX FLOAT BINARY(53))                  /* result
     1291.1              OUTPUT*/
     1292.1            OPTIONS( ASSEMBLER );
     1293.1
     1294.1
     1295.1      DECLARE  CEESIABS /* Scalar Integer ABSolute value
     1296.1         ENTRY(REAL FIXED BINARY(31,0),                      /* argum
     1296.1                  INPUT*/
     1297.1               1 OPTIONAL ,
     1297.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1297.1                               254 /*MsgNum*/         REAL FIXED BINA
     1297.1      ,                                           254 /*Flags*/,
     1297.1                                                    255 /*Flags_Case
     1297.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1297.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1297.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1297.1      CHAR(3),                                        254 /*I_S_Info
     1297.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1298.1               REAL FIXED BINARY(31,0))                      /* resul
     1298.1                 OUTPUT*/
     1299.1            OPTIONS( ASSEMBLER );
     1300.1
     1301.1
     1302.1      DECLARE  CEESIDIM /* Scalar Integer positive DIfference
     1303.1         ENTRY(REAL FIXED BINARY(31,0),                      /* argum
     1303.1                  INPUT*/
     1304.1               REAL FIXED BINARY(31,0),                      /* argum
     1304.1                  INPUT*/
     1305.1               1 OPTIONAL ,
     1305.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1305.1                               254 /*MsgNum*/         REAL FIXED BINA
     1305.1      ,                                           254 /*Flags*/,
     1305.1                                                    255 /*Flags_Case
     1305.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1305.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1305.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1305.1      CHAR(3),                                        254 /*I_S_Info
     1305.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1306.1               REAL FIXED BINARY(31,0))                      /* resul
     1306.1                 OUTPUT*/
     1307.1            OPTIONS( ASSEMBLER );
     1308.1
     1309.1
     1310.1      DECLARE  CEESIMOD /* Scalar Integer MODular arithmetic
     1311.1         ENTRY(REAL FIXED BINARY(31,0),                      /* argum
     1311.1                  INPUT*/
     1312.1               REAL FIXED BINARY(31,0),                      /* argum
     1312.1                  INPUT*/
     1313.1               1 OPTIONAL ,
     1313.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1313.1                               254 /*MsgNum*/         REAL FIXED BINA
     1313.1      ,                                           254 /*Flags*/,
     1313.1                                                    255 /*Flags_Case
     1313.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1313.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1313.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1313.1      CHAR(3),                                        254 /*I_S_Info
     1313.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1314.1               REAL FIXED BINARY(31,0))                      /* resul
     1314.1                 OUTPUT*/
     1315.1            OPTIONS( ASSEMBLER );
     1316.1
     1317.1
     1318.1      DECLARE  CEESISGN /* Scalar Integer transfer of SiGN
     1319.1         ENTRY(REAL FIXED BINARY(31,0),                      /* argum
     1319.1                  INPUT*/
     1320.1               REAL FIXED BINARY(31,0),                      /* argum
     1320.1                  INPUT*/
     1321.1               1 OPTIONAL ,
     1321.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1321.1                               254 /*MsgNum*/         REAL FIXED BINA
     1321.1      ,                                           254 /*Flags*/,
     1321.1                                                    255 /*Flags_Case
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1321.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1321.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1321.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1321.1      CHAR(3),                                        254 /*I_S_Info
     1321.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1322.1               REAL FIXED BINARY(31,0))                      /* resul
     1322.1                 OUTPUT*/
     1323.1            OPTIONS( ASSEMBLER );
     1324.1
     1325.1
     1326.1      DECLARE  CEESIXPI /* Scalar Integer eXPonentiation
     1327.1         ENTRY(REAL FIXED BINARY(31,0),                      /* argum
     1327.1      e)          INPUT*/
     1328.1               REAL FIXED BINARY(31,0),                      /* argum
     1328.1      er)         INPUT*/
     1329.1               1 OPTIONAL ,
     1329.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1329.1                               254 /*MsgNum*/         REAL FIXED BINA
     1329.1      ,                                           254 /*Flags*/,
     1329.1                                                    255 /*Flags_Case
     1329.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1329.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1329.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1329.1      CHAR(3),                                        254 /*I_S_Info
     1329.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1330.1               REAL FIXED BINARY(31,0))                      /* resul
     1330.1                 OUTPUT*/
     1331.1            OPTIONS( ASSEMBLER );
     1332.1
     1333.1
     1334.1      DECLARE  CEESQABS /* Scalar extended real ABSolute value
     1335.1         ENTRY(REAL FLOAT DECIMAL(18),                   /* argument
     1335.1              INPUT*/
     1336.1               1 OPTIONAL ,
     1336.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1336.1                               254 /*MsgNum*/         REAL FIXED BINA
     1336.1      ,                                           254 /*Flags*/,
     1336.1                                                    255 /*Flags_Case
     1336.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1336.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1336.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1336.1      CHAR(3),                                        254 /*I_S_Info
     1336.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1337.1               REAL FLOAT DECIMAL(18))                   /* result
     1337.1             OUTPUT*/
     1338.1            OPTIONS( ASSEMBLER );
     1339.1
     1340.1
     1341.1      DECLARE  CEESQACS /* Scalar extended real circular ArcCoSine
     1342.1         ENTRY(REAL FLOAT DECIMAL(18),                   /* argument
     1342.1              INPUT*/
     1343.1               1 OPTIONAL ,
     1343.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1343.1                               254 /*MsgNum*/         REAL FIXED BINA
     1343.1      ,                                           254 /*Flags*/,
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1343.1                                                    255 /*Flags_Case
     1343.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1343.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1343.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1343.1      CHAR(3),                                        254 /*I_S_Info
     1343.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1344.1               REAL FLOAT DECIMAL(18))                   /* result in
     1344.1             OUTPUT*/
     1345.1            OPTIONS( ASSEMBLER );
     1346.1
     1347.1
     1348.1      DECLARE  CEESQASN /* Scalar extended real circular ArcSiNe
     1349.1         ENTRY(REAL FLOAT DECIMAL(18),                   /* argument
     1349.1              INPUT*/
     1350.1               1 OPTIONAL ,
     1350.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1350.1                               254 /*MsgNum*/         REAL FIXED BINA
     1350.1      ,                                           254 /*Flags*/,
     1350.1                                                    255 /*Flags_Case
     1350.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1350.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1350.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1350.1      CHAR(3),                                        254 /*I_S_Info
     1350.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1351.1               REAL FLOAT DECIMAL(18))                   /* result in
     1351.1             OUTPUT*/
     1352.1            OPTIONS( ASSEMBLER );
     1353.1
     1354.1
     1355.1      DECLARE  CEESQATH /* Scalar extended real Hyperbolic ArcTangent
     1356.1         ENTRY(REAL FLOAT DECIMAL(18),                   /* argument
     1356.1              INPUT*/
     1357.1               1 OPTIONAL ,
     1357.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1357.1                               254 /*MsgNum*/         REAL FIXED BINA
     1357.1      ,                                           254 /*Flags*/,
     1357.1                                                    255 /*Flags_Case
     1357.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1357.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1357.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1357.1      CHAR(3),                                        254 /*I_S_Info
     1357.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1358.1               REAL FLOAT DECIMAL(18))                   /* result in
     1358.1             OUTPUT*/
     1359.1            OPTIONS( ASSEMBLER );
     1360.1
     1361.1
     1362.1      DECLARE  CEESQATN /* Scalar extended real circular ArcTaNgent
     1363.1         ENTRY(REAL FLOAT DECIMAL(18),                   /* argument
     1363.1              INPUT*/
     1364.1               1 OPTIONAL ,
     1364.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1364.1                               254 /*MsgNum*/         REAL FIXED BINA
     1364.1      ,                                           254 /*Flags*/,
     1364.1                                                    255 /*Flags_Case
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1364.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1364.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1364.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1364.1      CHAR(3),                                        254 /*I_S_Info
     1364.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1365.1               REAL FLOAT DECIMAL(18))                   /* result in
     1365.1             OUTPUT*/
     1366.1            OPTIONS( ASSEMBLER );
     1367.1
     1368.1
     1369.1      DECLARE  CEESQAT2 /* Scalar extended real circular ArcTangent 2
     1370.1         ENTRY(REAL FLOAT DECIMAL(18),                   /* argument
     1370.1              INPUT*/
     1371.1               REAL FLOAT DECIMAL(18),                   /* argument
     1371.1              INPUT*/
     1372.1               1 OPTIONAL ,
     1372.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1372.1                               254 /*MsgNum*/         REAL FIXED BINA
     1372.1      ,                                           254 /*Flags*/,
     1372.1                                                    255 /*Flags_Case
     1372.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1372.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1372.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1372.1      CHAR(3),                                        254 /*I_S_Info
     1372.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1373.1               REAL FLOAT DECIMAL(18))                   /* result in
     1373.1             OUTPUT*/
     1374.1            OPTIONS( ASSEMBLER );
     1375.1
     1376.1
     1377.1      DECLARE  CEESQCOS /* Scalar extended real circular COSine
     1378.1         ENTRY(REAL FLOAT DECIMAL(18),                   /* argument
     1378.1      ns      INPUT*/
     1379.1               1 OPTIONAL ,
     1379.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1379.1                               254 /*MsgNum*/         REAL FIXED BINA
     1379.1      ,                                           254 /*Flags*/,
     1379.1                                                    255 /*Flags_Case
     1379.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1379.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1379.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1379.1      CHAR(3),                                        254 /*I_S_Info
     1379.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1380.1               REAL FLOAT DECIMAL(18))                   /* result
     1380.1             OUTPUT*/
     1381.1            OPTIONS( ASSEMBLER );
     1382.1
     1383.1
     1384.1      DECLARE  CEESQCSH /* Scalar extended real Hyperbolic CoSine
     1385.1         ENTRY(REAL FLOAT DECIMAL(18),                   /* argument
     1385.1              INPUT*/
     1386.1               1 OPTIONAL ,
     1386.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1386.1                               254 /*MsgNum*/         REAL FIXED BINA
     1386.1      ,                                           254 /*Flags*/,
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1386.1                                                    255 /*Flags_Case
     1386.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1386.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1386.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1386.1      CHAR(3),                                        254 /*I_S_Info
     1386.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1387.1               REAL FLOAT DECIMAL(18))                   /* result
     1387.1             OUTPUT*/
     1388.1            OPTIONS( ASSEMBLER );
     1389.1
     1390.1
     1391.1      DECLARE  CEESQCTN /* Scalar extended real circular CoTaNgent
     1392.1         ENTRY(REAL FLOAT DECIMAL(18),                   /* argument
     1392.1      ns      INPUT*/
     1393.1               1 OPTIONAL ,
     1393.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1393.1                               254 /*MsgNum*/         REAL FIXED BINA
     1393.1      ,                                           254 /*Flags*/,
     1393.1                                                    255 /*Flags_Case
     1393.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1393.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1393.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1393.1      CHAR(3),                                        254 /*I_S_Info
     1393.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1394.1               REAL FLOAT DECIMAL(18))                   /* result
     1394.1             OUTPUT*/
     1395.1            OPTIONS( ASSEMBLER );
     1396.1
     1397.1
     1398.1      DECLARE  CEESQDIM /* Scalar extended real positive Difference
     1399.1         ENTRY(REAL FLOAT DECIMAL(18),                   /* argument
     1399.1              INPUT*/
     1400.1               REAL FLOAT DECIMAL(18),                   /* argument
     1400.1              INPUT*/
     1401.1               1 OPTIONAL ,
     1401.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1401.1                               254 /*MsgNum*/         REAL FIXED BINA
     1401.1      ,                                           254 /*Flags*/,
     1401.1                                                    255 /*Flags_Case
     1401.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1401.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1401.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1401.1      CHAR(3),                                        254 /*I_S_Info
     1401.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1402.1               REAL FLOAT DECIMAL(18))                   /* result
     1402.1             OUTPUT*/
     1403.1            OPTIONS( ASSEMBLER );
     1404.1
     1405.1
     1406.1      DECLARE  CEESQERC /* Scalar extended real ErroR function Comple
     1407.1         ENTRY(REAL FLOAT DECIMAL(18),                   /* argument
     1407.1              INPUT*/
     1408.1               1 OPTIONAL ,
     1408.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1408.1                               254 /*MsgNum*/         REAL FIXED BINA
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1408.1      ,                                           254 /*Flags*/,
     1408.1                                                    255 /*Flags_Case
     1408.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1408.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1408.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1408.1      CHAR(3),                                        254 /*I_S_Info
     1408.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1409.1               REAL FLOAT DECIMAL(18))                   /* result
     1409.1             OUTPUT*/
     1410.1            OPTIONS( ASSEMBLER );
     1411.1
     1412.1
     1413.1      DECLARE  CEESQERF /* Scalar extended real ErroR Function
     1414.1         ENTRY(REAL FLOAT DECIMAL(18),                   /* argument
     1414.1              INPUT*/
     1415.1               1 OPTIONAL ,
     1415.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1415.1                               254 /*MsgNum*/         REAL FIXED BINA
     1415.1      ,                                           254 /*Flags*/,
     1415.1                                                    255 /*Flags_Case
     1415.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1415.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1415.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1415.1      CHAR(3),                                        254 /*I_S_Info
     1415.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1416.1               REAL FLOAT DECIMAL(18))                   /* result
     1416.1             OUTPUT*/
     1417.1            OPTIONS( ASSEMBLER );
     1418.1
     1419.1
     1420.1      DECLARE  CEESQEXP /* Scalar extended real EXPonent, base e
     1421.1         ENTRY(REAL FLOAT DECIMAL(18),                   /* argument
     1421.1      f e)    INPUT*/
     1422.1               1 OPTIONAL ,
     1422.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1422.1                               254 /*MsgNum*/         REAL FIXED BINA
     1422.1      ,                                           254 /*Flags*/,
     1422.1                                                    255 /*Flags_Case
     1422.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1422.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1422.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1422.1      CHAR(3),                                        254 /*I_S_Info
     1422.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1423.1               REAL FLOAT DECIMAL(18))                   /* result
     1423.1             OUTPUT*/
     1424.1            OPTIONS( ASSEMBLER );
     1425.1
     1426.1
     1427.1      DECLARE  CEESQINT /* Scalar extended real truncation
     1428.1         ENTRY(REAL FLOAT DECIMAL(18),                   /* argument
     1428.1              INPUT*/
     1429.1               1 OPTIONAL ,
     1429.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1429.1                               254 /*MsgNum*/         REAL FIXED BINA
     1429.1      ,                                           254 /*Flags*/,
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1429.1                                                    255 /*Flags_Case
     1429.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1429.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1429.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1429.1      CHAR(3),                                        254 /*I_S_Info
     1429.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1430.1               REAL FLOAT DECIMAL(18))                   /* result
     1430.1             OUTPUT*/
     1431.1            OPTIONS( ASSEMBLER );
     1432.1
     1433.1
     1434.1      DECLARE  CEESQLG1 /* Scalar extended real LoG base 10
     1435.1         ENTRY(REAL FLOAT DECIMAL(18),                   /* argument
     1435.1              INPUT*/
     1436.1               1 OPTIONAL ,
     1436.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1436.1                               254 /*MsgNum*/         REAL FIXED BINA
     1436.1      ,                                           254 /*Flags*/,
     1436.1                                                    255 /*Flags_Case
     1436.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1436.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1436.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1436.1      CHAR(3),                                        254 /*I_S_Info
     1436.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1437.1               REAL FLOAT DECIMAL(18))                   /* result
     1437.1             OUTPUT*/
     1438.1            OPTIONS( ASSEMBLER );
     1439.1
     1440.1
     1441.1      DECLARE  CEESQLG2 /* Scalar extended real LoG base 2
     1442.1         ENTRY(REAL FLOAT DECIMAL(18),                   /* argument
     1442.1              INPUT*/
     1443.1               1 OPTIONAL ,
     1443.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1443.1                               254 /*MsgNum*/         REAL FIXED BINA
     1443.1      ,                                           254 /*Flags*/,
     1443.1                                                    255 /*Flags_Case
     1443.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1443.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1443.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1443.1      CHAR(3),                                        254 /*I_S_Info
     1443.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1444.1               REAL FLOAT DECIMAL(18))                   /* result
     1444.1             OUTPUT*/
     1445.1            OPTIONS( ASSEMBLER );
     1446.1
     1447.1
     1448.1      DECLARE  CEESQLOG /* Scalar extended real LOG base e
     1449.1         ENTRY(REAL FLOAT DECIMAL(18),                   /* argument
     1449.1              INPUT*/
     1450.1               1 OPTIONAL ,
     1450.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1450.1                               254 /*MsgNum*/         REAL FIXED BINA
     1450.1      ,                                           254 /*Flags*/,
     1450.1                                                    255 /*Flags_Case
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1450.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1450.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1450.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1450.1      CHAR(3),                                        254 /*I_S_Info
     1450.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1451.1               REAL FLOAT DECIMAL(18))                   /* result
     1451.1             OUTPUT*/
     1452.1            OPTIONS( ASSEMBLER );
     1453.1
     1454.1
     1455.1      DECLARE  CEESQMOD /* Scalar extended real MODular arithmetic
     1456.1         ENTRY(REAL FLOAT DECIMAL(18),                   /* argument
     1456.1              INPUT*/
     1457.1               REAL FLOAT DECIMAL(18),                   /* argument
     1457.1              INPUT*/
     1458.1               1 OPTIONAL ,
     1458.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1458.1                               254 /*MsgNum*/         REAL FIXED BINA
     1458.1      ,                                           254 /*Flags*/,
     1458.1                                                    255 /*Flags_Case
     1458.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1458.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1458.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1458.1      CHAR(3),                                        254 /*I_S_Info
     1458.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1459.1               REAL FLOAT DECIMAL(18))                   /* result
     1459.1             OUTPUT*/
     1460.1            OPTIONS( ASSEMBLER );
     1461.1
     1462.1
     1463.1      DECLARE  CEESQSGN /* Scalar extended real transfer of SiGN
     1464.1         ENTRY(REAL FLOAT DECIMAL(18),                   /* argument
     1464.1              INPUT*/
     1465.1               REAL FLOAT DECIMAL(18),                   /* argument
     1465.1              INPUT*/
     1466.1               1 OPTIONAL ,
     1466.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1466.1                               254 /*MsgNum*/         REAL FIXED BINA
     1466.1      ,                                           254 /*Flags*/,
     1466.1                                                    255 /*Flags_Case
     1466.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1466.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1466.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1466.1      CHAR(3),                                        254 /*I_S_Info
     1466.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1467.1               REAL FLOAT DECIMAL(18))                   /* result
     1467.1             OUTPUT*/
     1468.1            OPTIONS( ASSEMBLER );
     1469.1
     1470.1
     1471.1      DECLARE  CEESQSIN /* Scalar extended real circular SINe
     1472.1         ENTRY(REAL FLOAT DECIMAL(18),                   /* argument
     1472.1      ns      INPUT*/
     1473.1               1 OPTIONAL ,
     1473.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1473.1                               254 /*MsgNum*/         REAL FIXED BINA
     1473.1      ,                                           254 /*Flags*/,
     1473.1                                                    255 /*Flags_Case
     1473.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1473.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1473.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1473.1      CHAR(3),                                        254 /*I_S_Info
     1473.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1474.1               REAL FLOAT DECIMAL(18))                   /* result
     1474.1             OUTPUT*/
     1475.1            OPTIONS( ASSEMBLER );
     1476.1
     1477.1
     1478.1      DECLARE  CEESQSNH /* Scalar extended real Hyperbolic SiNe
     1479.1         ENTRY(REAL FLOAT DECIMAL(18),                   /* argument
     1479.1              INPUT*/
     1480.1               1 OPTIONAL ,
     1480.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1480.1                               254 /*MsgNum*/         REAL FIXED BINA
     1480.1      ,                                           254 /*Flags*/,
     1480.1                                                    255 /*Flags_Case
     1480.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1480.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1480.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1480.1      CHAR(3),                                        254 /*I_S_Info
     1480.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1481.1               REAL FLOAT DECIMAL(18))                   /* result
     1481.1             OUTPUT*/
     1482.1            OPTIONS( ASSEMBLER );
     1483.1
     1484.1
     1485.1      DECLARE  CEESQSQT /* Scalar extended real SQuare rooT
     1486.1         ENTRY(REAL FLOAT DECIMAL(18),                   /* argument
     1486.1              INPUT*/
     1487.1               1 OPTIONAL ,
     1487.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1487.1                               254 /*MsgNum*/         REAL FIXED BINA
     1487.1      ,                                           254 /*Flags*/,
     1487.1                                                    255 /*Flags_Case
     1487.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1487.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1487.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1487.1      CHAR(3),                                        254 /*I_S_Info
     1487.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1488.1               REAL FLOAT DECIMAL(18))                   /* result
     1488.1             OUTPUT*/
     1489.1            OPTIONS( ASSEMBLER );
     1490.1
     1491.1
     1492.1      DECLARE  CEESQTAN /* Scalar extended real circular TANgent
     1493.1         ENTRY(REAL FLOAT DECIMAL(18),                   /* argument
     1493.1      ns      INPUT*/
     1494.1               1 OPTIONAL ,
     1494.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1494.1                               254 /*MsgNum*/         REAL FIXED BINA
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1494.1      ,                                           254 /*Flags*/,
     1494.1                                                    255 /*Flags_Case
     1494.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1494.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1494.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1494.1      CHAR(3),                                        254 /*I_S_Info
     1494.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1495.1               REAL FLOAT DECIMAL(18))                   /* result
     1495.1             OUTPUT*/
     1496.1            OPTIONS( ASSEMBLER );
     1497.1
     1498.1
     1499.1      DECLARE  CEESQTNH /* Scalar extended real Hyperbolic TaNgent
     1500.1         ENTRY(REAL FLOAT DECIMAL(18),                   /* argument
     1500.1              INPUT*/
     1501.1               1 OPTIONAL ,
     1501.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1501.1                               254 /*MsgNum*/         REAL FIXED BINA
     1501.1      ,                                           254 /*Flags*/,
     1501.1                                                    255 /*Flags_Case
     1501.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1501.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1501.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1501.1      CHAR(3),                                        254 /*I_S_Info
     1501.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1502.1               REAL FLOAT DECIMAL(18))                   /* result
     1502.1             OUTPUT*/
     1503.1            OPTIONS( ASSEMBLER );
     1504.1
     1505.1
     1506.1      DECLARE  CEESQXPQ /* Scalar extended real EXponentiation
     1507.1         ENTRY(REAL FLOAT DECIMAL(18),                   /* argument
     1507.1              INPUT*/
     1508.1               REAL FLOAT DECIMAL(18),                   /* argument
     1508.1              INPUT*/
     1509.1               1 OPTIONAL ,
     1509.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1509.1                               254 /*MsgNum*/         REAL FIXED BINA
     1509.1      ,                                           254 /*Flags*/,
     1509.1                                                    255 /*Flags_Case
     1509.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1509.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1509.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1509.1      CHAR(3),                                        254 /*I_S_Info
     1509.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1510.1               REAL FLOAT DECIMAL(18))                   /* result
     1510.1             OUTPUT*/
     1511.1            OPTIONS( ASSEMBLER );
     1512.1
     1513.1
     1514.1      DECLARE  CEESQXPI /* Scalar Double real base raised to Integer
     1515.1         ENTRY(REAL FLOAT DECIMAL(18),                   /* argument
     1515.1              INPUT*/
     1516.1               REAL FIXED BINARY(31,0),                      /* argum
     1516.1      er)         INPUT*/
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1517.1               1 OPTIONAL ,
     1517.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1517.1                               254 /*MsgNum*/         REAL FIXED BINA
     1517.1      ,                                           254 /*Flags*/,
     1517.1                                                    255 /*Flags_Case
     1517.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1517.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1517.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1517.1      CHAR(3),                                        254 /*I_S_Info
     1517.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1518.1               REAL FLOAT DECIMAL(18))                   /* result
     1518.1             OUTPUT*/
     1519.1            OPTIONS( ASSEMBLER );
     1520.1
     1521.1
     1522.1      DECLARE  CEESRABS /* Scalar extended complex ABSolute value
     1523.1         ENTRY(COMPLEX FLOAT BINARY(64),                 /* argument
     1523.1              INPUT*/
     1524.1               1 OPTIONAL ,
     1524.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1524.1                               254 /*MsgNum*/         REAL FIXED BINA
     1524.1      ,                                           254 /*Flags*/,
     1524.1                                                    255 /*Flags_Case
     1524.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1524.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1524.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1524.1      CHAR(3),                                        254 /*I_S_Info
     1524.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1525.1               REAL FLOAT DECIMAL(18))                   /* result
     1525.1             OUTPUT*/
     1526.1            OPTIONS( ASSEMBLER );
     1527.1
     1528.1
     1529.1      DECLARE  CEESRATH /* Scalar extended complex Hyperbolic ArcTang
     1530.1         ENTRY(COMPLEX FLOAT BINARY(64),                 /* argument
     1530.1              INPUT*/
     1531.1               1 OPTIONAL ,
     1531.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1531.1                               254 /*MsgNum*/         REAL FIXED BINA
     1531.1      ,                                           254 /*Flags*/,
     1531.1                                                    255 /*Flags_Case
     1531.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1531.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1531.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1531.1      CHAR(3),                                        254 /*I_S_Info
     1531.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1532.1               COMPLEX FLOAT BINARY(64))                 /* result
     1532.1             OUTPUT*/
     1533.1            OPTIONS( ASSEMBLER );
     1534.1
     1535.1
     1536.1      DECLARE  CEESRATN /* Scalar extended complex circular ArcTaNgen
     1537.1         ENTRY(COMPLEX FLOAT BINARY(64),                 /* argument
     1537.1              INPUT*/
     1538.1               1 OPTIONAL ,
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1538.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1538.1                               254 /*MsgNum*/         REAL FIXED BINA
     1538.1      ,                                           254 /*Flags*/,
     1538.1                                                    255 /*Flags_Case
     1538.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1538.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1538.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1538.1      CHAR(3),                                        254 /*I_S_Info
     1538.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1539.1               COMPLEX FLOAT BINARY(64))                 /* result
     1539.1             OUTPUT*/
     1540.1               OPTIONS( ASSEMBLER );
     1541.1
     1542.1
     1543.1      DECLARE  CEESRCJG /* Conjugate of Scalar extended complex
     1544.1         ENTRY(COMPLEX FLOAT BINARY(64),                 /* argument
     1544.1              INPUT*/
     1545.1               1 OPTIONAL ,
     1545.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1545.1                               254 /*MsgNum*/         REAL FIXED BINA
     1545.1      ,                                           254 /*Flags*/,
     1545.1                                                    255 /*Flags_Case
     1545.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1545.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1545.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1545.1      CHAR(3),                                        254 /*I_S_Info
     1545.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1546.1               COMPLEX FLOAT BINARY(64))                 /* result
     1546.1             OUTPUT*/
     1547.1            OPTIONS( ASSEMBLER );
     1548.1
     1549.1
     1550.1      DECLARE  CEESRCOS /* Scalar extended complex circular COSine
     1551.1         ENTRY(COMPLEX FLOAT BINARY(64),                 /* argument
     1551.1              INPUT*/
     1552.1               1 OPTIONAL ,
     1552.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1552.1                               254 /*MsgNum*/         REAL FIXED BINA
     1552.1      ,                                           254 /*Flags*/,
     1552.1                                                    255 /*Flags_Case
     1552.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1552.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1552.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1552.1      CHAR(3),                                        254 /*I_S_Info
     1552.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1553.1               COMPLEX FLOAT BINARY(64))                 /* result
     1553.1             OUTPUT*/
     1554.1            OPTIONS( ASSEMBLER );
     1555.1
     1556.1
     1557.1      DECLARE  CEESRCSH /* Scalar extended complex Hyperbolic CoSine
     1558.1         ENTRY(COMPLEX FLOAT BINARY(64),                 /* argument
     1558.1              INPUT*/
     1559.1               1 OPTIONAL ,
     1559.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1559.1                               254 /*MsgNum*/         REAL FIXED BINA
     1559.1      ,                                           254 /*Flags*/,
     1559.1                                                    255 /*Flags_Case
     1559.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1559.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1559.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1559.1      CHAR(3),                                        254 /*I_S_Info
     1559.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1560.1               COMPLEX FLOAT BINARY(64))                 /* result
     1560.1             OUTPUT*/
     1561.1            OPTIONS( ASSEMBLER );
     1562.1
     1563.1
     1564.1      DECLARE  CEESRDVD /* Scalar extended complex DiViDe
     1565.1         ENTRY(COMPLEX FLOAT BINARY(64),                 /* argument
     1565.1      d)      INPUT*/
     1566.1               COMPLEX FLOAT BINARY(64),                 /* argument
     1566.1      )       INPUT*/
     1567.1               1 OPTIONAL ,
     1567.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1567.1                               254 /*MsgNum*/         REAL FIXED BINA
     1567.1      ,                                           254 /*Flags*/,
     1567.1                                                    255 /*Flags_Case
     1567.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1567.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1567.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1567.1      CHAR(3),                                        254 /*I_S_Info
     1567.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1568.1               COMPLEX FLOAT BINARY(64))                 /* result (q
     1568.1             OUTPUT*/
     1569.1            OPTIONS( ASSEMBLER );
     1570.1
     1571.1
     1572.1      DECLARE  CEESREXP /* Scalar extended complex EXPonent base e
     1573.1         ENTRY(COMPLEX FLOAT BINARY(64),                 /* argument
     1573.1      f e)    INPUT*/
     1574.1               1 OPTIONAL ,
     1574.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1574.1                               254 /*MsgNum*/         REAL FIXED BINA
     1574.1      ,                                           254 /*Flags*/,
     1574.1                                                    255 /*Flags_Case
     1574.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1574.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1574.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1574.1      CHAR(3),                                        254 /*I_S_Info
     1574.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1575.1               COMPLEX FLOAT BINARY(64))                 /* result
     1575.1             OUTPUT*/
     1576.1            OPTIONS( ASSEMBLER );
     1577.1
     1578.1
     1579.1      DECLARE  CEESRIMG /* Scalar extended complex IMaGinary number
     1580.1         ENTRY(COMPLEX FLOAT BINARY(64),                 /* argument
     1580.1              INPUT*/
     1581.1               1 OPTIONAL ,
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1581.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1581.1                               254 /*MsgNum*/         REAL FIXED BINA
     1581.1      ,                                           254 /*Flags*/,
     1581.1                                                    255 /*Flags_Case
     1581.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1581.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1581.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1581.1      CHAR(3),                                        254 /*I_S_Info
     1581.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1582.1               REAL FLOAT DECIMAL(18))                   /* result
     1582.1             OUTPUT*/
     1583.1            OPTIONS( ASSEMBLER );
     1584.1
     1585.1
     1586.1      DECLARE  CEESRLOG /* Scalar extended complex LOG base e
     1587.1         ENTRY(COMPLEX FLOAT BINARY(64),                 /* argument
     1587.1              INPUT*/
     1588.1               1 OPTIONAL ,
     1588.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1588.1                               254 /*MsgNum*/         REAL FIXED BINA
     1588.1      ,                                           254 /*Flags*/,
     1588.1                                                    255 /*Flags_Case
     1588.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1588.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1588.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1588.1      CHAR(3),                                        254 /*I_S_Info
     1588.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1589.1               COMPLEX FLOAT BINARY(64))                 /* result
     1589.1             OUTPUT*/
     1590.1            OPTIONS( ASSEMBLER );
     1591.1
     1592.1
     1593.1      DECLARE  CEESRMLT /* Scalar extended complex MuLTiply
     1594.1         ENTRY(COMPLEX FLOAT BINARY(64),                 /* argument
     1594.1      icand)  INPUT*/
     1595.1               COMPLEX FLOAT BINARY(64),                 /* argument
     1595.1      ier)    INPUT*/
     1596.1               1 OPTIONAL ,
     1596.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1596.1                               254 /*MsgNum*/         REAL FIXED BINA
     1596.1      ,                                           254 /*Flags*/,
     1596.1                                                    255 /*Flags_Case
     1596.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1596.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1596.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1596.1      CHAR(3),                                        254 /*I_S_Info
     1596.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1597.1               COMPLEX FLOAT BINARY(64))                 /* result (p
     1597.1             OUTPUT*/
     1598.1            OPTIONS( ASSEMBLER );
     1599.1
     1600.1
     1601.1      DECLARE  CEESRSIN /* Scalar extended complex circular SINe
     1602.1         ENTRY(COMPLEX FLOAT BINARY(64),                 /* argument
     1602.1              INPUT*/
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1603.1               1 OPTIONAL ,
     1603.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1603.1                               254 /*MsgNum*/         REAL FIXED BINA
     1603.1      ,                                           254 /*Flags*/,
     1603.1                                                    255 /*Flags_Case
     1603.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1603.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1603.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1603.1      CHAR(3),                                        254 /*I_S_Info
     1603.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1604.1               COMPLEX FLOAT BINARY(64))                 /* result
     1604.1             OUTPUT*/
     1605.1            OPTIONS( ASSEMBLER );
     1606.1
     1607.1
     1608.1      DECLARE  CEESRSNH /* Scalar extended complex Hypebolic SiNe
     1609.1         ENTRY(COMPLEX FLOAT BINARY(64),                 /* argument
     1609.1              INPUT*/
     1610.1               1 OPTIONAL ,
     1610.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1610.1                               254 /*MsgNum*/         REAL FIXED BINA
     1610.1      ,                                           254 /*Flags*/,
     1610.1                                                    255 /*Flags_Case
     1610.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1610.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1610.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1610.1      CHAR(3),                                        254 /*I_S_Info
     1610.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1611.1               COMPLEX FLOAT BINARY(64))                 /* result
     1611.1             OUTPUT*/
     1612.1            OPTIONS( ASSEMBLER );
     1613.1
     1614.1
     1615.1      DECLARE  CEESRSQT /* Scalar extended complex SQuare rooT
     1616.1         ENTRY(COMPLEX FLOAT BINARY(64),                 /* argument
     1616.1              INPUT*/
     1617.1               1 OPTIONAL ,
     1617.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1617.1                               254 /*MsgNum*/         REAL FIXED BINA
     1617.1      ,                                           254 /*Flags*/,
     1617.1                                                    255 /*Flags_Case
     1617.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1617.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1617.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1617.1      CHAR(3),                                        254 /*I_S_Info
     1617.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1618.1               COMPLEX FLOAT BINARY(64))                 /* result
     1618.1             OUTPUT*/
     1619.1            OPTIONS( ASSEMBLER );
     1620.1
     1621.1
     1622.1      DECLARE  CEESRTAN /* Scalar extended complex circular TANgent
     1623.1         ENTRY(COMPLEX FLOAT BINARY(64),                 /* argument
     1623.1              INPUT*/
     1624.1               1 OPTIONAL ,
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1624.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1624.1                               254 /*MsgNum*/         REAL FIXED BINA
     1624.1      ,                                           254 /*Flags*/,
     1624.1                                                    255 /*Flags_Case
     1624.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1624.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1624.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1624.1      CHAR(3),                                        254 /*I_S_Info
     1624.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1625.1               COMPLEX FLOAT BINARY(64))                 /* result
     1625.1             OUTPUT*/
     1626.1            OPTIONS( ASSEMBLER );
     1627.1
     1628.1
     1629.1      DECLARE  CEESRTNH /* Scalar extended complex Hyperbolic TaNgent
     1630.1         ENTRY(COMPLEX FLOAT BINARY(64),                 /* argument
     1630.1              INPUT*/
     1631.1               1 OPTIONAL ,
     1631.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1631.1                               254 /*MsgNum*/         REAL FIXED BINA
     1631.1      ,                                           254 /*Flags*/,
     1631.1                                                    255 /*Flags_Case
     1631.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1631.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1631.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1631.1      CHAR(3),                                        254 /*I_S_Info
     1631.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1632.1               COMPLEX FLOAT BINARY(64))                 /* result
     1632.1             OUTPUT*/
     1633.1            OPTIONS( ASSEMBLER );
     1634.1
     1635.1
     1636.1      DECLARE  CEESRXPI /* Scalar extended complex eXPonent to Intege
     1637.1         ENTRY(COMPLEX FLOAT BINARY(64),                 /* argument
     1637.1              INPUT*/
     1638.1               REAL FIXED BINARY(31,0),                      /* argum
     1638.1      er)         INPUT*/
     1639.1               1 OPTIONAL ,
     1639.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1639.1                               254 /*MsgNum*/         REAL FIXED BINA
     1639.1      ,                                           254 /*Flags*/,
     1639.1                                                    255 /*Flags_Case
     1639.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1639.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1639.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1639.1      CHAR(3),                                        254 /*I_S_Info
     1639.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1640.1               COMPLEX FLOAT BINARY(64))                 /* result
     1640.1             OUTPUT*/
     1641.1            OPTIONS( ASSEMBLER );
     1642.1
     1643.1
     1644.1      DECLARE  CEESRXPR /* Scalar single complex eXPonent to short co
     1645.1         ENTRY(COMPLEX FLOAT BINARY(64),                 /* argument
     1645.1              INPUT*/
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1646.1               COMPLEX FLOAT BINARY(64),                 /* argument
     1646.1              INPUT*/
     1647.1               1 OPTIONAL ,
     1647.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1647.1                               254 /*MsgNum*/         REAL FIXED BINA
     1647.1      ,                                           254 /*Flags*/,
     1647.1                                                    255 /*Flags_Case
     1647.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1647.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1647.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1647.1      CHAR(3),                                        254 /*I_S_Info
     1647.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1648.1               COMPLEX FLOAT BINARY(64))                 /* result
     1648.1             OUTPUT*/
     1649.1            OPTIONS( ASSEMBLER );
     1650.1
     1651.1
     1652.1      DECLARE  CEESSABS /* Scalar Single real ABSolute value
     1653.1         ENTRY(REAL FLOAT DECIMAL(6),                    /* argument
     1653.1              INPUT*/
     1654.1               1 OPTIONAL ,
     1654.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1654.1                               254 /*MsgNum*/         REAL FIXED BINA
     1654.1      ,                                           254 /*Flags*/,
     1654.1                                                    255 /*Flags_Case
     1654.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1654.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1654.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1654.1      CHAR(3),                                        254 /*I_S_Info
     1654.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1655.1               REAL FLOAT DECIMAL(6))                    /* result
     1655.1             OUTPUT*/
     1656.1            OPTIONS( ASSEMBLER );
     1657.1
     1658.1
     1659.1      DECLARE  CEESSACS /* Scalar Single real circular ArcCoSine
     1660.1         ENTRY(REAL FLOAT DECIMAL(6),                    /* argument
     1660.1              INPUT*/
     1661.1               1 OPTIONAL ,
     1661.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1661.1                               254 /*MsgNum*/         REAL FIXED BINA
     1661.1      ,                                           254 /*Flags*/,
     1661.1                                                    255 /*Flags_Case
     1661.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1661.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1661.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1661.1      CHAR(3),                                        254 /*I_S_Info
     1661.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1662.1               REAL FLOAT DECIMAL(6))                    /* result in
     1662.1             OUTPUT*/
     1663.1            OPTIONS( ASSEMBLER );
     1664.1
     1665.1
     1666.1      DECLARE  CEESSASN /* Scalar Single real circular ArcSiNe
     1667.1         ENTRY(REAL FLOAT DECIMAL(6),                    /* argument
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1667.1              INPUT*/
     1668.1               1 OPTIONAL ,
     1668.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1668.1                               254 /*MsgNum*/         REAL FIXED BINA
     1668.1      ,                                           254 /*Flags*/,
     1668.1                                                    255 /*Flags_Case
     1668.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1668.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1668.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1668.1      CHAR(3),                                        254 /*I_S_Info
     1668.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1669.1               REAL FLOAT DECIMAL(6))                    /* result in
     1669.1             OUTPUT*/
     1670.1            OPTIONS( ASSEMBLER );
     1671.1
     1672.1
     1673.1      DECLARE  CEESSATH /* Scalar Single real Hyperbolic ArcTangent
     1674.1         ENTRY(REAL FLOAT DECIMAL(6),                    /* argument
     1674.1              INPUT*/
     1675.1               1 OPTIONAL ,
     1675.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1675.1                               254 /*MsgNum*/         REAL FIXED BINA
     1675.1      ,                                           254 /*Flags*/,
     1675.1                                                    255 /*Flags_Case
     1675.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1675.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1675.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1675.1      CHAR(3),                                        254 /*I_S_Info
     1675.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1676.1               REAL FLOAT DECIMAL(6))                    /* result in
     1676.1             OUTPUT*/
     1677.1            OPTIONS( ASSEMBLER );
     1678.1
     1679.1
     1680.1      DECLARE  CEESSATN /* Scalar Single real circular ArcTaNgent
     1681.1         ENTRY(REAL FLOAT DECIMAL(6),                    /* argument
     1681.1              INPUT*/
     1682.1               1 OPTIONAL ,
     1682.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1682.1                               254 /*MsgNum*/         REAL FIXED BINA
     1682.1      ,                                           254 /*Flags*/,
     1682.1                                                    255 /*Flags_Case
     1682.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1682.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1682.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1682.1      CHAR(3),                                        254 /*I_S_Info
     1682.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1683.1               REAL FLOAT DECIMAL(6))                    /* result in
     1683.1             OUTPUT*/
     1684.1            OPTIONS( ASSEMBLER );
     1685.1
     1686.1
     1687.1      DECLARE  CEESSAT2 /* Scalar Single real circular ArcTangent 2
     1688.1         ENTRY(REAL FLOAT DECIMAL(6),                    /* argument
     1688.1              INPUT*/
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1689.1               REAL FLOAT DECIMAL(6),                    /* argument
     1689.1              INPUT*/
     1690.1               1 OPTIONAL ,
     1690.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1690.1                               254 /*MsgNum*/         REAL FIXED BINA
     1690.1      ,                                           254 /*Flags*/,
     1690.1                                                    255 /*Flags_Case
     1690.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1690.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1690.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1690.1      CHAR(3),                                        254 /*I_S_Info
     1690.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1691.1               REAL FLOAT DECIMAL(6))                    /* result in
     1691.1             OUTPUT*/
     1692.1            OPTIONS( ASSEMBLER );
     1693.1
     1694.1
     1695.1      DECLARE  CEESSCOS /* Scalar Single real circular COSine
     1696.1         ENTRY(REAL FLOAT DECIMAL(6),                    /* argument
     1696.1      ns      INPUT*/
     1697.1               1 OPTIONAL ,
     1697.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1697.1                               254 /*MsgNum*/         REAL FIXED BINA
     1697.1      ,                                           254 /*Flags*/,
     1697.1                                                    255 /*Flags_Case
     1697.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1697.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1697.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1697.1      CHAR(3),                                        254 /*I_S_Info
     1697.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1698.1               REAL FLOAT DECIMAL(6))                    /* result
     1698.1             OUTPUT*/
     1699.1            OPTIONS( ASSEMBLER );
     1700.1
     1701.1
     1702.1      DECLARE  CEESSCSH /* Scalar Single real Hyperbolic CoSine
     1703.1         ENTRY(REAL FLOAT DECIMAL(6),                    /* argument
     1703.1              INPUT*/
     1704.1               1 OPTIONAL ,
     1704.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1704.1                               254 /*MsgNum*/         REAL FIXED BINA
     1704.1      ,                                           254 /*Flags*/,
     1704.1                                                    255 /*Flags_Case
     1704.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1704.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1704.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1704.1      CHAR(3),                                        254 /*I_S_Info
     1704.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1705.1               REAL FLOAT DECIMAL(6))                    /* result
     1705.1             OUTPUT*/
     1706.1            OPTIONS( ASSEMBLER );
     1707.1
     1708.1
     1709.1      DECLARE  CEESSCTN /* Scalar Single real circular CoTaNgent
     1710.1         ENTRY(REAL FLOAT DECIMAL(6),                    /* argument
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1710.1      ns      INPUT*/
     1711.1               1 OPTIONAL ,
     1711.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1711.1                               254 /*MsgNum*/         REAL FIXED BINA
     1711.1      ,                                           254 /*Flags*/,
     1711.1                                                    255 /*Flags_Case
     1711.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1711.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1711.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1711.1      CHAR(3),                                        254 /*I_S_Info
     1711.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1712.1               REAL FLOAT DECIMAL(6))                    /* result
     1712.1             OUTPUT*/
     1713.1            OPTIONS( ASSEMBLER );
     1714.1
     1715.1
     1716.1      DECLARE  CEESSDIM /* Scalar Single real positive DIfference
     1717.1         ENTRY(REAL FLOAT DECIMAL(6),                    /* argument
     1717.1              INPUT*/
     1718.1               REAL FLOAT DECIMAL(6),                    /* argument
     1718.1              INPUT*/
     1719.1               1 OPTIONAL ,
     1719.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1719.1                               254 /*MsgNum*/         REAL FIXED BINA
     1719.1      ,                                           254 /*Flags*/,
     1719.1                                                    255 /*Flags_Case
     1719.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1719.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1719.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1719.1      CHAR(3),                                        254 /*I_S_Info
     1719.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1720.1               REAL FLOAT DECIMAL(6))                    /* result
     1720.1             OUTPUT*/
     1721.1            OPTIONS( ASSEMBLER );
     1722.1
     1723.1
     1724.1      DECLARE  CEESSERC /* Scalar Single real ErroR function Compleme
     1725.1         ENTRY(REAL FLOAT DECIMAL(6),                    /* argument
     1725.1              INPUT*/
     1726.1               1 OPTIONAL ,
     1726.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1726.1                               254 /*MsgNum*/         REAL FIXED BINA
     1726.1      ,                                           254 /*Flags*/,
     1726.1                                                    255 /*Flags_Case
     1726.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1726.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1726.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1726.1      CHAR(3),                                        254 /*I_S_Info
     1726.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1727.1               REAL FLOAT DECIMAL(6))                    /* result
     1727.1             OUTPUT*/
     1728.1            OPTIONS( ASSEMBLER );
     1729.1
     1730.1
     1731.1      DECLARE  CEESSERF /* Scalar Single real ErroR Function
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1732.1         ENTRY(REAL FLOAT DECIMAL(6),                    /* argument
     1732.1              INPUT*/
     1733.1               1 OPTIONAL ,
     1733.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1733.1                               254 /*MsgNum*/         REAL FIXED BINA
     1733.1      ,                                           254 /*Flags*/,
     1733.1                                                    255 /*Flags_Case
     1733.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1733.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1733.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1733.1      CHAR(3),                                        254 /*I_S_Info
     1733.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1734.1               REAL FLOAT DECIMAL(6))                    /* result
     1734.1             OUTPUT*/
     1735.1            OPTIONS( ASSEMBLER );
     1736.1
     1737.1
     1738.1      DECLARE  CEESSEXP /* Scalar Single real EXPonent base e
     1739.1         ENTRY(REAL FLOAT DECIMAL(6),                    /* argument
     1739.1      f e)    INPUT*/
     1740.1               1 OPTIONAL ,
     1740.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1740.1                               254 /*MsgNum*/         REAL FIXED BINA
     1740.1      ,                                           254 /*Flags*/,
     1740.1                                                    255 /*Flags_Case
     1740.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1740.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1740.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1740.1      CHAR(3),                                        254 /*I_S_Info
     1740.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1741.1               REAL FLOAT DECIMAL(6))                    /* result
     1741.1             OUTPUT*/
     1742.1            OPTIONS( ASSEMBLER );
     1743.1
     1744.1
     1745.1      DECLARE  CEESSGMA /* Scalar Single real GaMmA function
     1746.1         ENTRY(REAL FLOAT DECIMAL(6),                    /* argument
     1746.1              INPUT*/
     1747.1               1 OPTIONAL ,
     1747.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1747.1                               254 /*MsgNum*/         REAL FIXED BINA
     1747.1      ,                                           254 /*Flags*/,
     1747.1                                                    255 /*Flags_Case
     1747.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1747.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1747.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1747.1      CHAR(3),                                        254 /*I_S_Info
     1747.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1748.1               REAL FLOAT DECIMAL(6))                    /* result
     1748.1             OUTPUT*/
     1749.1            OPTIONS( ASSEMBLER );
     1750.1
     1751.1
     1752.1      DECLARE  CEESSINT /* Scalar Single real truncation
     1753.1         ENTRY(REAL FLOAT DECIMAL(6),                    /* argument
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1753.1              INPUT*/
     1754.1               1 OPTIONAL ,
     1754.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1754.1                               254 /*MsgNum*/         REAL FIXED BINA
     1754.1      ,                                           254 /*Flags*/,
     1754.1                                                    255 /*Flags_Case
     1754.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1754.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1754.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1754.1      CHAR(3),                                        254 /*I_S_Info
     1754.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1755.1               REAL FLOAT DECIMAL(6))                    /* result
     1755.1             OUTPUT*/
     1756.1            OPTIONS( ASSEMBLER );
     1757.1
     1758.1
     1759.1      DECLARE  CEESSLGM /* Scalar Single real Log GaMma function
     1760.1         ENTRY(REAL FLOAT DECIMAL(6),                    /* argument
     1760.1              INPUT*/
     1761.1               1 OPTIONAL ,
     1761.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1761.1                               254 /*MsgNum*/         REAL FIXED BINA
     1761.1      ,                                           254 /*Flags*/,
     1761.1                                                    255 /*Flags_Case
     1761.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1761.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1761.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1761.1      CHAR(3),                                        254 /*I_S_Info
     1761.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1762.1               REAL FLOAT DECIMAL(6))                    /* result
     1762.1             OUTPUT*/
     1763.1            OPTIONS( ASSEMBLER );
     1764.1
     1765.1
     1766.1      DECLARE  CEESSLG1 /* Scalar Single real Log base 10
     1767.1         ENTRY(REAL FLOAT DECIMAL(6),                    /* argument
     1767.1              INPUT*/
     1768.1               1 OPTIONAL ,
     1768.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1768.1                               254 /*MsgNum*/         REAL FIXED BINA
     1768.1      ,                                           254 /*Flags*/,
     1768.1                                                    255 /*Flags_Case
     1768.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1768.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1768.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1768.1      CHAR(3),                                        254 /*I_S_Info
     1768.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1769.1               REAL FLOAT DECIMAL(6))                    /* result
     1769.1             OUTPUT*/
     1770.1            OPTIONS( ASSEMBLER );
     1771.1
     1772.1
     1773.1      DECLARE  CEESSLG2 /* Scalar Single real LoG base 2
     1774.1         ENTRY(REAL FLOAT DECIMAL(6),                    /* argument
     1774.1              INPUT*/
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1775.1               1 OPTIONAL ,
     1775.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1775.1                               254 /*MsgNum*/         REAL FIXED BINA
     1775.1      ,                                           254 /*Flags*/,
     1775.1                                                    255 /*Flags_Case
     1775.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1775.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1775.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1775.1      CHAR(3),                                        254 /*I_S_Info
     1775.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1776.1               REAL FLOAT DECIMAL(6))                    /* result
     1776.1             OUTPUT*/
     1777.1            OPTIONS( ASSEMBLER );
     1778.1
     1779.1
     1780.1      DECLARE  CEESSLOG /* Scalar Single real LOG base e
     1781.1         ENTRY(REAL FLOAT DECIMAL(6),                    /* argument
     1781.1              INPUT*/
     1782.1               1 OPTIONAL ,
     1782.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1782.1                               254 /*MsgNum*/         REAL FIXED BINA
     1782.1      ,                                           254 /*Flags*/,
     1782.1                                                    255 /*Flags_Case
     1782.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1782.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1782.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1782.1      CHAR(3),                                        254 /*I_S_Info
     1782.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1783.1               REAL FLOAT DECIMAL(6))                    /* result
     1783.1             OUTPUT*/
     1784.1            OPTIONS( ASSEMBLER );
     1785.1
     1786.1
     1787.1      DECLARE  CEESSMOD /* Scalar Single real MODular arithmetic
     1788.1         ENTRY(REAL FLOAT DECIMAL(6),                    /* argument
     1788.1              INPUT*/
     1789.1               REAL FLOAT DECIMAL(6),                    /* argument
     1789.1              INPUT*/
     1790.1               1 OPTIONAL ,
     1790.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1790.1                               254 /*MsgNum*/         REAL FIXED BINA
     1790.1      ,                                           254 /*Flags*/,
     1790.1                                                    255 /*Flags_Case
     1790.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1790.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1790.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1790.1      CHAR(3),                                        254 /*I_S_Info
     1790.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1791.1               REAL FLOAT DECIMAL(6))                    /* result
     1791.1             OUTPUT*/
     1792.1            OPTIONS( ASSEMBLER );
     1793.1
     1794.1
     1795.1      DECLARE  CEESSNIN /* Scalar Single real Nearest INteger
     1796.1         ENTRY(REAL FLOAT DECIMAL(6),                    /* argument
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1796.1              INPUT*/
     1797.1               1 OPTIONAL ,
     1797.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1797.1                               254 /*MsgNum*/         REAL FIXED BINA
     1797.1      ,                                           254 /*Flags*/,
     1797.1                                                    255 /*Flags_Case
     1797.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1797.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1797.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1797.1      CHAR(3),                                        254 /*I_S_Info
     1797.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1798.1               REAL FIXED BINARY(31,0))                      /* resul
     1798.1                 OUTPUT*/
     1799.1            OPTIONS( ASSEMBLER );
     1800.1
     1801.1
     1802.1      DECLARE  CEESSNWN /* Scalar Single real Nearest Whole Number
     1803.1         ENTRY(REAL FLOAT DECIMAL(6),                    /* argument
     1803.1              INPUT*/
     1804.1               1 OPTIONAL ,
     1804.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1804.1                               254 /*MsgNum*/         REAL FIXED BINA
     1804.1      ,                                           254 /*Flags*/,
     1804.1                                                    255 /*Flags_Case
     1804.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1804.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1804.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1804.1      CHAR(3),                                        254 /*I_S_Info
     1804.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1805.1               REAL FLOAT DECIMAL(6))                    /* result
     1805.1             OUTPUT*/
     1806.1            OPTIONS( ASSEMBLER );
     1807.1
     1808.1
     1809.1      DECLARE  CEESSSGN /* Scalar Single real transfer of SiGN
     1810.1         ENTRY(REAL FLOAT DECIMAL(6),                    /* argument
     1810.1              INPUT*/
     1811.1               REAL FLOAT DECIMAL(6),                    /* argument
     1811.1              INPUT*/
     1812.1               1 OPTIONAL ,
     1812.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1812.1                               254 /*MsgNum*/         REAL FIXED BINA
     1812.1      ,                                           254 /*Flags*/,
     1812.1                                                    255 /*Flags_Case
     1812.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1812.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1812.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1812.1      CHAR(3),                                        254 /*I_S_Info
     1812.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1813.1               REAL FLOAT DECIMAL(6))                    /* result
     1813.1             OUTPUT*/
     1814.1            OPTIONS( ASSEMBLER );
     1815.1
     1816.1
     1817.1      DECLARE  CEESSSIN /* Scalar Single real circular SINe
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1818.1         ENTRY(REAL FLOAT DECIMAL(6),                    /* argument
     1818.1      ns      INPUT*/
     1819.1               1 OPTIONAL ,
     1819.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1819.1                               254 /*MsgNum*/         REAL FIXED BINA
     1819.1      ,                                           254 /*Flags*/,
     1819.1                                                    255 /*Flags_Case
     1819.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1819.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1819.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1819.1      CHAR(3),                                        254 /*I_S_Info
     1819.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1820.1               REAL FLOAT DECIMAL(6))                    /* result
     1820.1             OUTPUT*/
     1821.1            OPTIONS( ASSEMBLER );
     1822.1
     1823.1
     1824.1      DECLARE  CEESSSNH /* Scalar Single real Hyperbolic SINe
     1825.1         ENTRY(REAL FLOAT DECIMAL(6),                    /* argument
     1825.1              INPUT*/
     1826.1               1 OPTIONAL ,
     1826.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1826.1                               254 /*MsgNum*/         REAL FIXED BINA
     1826.1      ,                                           254 /*Flags*/,
     1826.1                                                    255 /*Flags_Case
     1826.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1826.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1826.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1826.1      CHAR(3),                                        254 /*I_S_Info
     1826.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1827.1               REAL FLOAT DECIMAL(6))                    /* result
     1827.1             OUTPUT*/
     1828.1            OPTIONS( ASSEMBLER );
     1829.1
     1830.1
     1831.1      DECLARE  CEESSSQT /* Scalar Single real SQuare rooT
     1832.1         ENTRY(REAL FLOAT DECIMAL(6),                    /* argument
     1832.1              INPUT*/
     1833.1               1 OPTIONAL ,
     1833.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1833.1                               254 /*MsgNum*/         REAL FIXED BINA
     1833.1      ,                                           254 /*Flags*/,
     1833.1                                                    255 /*Flags_Case
     1833.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1833.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1833.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1833.1      CHAR(3),                                        254 /*I_S_Info
     1833.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1834.1               REAL FLOAT DECIMAL(6))                    /* result
     1834.1             OUTPUT*/
     1835.1            OPTIONS( ASSEMBLER );
     1836.1
     1837.1
     1838.1      DECLARE  CEESSTAN /* Scalar Single real circular TANgent
     1839.1         ENTRY(REAL FLOAT DECIMAL(6),                    /* argument
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1839.1      ns      INPUT*/
     1840.1               1 OPTIONAL ,
     1840.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1840.1                               254 /*MsgNum*/         REAL FIXED BINA
     1840.1      ,                                           254 /*Flags*/,
     1840.1                                                    255 /*Flags_Case
     1840.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1840.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1840.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1840.1      CHAR(3),                                        254 /*I_S_Info
     1840.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1841.1               REAL FLOAT DECIMAL(6))                    /* result
     1841.1             OUTPUT*/
     1842.1            OPTIONS( ASSEMBLER );
     1843.1
     1844.1
     1845.1      DECLARE  CEESSTNH /* Scalar Single real Hyperbolic TaNgent
     1846.1         ENTRY(REAL FLOAT DECIMAL(6),                    /* argument
     1846.1              INPUT*/
     1847.1               1 OPTIONAL ,
     1847.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1847.1                               254 /*MsgNum*/         REAL FIXED BINA
     1847.1      ,                                           254 /*Flags*/,
     1847.1                                                    255 /*Flags_Case
     1847.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1847.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1847.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1847.1      CHAR(3),                                        254 /*I_S_Info
     1847.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1848.1               REAL FLOAT DECIMAL(6))                    /* result
     1848.1             OUTPUT*/
     1849.1            OPTIONS( ASSEMBLER );
     1850.1
     1851.1
     1852.1      DECLARE  CEESSXPI /* Scalar Single real eXPonentiation to Integ
     1853.1         ENTRY(REAL FLOAT DECIMAL(6),                    /* argument
     1853.1              INPUT*/
     1854.1               REAL FIXED BINARY(31,0),                      /* argum
     1854.1      er)         INPUT*/
     1855.1               1 OPTIONAL ,
     1855.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1855.1                               254 /*MsgNum*/         REAL FIXED BINA
     1855.1      ,                                           254 /*Flags*/,
     1855.1                                                    255 /*Flags_Case
     1855.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1855.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1855.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1855.1      CHAR(3),                                        254 /*I_S_Info
     1855.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1856.1               REAL FLOAT DECIMAL(6))                    /* result
     1856.1             OUTPUT*/
     1857.1            OPTIONS( ASSEMBLER );
     1858.1
     1859.1
     1860.1      DECLARE  CEESSXPS /* Scalar Single real eXPonentiation to Singl
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1861.1         ENTRY(REAL FLOAT DECIMAL(6),                    /* argument
     1861.1              INPUT*/
     1862.1               REAL FLOAT DECIMAL(6),                    /* argument
     1862.1              INPUT*/
     1863.1               1 OPTIONAL ,
     1863.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1863.1                               254 /*MsgNum*/         REAL FIXED BINA
     1863.1      ,                                           254 /*Flags*/,
     1863.1                                                    255 /*Flags_Case
     1863.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1863.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1863.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1863.1      CHAR(3),                                        254 /*I_S_Info
     1863.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1864.1               REAL FLOAT DECIMAL(6))                    /* result
     1864.1             OUTPUT*/
     1865.1            OPTIONS( ASSEMBLER );
     1866.1
     1867.1
     1868.1      DECLARE  CEESTABS /* Scalar single complex ABSolute value
     1869.1         ENTRY(COMPLEX FLOAT BINARY(21),                  /* argument
     1869.1               INPUT*/
     1870.1               1 OPTIONAL ,
     1870.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1870.1                               254 /*MsgNum*/         REAL FIXED BINA
     1870.1      ,                                           254 /*Flags*/,
     1870.1                                                    255 /*Flags_Case
     1870.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1870.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1870.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1870.1      CHAR(3),                                        254 /*I_S_Info
     1870.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1871.1               REAL FLOAT DECIMAL(6))                    /* result
     1871.1             OUTPUT*/
     1872.1            OPTIONS( ASSEMBLER );
     1873.1
     1874.1
     1875.1      DECLARE  CEESTATH /* Scalar single complex Hyperbolic ArcTangen
     1876.1         ENTRY(COMPLEX FLOAT BINARY(21),                  /* argument
     1876.1               INPUT*/
     1877.1               1 OPTIONAL ,
     1877.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1877.1                               254 /*MsgNum*/         REAL FIXED BINA
     1877.1      ,                                           254 /*Flags*/,
     1877.1                                                    255 /*Flags_Case
     1877.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1877.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1877.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1877.1      CHAR(3),                                        254 /*I_S_Info
     1877.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1878.1               COMPLEX FLOAT BINARY(21))                  /* result
     1878.1              OUTPUT*/
     1879.1            OPTIONS( ASSEMBLER );
     1880.1
     1881.1
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1882.1      DECLARE  CEESTATN /* Scalar single complex circular ArcTaNgent
     1883.1         ENTRY(COMPLEX FLOAT BINARY(21),                  /* argument
     1883.1               INPUT*/
     1884.1               1 OPTIONAL ,
     1884.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1884.1                               254 /*MsgNum*/         REAL FIXED BINA
     1884.1      ,                                           254 /*Flags*/,
     1884.1                                                    255 /*Flags_Case
     1884.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1884.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1884.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1884.1      CHAR(3),                                        254 /*I_S_Info
     1884.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1885.1               COMPLEX FLOAT BINARY(21))                  /* result
     1885.1              OUTPUT*/
     1886.1               OPTIONS( ASSEMBLER );
     1887.1
     1888.1
     1889.1      DECLARE  CEESTCJG /* Conjugate of Scalar single complex
     1890.1         ENTRY(COMPLEX FLOAT BINARY(21),                  /* argument
     1890.1               INPUT*/
     1891.1               1 OPTIONAL ,
     1891.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1891.1                               254 /*MsgNum*/         REAL FIXED BINA
     1891.1      ,                                           254 /*Flags*/,
     1891.1                                                    255 /*Flags_Case
     1891.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1891.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1891.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1891.1      CHAR(3),                                        254 /*I_S_Info
     1891.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1892.1               COMPLEX FLOAT BINARY(21))                  /* result
     1892.1              OUTPUT*/
     1893.1            OPTIONS( ASSEMBLER );
     1894.1
     1895.1
     1896.1      DECLARE  CEESTCOS /* Scalar single complex circular COSine
     1897.1         ENTRY(COMPLEX FLOAT BINARY(21),                  /* argument
     1897.1               INPUT*/
     1898.1               1 OPTIONAL ,
     1898.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1898.1                               254 /*MsgNum*/         REAL FIXED BINA
     1898.1      ,                                           254 /*Flags*/,
     1898.1                                                    255 /*Flags_Case
     1898.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1898.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1898.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1898.1      CHAR(3),                                        254 /*I_S_Info
     1898.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1899.1               COMPLEX FLOAT BINARY(21))                  /* result
     1899.1              OUTPUT*/
     1900.1            OPTIONS( ASSEMBLER );
     1901.1
     1902.1
     1903.1      DECLARE  CEESTCSH /* Scalar single complex Hyperbolic CoSine
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1904.1         ENTRY(COMPLEX FLOAT BINARY(21),                  /* argument
     1904.1               INPUT*/
     1905.1               1 OPTIONAL ,
     1905.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1905.1                               254 /*MsgNum*/         REAL FIXED BINA
     1905.1      ,                                           254 /*Flags*/,
     1905.1                                                    255 /*Flags_Case
     1905.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1905.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1905.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1905.1      CHAR(3),                                        254 /*I_S_Info
     1905.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1906.1               COMPLEX FLOAT BINARY(21))                  /* result
     1906.1              OUTPUT*/
     1907.1            OPTIONS( ASSEMBLER );
     1908.1
     1909.1
     1910.1      DECLARE  CEESTDVD /* Scalar single complex DiViDe
     1911.1         ENTRY(COMPLEX FLOAT BINARY(21),                  /* argument
     1911.1      nd)      INPUT*/
     1912.1               COMPLEX FLOAT BINARY(21),                  /* argument
     1912.1      r)       INPUT*/
     1913.1               1 OPTIONAL ,
     1913.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1913.1                               254 /*MsgNum*/         REAL FIXED BINA
     1913.1      ,                                           254 /*Flags*/,
     1913.1                                                    255 /*Flags_Case
     1913.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1913.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1913.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1913.1      CHAR(3),                                        254 /*I_S_Info
     1913.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1914.1               COMPLEX FLOAT BINARY(21))                  /* result (
     1914.1      )       OUTPUT*/
     1915.1            OPTIONS( ASSEMBLER );
     1916.1
     1917.1
     1918.1      DECLARE  CEESTEXP /* Scalar single complex EXPonent base e
     1919.1         ENTRY(COMPLEX FLOAT BINARY(21),                  /* argument
     1919.1      of e)    INPUT*/
     1920.1               1 OPTIONAL ,
     1920.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1920.1                               254 /*MsgNum*/         REAL FIXED BINA
     1920.1      ,                                           254 /*Flags*/,
     1920.1                                                    255 /*Flags_Case
     1920.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1920.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1920.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1920.1      CHAR(3),                                        254 /*I_S_Info
     1920.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1921.1               COMPLEX FLOAT BINARY(21))                  /* result
     1921.1              OUTPUT*/
     1922.1            OPTIONS( ASSEMBLER );
     1923.1
     1924.1
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1925.1      DECLARE  CEESTIMG /* Scalar single complex IMaGinary number
     1926.1         ENTRY(COMPLEX FLOAT BINARY(21),                  /* argument
     1926.1               INPUT*/
     1927.1               1 OPTIONAL ,
     1927.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1927.1                               254 /*MsgNum*/         REAL FIXED BINA
     1927.1      ,                                           254 /*Flags*/,
     1927.1                                                    255 /*Flags_Case
     1927.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1927.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1927.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1927.1      CHAR(3),                                        254 /*I_S_Info
     1927.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1928.1               REAL FLOAT DECIMAL(6))                    /* result
     1928.1             OUTPUT*/
     1929.1            OPTIONS( ASSEMBLER );
     1930.1
     1931.1
     1932.1      DECLARE  CEESTLOG /* Scalar single complex LOG base e
     1933.1         ENTRY(COMPLEX FLOAT BINARY(21),                  /* argument
     1933.1               INPUT*/
     1934.1               1 OPTIONAL ,
     1934.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1934.1                               254 /*MsgNum*/         REAL FIXED BINA
     1934.1      ,                                           254 /*Flags*/,
     1934.1                                                    255 /*Flags_Case
     1934.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1934.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1934.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1934.1      CHAR(3),                                        254 /*I_S_Info
     1934.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1935.1               COMPLEX FLOAT BINARY(21))                  /* result
     1935.1              OUTPUT*/
     1936.1            OPTIONS( ASSEMBLER );
     1937.1
     1938.1
     1939.1      DECLARE  CEESTMLT /* Scalar single complex MuLTiply
     1940.1         ENTRY(COMPLEX FLOAT BINARY(21),                  /* argument
     1940.1      licand)  INPUT*/
     1941.1               COMPLEX FLOAT BINARY(21),                  /* argument
     1941.1      lier)    INPUT*/
     1942.1               1 OPTIONAL ,
     1942.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1942.1                               254 /*MsgNum*/         REAL FIXED BINA
     1942.1      ,                                           254 /*Flags*/,
     1942.1                                                    255 /*Flags_Case
     1942.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1942.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1942.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1942.1      CHAR(3),                                        254 /*I_S_Info
     1942.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1943.1               COMPLEX FLOAT BINARY(21))                  /* result (
     1943.1              OUTPUT*/
     1944.1            OPTIONS( ASSEMBLER );
     1945.1
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1946.1
     1947.1      DECLARE  CEESTSIN /* Scalar single complex circular SINe
     1948.1         ENTRY(COMPLEX FLOAT BINARY(21),                  /* argument
     1948.1               INPUT*/
     1949.1               1 OPTIONAL ,
     1949.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1949.1                               254 /*MsgNum*/         REAL FIXED BINA
     1949.1      ,                                           254 /*Flags*/,
     1949.1                                                    255 /*Flags_Case
     1949.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1949.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1949.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1949.1      CHAR(3),                                        254 /*I_S_Info
     1949.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1950.1               COMPLEX FLOAT BINARY(21))                  /* result
     1950.1              OUTPUT*/
     1951.1            OPTIONS( ASSEMBLER );
     1952.1
     1953.1
     1954.1      DECLARE  CEESTSNH /* Scalar single complex Hypebolic SiNe
     1955.1         ENTRY(COMPLEX FLOAT BINARY(21),                  /* argument
     1955.1               INPUT*/
     1956.1               1 OPTIONAL ,
     1956.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1956.1                               254 /*MsgNum*/         REAL FIXED BINA
     1956.1      ,                                           254 /*Flags*/,
     1956.1                                                    255 /*Flags_Case
     1956.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1956.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1956.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1956.1      CHAR(3),                                        254 /*I_S_Info
     1956.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1957.1               COMPLEX FLOAT BINARY(21))                  /* result
     1957.1              OUTPUT*/
     1958.1            OPTIONS( ASSEMBLER );
     1959.1
     1960.1
     1961.1      DECLARE  CEESTSQT /* Scalar single complex SQuare rooT
     1962.1         ENTRY(COMPLEX FLOAT BINARY(21),                  /* argument
     1962.1               INPUT*/
     1963.1               1 OPTIONAL ,
     1963.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1963.1                               254 /*MsgNum*/         REAL FIXED BINA
     1963.1      ,                                           254 /*Flags*/,
     1963.1                                                    255 /*Flags_Case
     1963.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1963.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1963.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1963.1      CHAR(3),                                        254 /*I_S_Info
     1963.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1964.1               COMPLEX FLOAT BINARY(21))                  /* result
     1964.1              OUTPUT*/
     1965.1            OPTIONS( ASSEMBLER );
     1966.1
     1967.1
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1968.1      DECLARE  CEESTTAN /* Scalar single complex circular TANgent
     1969.1         ENTRY(COMPLEX FLOAT BINARY(21),                  /* argument
     1969.1               INPUT*/
     1970.1               1 OPTIONAL ,
     1970.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1970.1                               254 /*MsgNum*/         REAL FIXED BINA
     1970.1      ,                                           254 /*Flags*/,
     1970.1                                                    255 /*Flags_Case
     1970.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1970.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1970.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1970.1      CHAR(3),                                        254 /*I_S_Info
     1970.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1971.1               COMPLEX FLOAT BINARY(21))                  /* result
     1971.1              OUTPUT*/
     1972.1            OPTIONS( ASSEMBLER );
     1973.1
     1974.1
     1975.1      DECLARE  CEESTTNH /* Scalar single complex Hyperbolic TaNgent
     1976.1         ENTRY(COMPLEX FLOAT BINARY(21),                  /* argument
     1976.1               INPUT*/
     1977.1               1 OPTIONAL ,
     1977.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1977.1                               254 /*MsgNum*/         REAL FIXED BINA
     1977.1      ,                                           254 /*Flags*/,
     1977.1                                                    255 /*Flags_Case
     1977.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1977.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1977.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1977.1      CHAR(3),                                        254 /*I_S_Info
     1977.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1978.1               COMPLEX FLOAT BINARY(21))                  /* result
     1978.1              OUTPUT*/
     1979.1            OPTIONS( ASSEMBLER );
     1980.1
     1981.1
     1982.1      DECLARE  CEESTXPI /* Scalar single complex eXPonent to Integer
     1983.1         ENTRY(COMPLEX FLOAT BINARY(21),                  /* argument
     1983.1               INPUT*/
     1984.1               REAL FIXED BINARY(31,0),                      /* argum
     1984.1      er)         INPUT*/
     1985.1               1 OPTIONAL ,
     1985.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1985.1                               254 /*MsgNum*/         REAL FIXED BINA
     1985.1      ,                                           254 /*Flags*/,
     1985.1                                                    255 /*Flags_Case
     1985.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1985.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1985.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1985.1      CHAR(3),                                        254 /*I_S_Info
     1985.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1986.1               COMPLEX FLOAT BINARY(21))                  /* result
     1986.1              OUTPUT*/
     1987.1            OPTIONS( ASSEMBLER );
     1988.1
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1989.1
     1990.1      DECLARE  CEESTXPT /* Scalar single complex eXPonent to short co
     1991.1         ENTRY(COMPLEX FLOAT BINARY(21),                  /* argument
     1991.1               INPUT*/
     1992.1               COMPLEX FLOAT BINARY(21),                  /* argument
     1992.1               INPUT*/
     1993.1               1 OPTIONAL ,
     1993.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     1993.1                               254 /*MsgNum*/         REAL FIXED BINA
     1993.1      ,                                           254 /*Flags*/,
     1993.1                                                    255 /*Flags_Case
     1993.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     1993.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     1993.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     1993.1      CHAR(3),                                        254 /*I_S_Info
     1993.1      REAL FIXED BINARY(31,0),  /* feedback cond. token    OUTPUT*/
     1994.1               COMPLEX FLOAT BINARY(21))                  /* result
     1994.1              OUTPUT*/
     1995.1            OPTIONS( ASSEMBLER );
     1996.1
     1997.1      /*-------------------------------------------------------------
     1998.1      /*
     1999.1      /*                        Locale Callable AWIs
     2000.1      /*
     2001.1      /*-------------------------------------------------------------
     2002.1
     2003.1      DECLARE CEEFMON /* Format monetary string
     2004.1         ENTRY(OPTIONAL POINTER,         /* Pointer unused          i
     2005.1               REAL FLOAT DEC(16),       /* Double word precision   i
     2006.1               BIN FIXED(31),            /* Integer 4 bytes         i
     2007.1               CHAR(*) VAR,              /* Char(256) varying input f
     2008.1               CHAR(*) VAR,              /* Char(256) varying output
     2009.1               BIN FIXED(31),            /* Integer 4 bytes         o
     2010.1               1 OPTIONAL ,
     2010.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     2010.1                               254 /*MsgNum*/         REAL FIXED BINA
     2010.1      ,                                           254 /*Flags*/,
     2010.1                                                    255 /*Flags_Case
     2010.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     2010.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     2010.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     2010.1      CHAR(3),                                        254 /*I_S_Info
     2010.1      REAL FIXED BINARY(31,0)) /* Char(12) feedback code  output */
     2011.1            OPTIONS(ASSEMBLER);          /*
     2012.1
     2013.1      DECLARE CEEFTDS /* Format datetime string
     2014.1         ENTRY(OPTIONAL POINTER,         /* Pointer unused
     2015.1               POINTER,                  /* Pointer to TD_STRUCT
     2016.1               BIN FIXED(31),            /* Integer 4 bytes
     2017.1               CHAR(*) VAR,              /* Char(256) varying input f
     2018.1               CHAR(*) VAR,              /* Char(256) varying output
     2019.1               1 OPTIONAL ,
     2019.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     2019.1                               254 /*MsgNum*/         REAL FIXED BINA
     2019.1      ,                                           254 /*Flags*/,
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    2019.1                                                    255 /*Flags_Case
     2019.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     2019.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     2019.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     2019.1      CHAR(3),                                        254 /*I_S_Info
     2019.1      REAL FIXED BINARY(31,0)) /* Char(12) feedback code  output */
     2020.1            OPTIONS(ASSEMBLER);          /*
     2021.1
     2022.1      DECLARE CEELCNV /* Query numeric conventions
     2023.1         ENTRY(OPTIONAL POINTER,         /* Pointer unused
     2024.1               POINTER,                  /* Ptr to num structure    o
     2025.1               1 OPTIONAL ,
     2025.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     2025.1                               254 /*MsgNum*/         REAL FIXED BINA
     2025.1      ,                                           254 /*Flags*/,
     2025.1                                                    255 /*Flags_Case
     2025.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     2025.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     2025.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     2025.1      CHAR(3),                                        254 /*I_S_Info
     2025.1      REAL FIXED BINARY(31,0)) /* Char(12) feedback code  output */
     2026.1            OPTIONS(ASSEMBLER);          /*
     2027.1
     2028.1      DECLARE CEEQDTC /* Query datetime formatting conventions
     2029.1         ENTRY(OPTIONAL POINTER,         /* Pointer unused
     2030.1               POINTER,                  /* Ptr to DTCONV structure o
     2031.1               1 OPTIONAL ,
     2031.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     2031.1                               254 /*MsgNum*/         REAL FIXED BINA
     2031.1      ,                                           254 /*Flags*/,
     2031.1                                                    255 /*Flags_Case
     2031.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     2031.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     2031.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     2031.1      CHAR(3),                                        254 /*I_S_Info
     2031.1      REAL FIXED BINARY(31,0)) /* Char(12) feedback code  output */
     2032.1            OPTIONS(ASSEMBLER);          /*
     2033.1
     2034.1      DECLARE CEEQRYL /* Query locale settings
     2035.1         ENTRY(BIN FIXED(31),            /* Integer 4 bytes Category
     2036.1               CHAR(*) VAR,              /* Char(256) varying name  o
     2037.1               1 OPTIONAL ,
     2037.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     2037.1                               254 /*MsgNum*/         REAL FIXED BINA
     2037.1      ,                                           254 /*Flags*/,
     2037.1                                                    255 /*Flags_Case
     2037.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     2037.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     2037.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     2037.1      CHAR(3),                                        254 /*I_S_Info
     2037.1      REAL FIXED BINARY(31,0)) /* Char(12) feedback code  output */
     2038.1            OPTIONS(ASSEMBLER);          /*
     2039.1
     2040.1      DECLARE CEESCOL /* String collation comparison
     2041.1         ENTRY(OPTIONAL POINTER,         /* Pointer unused
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    2042.1               CHAR(*) VAR,              /* Char(*) varying string1
     2043.1               CHAR(*) VAR,              /* Char(*) varying string2
     2044.1               BIN FIXED(31),            /* Integer 4 bytes         o
     2045.1               1 OPTIONAL ,
     2045.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     2045.1                               254 /*MsgNum*/         REAL FIXED BINA
     2045.1      ,                                           254 /*Flags*/,
     2045.1                                                    255 /*Flags_Case
     2045.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     2045.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     2045.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     2045.1      CHAR(3),                                        254 /*I_S_Info
     2045.1      REAL FIXED BINARY(31,0)) /* Char(12) feedback code  output */
     2046.1            OPTIONS(ASSEMBLER);          /*
     2047.1
     2048.1      DECLARE CEESETL /* Set locale
     2049.1         ENTRY(CHAR(*) VAR,              /* Char(256) varying name
     2050.1               BIN FIXED(31),            /* Integer 4 bytes Category
     2051.1               1 OPTIONAL ,
     2051.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     2051.1                               254 /*MsgNum*/         REAL FIXED BINA
     2051.1      ,                                           254 /*Flags*/,
     2051.1                                                    255 /*Flags_Case
     2051.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     2051.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     2051.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     2051.1      CHAR(3),                                        254 /*I_S_Info
     2051.1      REAL FIXED BINARY(31,0)) /* Char(12) feedback code  output */
     2052.1            OPTIONS(ASSEMBLER);          /*
     2053.1
     2054.1      DECLARE CEESTXF /* String collation weight
     2055.1         ENTRY(OPTIONAL POINTER,         /* Pointer unused
     2056.1               CHAR(*) VAR,              /* Char(*) varying
     2057.1               BIN FIXED(31),            /* Integer 4 # of bytes
     2058.1               CHAR(*) VAR,              /* Char(*) varying         o
     2059.1               BIN FIXED(31),            /* Integer 4 bytes convertd
     2060.1               1 OPTIONAL ,
     2060.1            254 /*MsgSev*/         REAL FIXED BINARY(15,0),
     2060.1                               254 /*MsgNum*/         REAL FIXED BINA
     2060.1      ,                                           254 /*Flags*/,
     2060.1                                                    255 /*Flags_Case
     2060.1      BIT(2) UNALIGNED,                              255 /*Flags_Seve
     2060.1      BIT(3) UNALIGNED,                              255 /*Flags_Cont
     2060.1      BIT(3) UNALIGNED,                            254 /*Facility_ID
     2060.1      CHAR(3),                                        254 /*I_S_Info
     2060.1      REAL FIXED BINARY(31,0)) /* Char(12) feedback code  output */
     2061.1            OPTIONS(ASSEMBLER);          /*
     2062.1
       10.0       /*   END %INCLUDE CEEIBMAW */
       11.0       /* BEGIN %INCLUDE CEEIBMCT */
        1.2      /**************************************************************
        2.2      /*
        3.2      /* Licensed Materials - Property of IBM
        4.2      /*
        5.2      /* 5650-ZOS 5688-198 Copyright IBM Corp. 1991, 2017
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0       6.2      /*
        7.2      /* All Rights Reserved.
        8.2      /*
        9.2      /* US Government Users Restricted Rights - Use, duplication or
       10.2      /* disclosure restricted by GSA ADP Schedule Contract with
       11.2      /* IBM Corp.
       12.2      /*
       13.2      /* STATUS = HLE77B0
       14.2      /*
       15.2      /**************************************************************
       16.2      /**************************************************************
       17.2       *
       18.2       *   CEEIBMCT
       19.2       *
       20.2       *   Language Environment Feedback Code Constant Definitions fo
       21.2       *
       22.2       *   This file provides declarations for the set of all
       23.2       *   Language Environment defined feedback tokens.
       24.2       *
       25.2       *   It may be %Included in a PL/I source program to obtain
       26.2       *   symbolic constants for the tokens.
       27.2       *
       28.2       **************************************************************
       29.2
       30.2      /* Condition Token Declarations */
       31.2
       32.2      DECLARE CEE000 CHARACTER(8) STATIC INITIAL('0000000000000000'X)
       33.2      DECLARE CEE001 CHARACTER(8) STATIC INIT('0000000141C3C5C5'X);
       34.2      DECLARE CEE002 CHARACTER(8) STATIC INIT('0000000241C3C5C5'X);
       35.2      DECLARE CEE003 CHARACTER(8) STATIC INIT('0000000341C3C5C5'X);
       36.2      DECLARE CEE004 CHARACTER(8) STATIC INIT('0000000441C3C5C5'X);
       37.2      DECLARE CEE005 CHARACTER(8) STATIC INIT('0000000541C3C5C5'X);
       38.2      DECLARE CEE006 CHARACTER(8) STATIC INIT('0000000641C3C5C5'X);
       39.2      DECLARE CEE007 CHARACTER(8) STATIC INIT('0000000741C3C5C5'X);
       40.2      DECLARE CEE008 CHARACTER(8) STATIC INIT('0000000841C3C5C5'X);
       41.2      DECLARE CEE009 CHARACTER(8) STATIC INIT('0000000941C3C5C5'X);
       42.2      DECLARE CEE00A CHARACTER(8) STATIC INIT('0000000A41C3C5C5'X);
       43.2      DECLARE CEE00B CHARACTER(8) STATIC INIT('0000000B41C3C5C5'X);
       44.2      DECLARE CEE00C CHARACTER(8) STATIC INIT('0000000C41C3C5C5'X);
       45.2      DECLARE CEE00D CHARACTER(8) STATIC INIT('0000000D41C3C5C5'X);
       46.2      DECLARE CEE00E CHARACTER(8) STATIC INIT('0000000E41C3C5C5'X);
       47.2      DECLARE CEE00F CHARACTER(8) STATIC INIT('0000000F41C3C5C5'X);
       48.2      DECLARE CEE00G CHARACTER(8) STATIC INIT('0000001041C3C5C5'X);
       49.2      DECLARE CEE00H CHARACTER(8) STATIC INIT('0000001141C3C5C5'X);
       50.2      DECLARE CEE00I CHARACTER(8) STATIC INIT('0000001241C3C5C5'X);
       51.2      DECLARE CEE00J CHARACTER(8) STATIC INIT('0000001341C3C5C5'X);
       52.2      DECLARE CEE00L CHARACTER(8) STATIC INIT('0000001541C3C5C5'X);
       53.2      DECLARE CEE00M CHARACTER(8) STATIC INIT('0000001641C3C5C5'X);
       54.2      DECLARE CEE00N CHARACTER(8) STATIC INIT('0000001741C3C5C5'X);
       55.2      DECLARE CEE00O CHARACTER(8) STATIC INIT('0000001841C3C5C5'X);
       56.2      DECLARE CEE00P CHARACTER(8) STATIC INIT('0000001941C3C5C5'X);
       57.2      DECLARE CEE00Q CHARACTER(8) STATIC INIT('0000001A41C3C5C5'X);
       58.2      DECLARE CEE00R CHARACTER(8) STATIC INIT('0000001B41C3C5C5'X);
       59.2      DECLARE CEE00S CHARACTER(8) STATIC INIT('0000001C41C3C5C5'X);
       60.2      DECLARE CEE00T CHARACTER(8) STATIC INIT('0000001D41C3C5C5'X);
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0      61.2      DECLARE CEE00U CHARACTER(8) STATIC INIT('0000001E41C3C5C5'X);
       62.2      DECLARE CEE00V CHARACTER(8) STATIC INIT('0000001F41C3C5C5'X);
       63.2      DECLARE CEE010 CHARACTER(8) STATIC INIT('0000002041C3C5C5'X);
       64.2      DECLARE CEE011 CHARACTER(8) STATIC INIT('0000002141C3C5C5'X);
       65.2      DECLARE CEE012 CHARACTER(8) STATIC INIT('0000002241C3C5C5'X);
       66.2      DECLARE CEE013 CHARACTER(8) STATIC INIT('0000002341C3C5C5'X);
       67.2      DECLARE CEE014 CHARACTER(8) STATIC INIT('0000002441C3C5C5'X);
       68.2      DECLARE CEE015 CHARACTER(8) STATIC INIT('0000002541C3C5C5'X);
       69.2      DECLARE CEE016 CHARACTER(8) STATIC INIT('0000002641C3C5C5'X);
       70.2      DECLARE CEE017 CHARACTER(8) STATIC INIT('0000002741C3C5C5'X);
       71.2      DECLARE CEE036 CHARACTER(8) STATIC INIT('0003006659C3C5C5'X);
       72.2      DECLARE CEE03E CHARACTER(8) STATIC INIT('0003006E59C3C5C5'X);
       73.2      DECLARE CEE03F CHARACTER(8) STATIC INIT('0003006F59C3C5C5'X);
       74.2      DECLARE CEE03G CHARACTER(8) STATIC INIT('0003007059C3C5C5'X);
       75.2      DECLARE CEE03H CHARACTER(8) STATIC INIT('0003007159C3C5C5'X);
       76.2      DECLARE CEE066 CHARACTER(8) STATIC INIT('000300C659C3C5C5'X);
       77.2      DECLARE CEE067 CHARACTER(8) STATIC INIT('000100C749C3C5C5'X);
       78.2      DECLARE CEE069 CHARACTER(8) STATIC INIT('000000C941C3C5C5'X);
       79.2      DECLARE CEE07Q CHARACTER(8) STATIC INIT('000300FA59C3C5C5'X);
       80.2      DECLARE CEE07S CHARACTER(8) STATIC INIT('000100FC49C3C5C5'X);
       81.2      DECLARE CEE07T CHARACTER(8) STATIC INIT('000100FD49C3C5C5'X);
       82.2      DECLARE CEE07U CHARACTER(8) STATIC INIT('000100FE49C3C5C5'X);
       83.2      DECLARE CEE07V CHARACTER(8) STATIC INIT('000300FF59C3C5C5'X);
       84.2      DECLARE CEE080 CHARACTER(8) STATIC INIT('0001010049C3C5C5'X);
       85.2      DECLARE CEE081 CHARACTER(8) STATIC INIT('0003010159C3C5C5'X);
       86.2      DECLARE CEE083 CHARACTER(8) STATIC INIT('0003010359C3C5C5'X);
       87.2      DECLARE CEE084 CHARACTER(8) STATIC INIT('0003010459C3C5C5'X);
       88.2      DECLARE CEE088 CHARACTER(8) STATIC INIT('0003010859C3C5C5'X);
       89.2      DECLARE CEE08L CHARACTER(8) STATIC INIT('0001011549C3C5C5'X);
       90.2      DECLARE CEE0B3 CHARACTER(8) STATIC INIT('0004016361C3C5C5'X);
       91.2      DECLARE CEE0B4 CHARACTER(8) STATIC INIT('0004016461C3C5C5'X);
       92.2      DECLARE CEE0BM CHARACTER(8) STATIC INIT('0004017661C3C5C5'X);
       93.2      DECLARE CEE0CE CHARACTER(8) STATIC INIT('0001018E49C3C5C5'X);
       94.2      DECLARE CEE0CF CHARACTER(8) STATIC INIT('0001018F49C3C5C5'X);
       95.2      DECLARE CEE0CG CHARACTER(8) STATIC INIT('0002019051C3C5C5'X);
       96.2      DECLARE CEE0CH CHARACTER(8) STATIC INIT('0003019159C3C5C5'X);
       97.2      DECLARE CEE0CI CHARACTER(8) STATIC INIT('0003019259C3C5C5'X);
       98.2      DECLARE CEE0CJ CHARACTER(8) STATIC INIT('0003019359C3C5C5'X);
       99.2      DECLARE CEE0CK CHARACTER(8) STATIC INIT('0001019449C3C5C5'X);
      100.2      DECLARE CEE0E2 CHARACTER(8) STATIC INIT('000301C259C3C5C5'X);
      101.2      DECLARE CEE0E3 CHARACTER(8) STATIC INIT('000301C359C3C5C5'X);
      102.2      DECLARE CEE0E4 CHARACTER(8) STATIC INIT('000301C459C3C5C5'X);
      103.2      DECLARE CEE0E6 CHARACTER(8) STATIC INIT('000301C659C3C5C5'X);
      104.2      DECLARE CEE0E7 CHARACTER(8) STATIC INIT('000101C749C3C5C5'X);
      105.2      DECLARE CEE0E9 CHARACTER(8) STATIC INIT('000301C959C3C5C5'X);
      106.2      DECLARE CEE0EA CHARACTER(8) STATIC INIT('000301CA59C3C5C5'X);
      107.2      DECLARE CEE0EB CHARACTER(8) STATIC INIT('000301CB59C3C5C5'X);
      108.2      DECLARE CEE0EC CHARACTER(8) STATIC INIT('000101CC49C3C5C5'X);
      109.2      DECLARE CEE0ED CHARACTER(8) STATIC INIT('000301CD59C3C5C5'X);
      110.2      DECLARE CEE0EE CHARACTER(8) STATIC INIT('000301CE59C3C5C5'X);
      111.2      DECLARE CEE0EF CHARACTER(8) STATIC INIT('000301CF59C3C5C5'X);
      112.2      DECLARE CEE0EG CHARACTER(8) STATIC INIT('000301D059C3C5C5'X);
      113.2      DECLARE CEE0FM CHARACTER(8) STATIC INIT('000301F659C3C5C5'X);
      114.2      DECLARE CEE0H9 CHARACTER(8) STATIC INIT('0003022959C3C5C5'X);
      115.2      DECLARE CEE0HA CHARACTER(8) STATIC INIT('0001022A49C3C5C5'X);
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     116.2      DECLARE CEE0P2 CHARACTER(8) STATIC INIT('0004032261C3C5C5'X);
      117.2      DECLARE CEE0P3 CHARACTER(8) STATIC INIT('0003032359C3C5C5'X);
      118.2      DECLARE CEE0P4 CHARACTER(8) STATIC INIT('0003032459C3C5C5'X);
      119.2      DECLARE CEE0P5 CHARACTER(8) STATIC INIT('0003032559C3C5C5'X);
      120.2      DECLARE CEE0P6 CHARACTER(8) STATIC INIT('0003032659C3C5C5'X);
      121.2      DECLARE CEE0P7 CHARACTER(8) STATIC INIT('0003032759C3C5C5'X);
      122.2      DECLARE CEE0P8 CHARACTER(8) STATIC INIT('0003032859C3C5C5'X);
      123.2      DECLARE CEE0P9 CHARACTER(8) STATIC INIT('0003032959C3C5C5'X);
      124.2      DECLARE CEE0PA CHARACTER(8) STATIC INIT('0003032A59C3C5C5'X);
      125.2      DECLARE CEE0PC CHARACTER(8) STATIC INIT('0003032C59C3C5C5'X);
      126.2      DECLARE CEE0PD CHARACTER(8) STATIC INIT('0003032D59C3C5C5'X);
      127.2      DECLARE CEE0PE CHARACTER(8) STATIC INIT('0003032E59C3C5C5'X);
      128.2      DECLARE CEE0PF CHARACTER(8) STATIC INIT('0002032F51C3C5C5'X);
      129.2      DECLARE CEE0V8 CHARACTER(8) STATIC INIT('000303E859C3C5C5'X);
      130.2      DECLARE CEE0V9 CHARACTER(8) STATIC INIT('000203E951C3C5C5'X);
      131.2      DECLARE CEE1UH CHARACTER(8) STATIC INIT('000207D151C3C5C5'X);
      132.2      DECLARE CEE1UI CHARACTER(8) STATIC INIT('000207D251C3C5C5'X);
      133.2      DECLARE CEE1UJ CHARACTER(8) STATIC INIT('000207D351C3C5C5'X);
      134.2      DECLARE CEE1UK CHARACTER(8) STATIC INIT('000207D451C3C5C5'X);
      135.2      DECLARE CEE1UL CHARACTER(8) STATIC INIT('000207D551C3C5C5'X);
      136.2      DECLARE CEE1UM CHARACTER(8) STATIC INIT('000207D651C3C5C5'X);
      137.2      DECLARE CEE1UN CHARACTER(8) STATIC INIT('000207D751C3C5C5'X);
      138.2      DECLARE CEE1UO CHARACTER(8) STATIC INIT('000207D851C3C5C5'X);
      139.2      DECLARE CEE1UP CHARACTER(8) STATIC INIT('000207D951C3C5C5'X);
      140.2      DECLARE CEE1UQ CHARACTER(8) STATIC INIT('000207DA51C3C5C5'X);
      141.2      DECLARE CEE1UR CHARACTER(8) STATIC INIT('000207DB51C3C5C5'X);
      142.2      DECLARE CEE1US CHARACTER(8) STATIC INIT('000207DC51C3C5C5'X);
      143.2      DECLARE CEE1UT CHARACTER(8) STATIC INIT('000207DD51C3C5C5'X);
      144.2      DECLARE CEE1UU CHARACTER(8) STATIC INIT('000207DE51C3C5C5'X);
      145.2      DECLARE CEE1UV CHARACTER(8) STATIC INIT('000207DF51C3C5C5'X);
      146.2      DECLARE CEE1V0 CHARACTER(8) STATIC INIT('000207E051C3C5C5'X);
      147.2      DECLARE CEE1V1 CHARACTER(8) STATIC INIT('000207E151C3C5C5'X);
      148.2      DECLARE CEE1V2 CHARACTER(8) STATIC INIT('000207E251C3C5C5'X);
      149.2      DECLARE CEE1V3 CHARACTER(8) STATIC INIT('000207E351C3C5C5'X);
      150.2      DECLARE CEE1V4 CHARACTER(8) STATIC INIT('000207E451C3C5C5'X);
      151.2      DECLARE CEE1V5 CHARACTER(8) STATIC INIT('000207E551C3C5C5'X);
      152.2      DECLARE CEE1V6 CHARACTER(8) STATIC INIT('000207E651C3C5C5'X);
      153.2      DECLARE CEE1V8 CHARACTER(8) STATIC INIT('000207E851C3C5C5'X);
      154.2      DECLARE CEE1V9 CHARACTER(8) STATIC INIT('000107E949C3C5C5'X);
      155.2      DECLARE CEE1VC CHARACTER(8) STATIC INIT('000207EC51C3C5C5'X);
      156.2      DECLARE CEE1VD CHARACTER(8) STATIC INIT('000207ED51C3C5C5'X);
      157.2      DECLARE CEE1VE CHARACTER(8) STATIC INIT('000207EE51C3C5C5'X);
      158.2      DECLARE CEE1VF CHARACTER(8) STATIC INIT('000207EF51C3C5C5'X);
      159.2      DECLARE CEE1VO CHARACTER(8) STATIC INIT('000207F851C3C5C5'X);
      160.2      DECLARE CEE1VP CHARACTER(8) STATIC INIT('000207F951C3C5C5'X);
      161.2      DECLARE CEE1VQ CHARACTER(8) STATIC INIT('000207FA51C3C5C5'X);
      162.2      DECLARE CEE1VR CHARACTER(8) STATIC INIT('000207FB51C3C5C5'X);
      163.2      DECLARE CEE202 CHARACTER(8) STATIC INIT('0003080259C3C5C5'X);
      164.2      DECLARE CEE203 CHARACTER(8) STATIC INIT('0003080359C3C5C5'X);
      165.2      DECLARE CEE204 CHARACTER(8) STATIC INIT('0003080459C3C5C5'X);
      166.2      DECLARE CEE205 CHARACTER(8) STATIC INIT('0003080559C3C5C5'X);
      167.2      DECLARE CEE2E6 CHARACTER(8) STATIC INIT('000309C659C3C5C5'X);
      168.2      DECLARE CEE2E7 CHARACTER(8) STATIC INIT('000309C759C3C5C5'X);
      169.2      DECLARE CEE2E9 CHARACTER(8) STATIC INIT('000309C959C3C5C5'X);
      170.2      DECLARE CEE2EA CHARACTER(8) STATIC INIT('000309CA59C3C5C5'X);
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     171.2      DECLARE CEE2EB CHARACTER(8) STATIC INIT('000309CB59C3C5C5'X);
      172.2      DECLARE CEE2EC CHARACTER(8) STATIC INIT('000309CC59C3C5C5'X);
      173.2      DECLARE CEE2ED CHARACTER(8) STATIC INIT('000309CD59C3C5C5'X);
      174.2      DECLARE CEE2EE CHARACTER(8) STATIC INIT('000309CE59C3C5C5'X);
      175.2      DECLARE CEE2EF CHARACTER(8) STATIC INIT('000309CF59C3C5C5'X);
      176.2      DECLARE CEE2EG CHARACTER(8) STATIC INIT('000309D059C3C5C5'X);
      177.2      DECLARE CEE2EH CHARACTER(8) STATIC INIT('000309D159C3C5C5'X);
      178.2      DECLARE CEE2EI CHARACTER(8) STATIC INIT('000309D259C3C5C5'X);
      179.2      DECLARE CEE2EJ CHARACTER(8) STATIC INIT('000309D359C3C5C5'X);
      180.2      DECLARE CEE2EK CHARACTER(8) STATIC INIT('000309D459C3C5C5'X);
      181.2      DECLARE CEE2EL CHARACTER(8) STATIC INIT('000309D559C3C5C5'X);
      182.2      DECLARE CEE2EM CHARACTER(8) STATIC INIT('000309D659C3C5C5'X);
      183.2      DECLARE CEE2EN CHARACTER(8) STATIC INIT('000309D759C3C5C5'X);
      184.2      DECLARE CEE2EO CHARACTER(8) STATIC INIT('000309D859C3C5C5'X);
      185.2      DECLARE CEE2EP CHARACTER(8) STATIC INIT('000309D959C3C5C5'X);
      186.2      DECLARE CEE2EQ CHARACTER(8) STATIC INIT('000309DA59C3C5C5'X);
      187.2      DECLARE CEE2ER CHARACTER(8) STATIC INIT('000109DB49C3C5C5'X);
      188.2      DECLARE CEE2ES CHARACTER(8) STATIC INIT('000309DC59C3C5C5'X);
      189.2      DECLARE CEE2ET CHARACTER(8) STATIC INIT('000309DD59C3C5C5'X);
      190.2      DECLARE CEE2EU CHARACTER(8) STATIC INIT('000209DE51C3C5C5'X);
      191.2      DECLARE CEE2EV CHARACTER(8) STATIC INIT('000209DF51C3C5C5'X);
      192.2      DECLARE CEE2F1 CHARACTER(8) STATIC INIT('000309E159C3C5C5'X);
      193.2      DECLARE CEE2F2 CHARACTER(8) STATIC INIT('000309E259C3C5C5'X);
      194.2      DECLARE CEE2F3 CHARACTER(8) STATIC INIT('000309E359C3C5C5'X);
      195.2      DECLARE CEE2F5 CHARACTER(8) STATIC INIT('000309E559C3C5C5'X);
      196.2      DECLARE CEE2F6 CHARACTER(8) STATIC INIT('000109E649C3C5C5'X);
      197.2      DECLARE CEE2F7 CHARACTER(8) STATIC INIT('000309E759C3C5C5'X);
      198.2      DECLARE CEE2F9 CHARACTER(8) STATIC INIT('000109E949C3C5C5'X);
      199.2      DECLARE CEE2H8 CHARACTER(8) STATIC INIT('00000A2841C3C5C5'X);
      200.2      DECLARE CEE2H9 CHARACTER(8) STATIC INIT('00000A2941C3C5C5'X);
      201.2      DECLARE CEE2HA CHARACTER(8) STATIC INIT('00000A2A41C3C5C5'X);
      202.2      DECLARE CEE2HB CHARACTER(8) STATIC INIT('00000A2B41C3C5C5'X);
      203.2      DECLARE CEE2HC CHARACTER(8) STATIC INIT('00000A2C41C3C5C5'X);
      204.2      DECLARE CEE2HE CHARACTER(8) STATIC INIT('00020A2E51C3C5C5'X);
      205.2      DECLARE CEE2HF CHARACTER(8) STATIC INIT('00020A2F51C3C5C5'X);
      206.2      DECLARE CEE2HG CHARACTER(8) STATIC INIT('00020A3051C3C5C5'X);
      207.2      DECLARE CEE2KD CHARACTER(8) STATIC INIT('00030A8D59C3C5C5'X);
      208.2      DECLARE CEE2KE CHARACTER(8) STATIC INIT('00030A8E59C3C5C5'X);
      209.2      DECLARE CEE2TN CHARACTER(8) STATIC INIT('00040BB761C3C5C5'X);
      210.2      DECLARE CEE2TO CHARACTER(8) STATIC INIT('00000BB841C3C5C5'X);
      211.2      DECLARE CEE2TP CHARACTER(8) STATIC INIT('00000BB941C3C5C5'X);
      212.2      DECLARE CEE2TQ CHARACTER(8) STATIC INIT('00000BBA41C3C5C5'X);
      213.2      DECLARE CEE2TR CHARACTER(8) STATIC INIT('00000BBB41C3C5C5'X);
      214.2      DECLARE CEE2TS CHARACTER(8) STATIC INIT('00000BBC41C3C5C5'X);
      215.2      DECLARE CEE2TT CHARACTER(8) STATIC INIT('00000BBD41C3C5C5'X);
      216.2      DECLARE CEE2TU CHARACTER(8) STATIC INIT('00000BBE41C3C5C5'X);
      217.2      DECLARE CEE2TV CHARACTER(8) STATIC INIT('00000BBF41C3C5C5'X);
      218.2      DECLARE CEE2U0 CHARACTER(8) STATIC INIT('00000BC041C3C5C5'X);
      219.2      DECLARE CEE2U1 CHARACTER(8) STATIC INIT('00000BC141C3C5C5'X);
      220.2      DECLARE CEE2U2 CHARACTER(8) STATIC INIT('00000BC241C3C5C5'X);
      221.2      DECLARE CEE2U3 CHARACTER(8) STATIC INIT('00000BC341C3C5C5'X);
      222.2      DECLARE CEE2U4 CHARACTER(8) STATIC INIT('00000BC441C3C5C5'X);
      223.2      DECLARE CEE2U5 CHARACTER(8) STATIC INIT('00000BC541C3C5C5'X);
      224.2      DECLARE CEE2U6 CHARACTER(8) STATIC INIT('00000BC641C3C5C5'X);
      225.2      DECLARE CEE2U7 CHARACTER(8) STATIC INIT('00000BC741C3C5C5'X);
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     226.2      DECLARE CEE2U8 CHARACTER(8) STATIC INIT('00000BC841C3C5C5'X);
      227.2      DECLARE CEE2U9 CHARACTER(8) STATIC INIT('00000BC941C3C5C5'X);
      228.2      DECLARE CEE2UA CHARACTER(8) STATIC INIT('00000BCA41C3C5C5'X);
      229.2      DECLARE CEE2UB CHARACTER(8) STATIC INIT('00000BCB41C3C5C5'X);
      230.2      DECLARE CEE2UC CHARACTER(8) STATIC INIT('00000BCC41C3C5C5'X);
      231.2      DECLARE CEE2UD CHARACTER(8) STATIC INIT('00000BCD41C3C5C5'X);
      232.2      DECLARE CEE2UE CHARACTER(8) STATIC INIT('00000BCE41C3C5C5'X);
      233.2      DECLARE CEE2UF CHARACTER(8) STATIC INIT('00000BCF41C3C5C5'X);
      234.2      DECLARE CEE2UG CHARACTER(8) STATIC INIT('00000BD041C3C5C5'X);
      235.2      DECLARE CEE2UH CHARACTER(8) STATIC INIT('00000BD141C3C5C5'X);
      236.2      DECLARE CEE2UI CHARACTER(8) STATIC INIT('00000BD241C3C5C5'X);
      237.2      DECLARE CEE2UJ CHARACTER(8) STATIC INIT('00000BD341C3C5C5'X);
      238.2      DECLARE CEE2UK CHARACTER(8) STATIC INIT('00000BD441C3C5C5'X);
      239.2      DECLARE CEE2UL CHARACTER(8) STATIC INIT('00000BD541C3C5C5'X);
      240.2      DECLARE CEE2UM CHARACTER(8) STATIC INIT('00000BD641C3C5C5'X);
      241.2      DECLARE CEE2UN CHARACTER(8) STATIC INIT('00000BD741C3C5C5'X);
      242.2      DECLARE CEE2UO CHARACTER(8) STATIC INIT('00000BD841C3C5C5'X);
      243.2      DECLARE CEE2UP CHARACTER(8) STATIC INIT('00000BD941C3C5C5'X);
      244.2      DECLARE CEE2UQ CHARACTER(8) STATIC INIT('00000BDA41C3C5C5'X);
      245.2      DECLARE CEE2UR CHARACTER(8) STATIC INIT('00000BDB41C3C5C5'X);
      246.2      DECLARE CEE2US CHARACTER(8) STATIC INIT('00000BDC41C3C5C5'X);
      247.2      DECLARE CEE2UT CHARACTER(8) STATIC INIT('00000BDD41C3C5C5'X);
      248.2      DECLARE CEE2UU CHARACTER(8) STATIC INIT('00000BDE41C3C5C5'X);
      249.2      DECLARE CEE2UV CHARACTER(8) STATIC INIT('00000BDF41C3C5C5'X);
      250.2      DECLARE CEE2V0 CHARACTER(8) STATIC INIT('00000BE041C3C5C5'X);
      251.2      DECLARE CEE2V1 CHARACTER(8) STATIC INIT('00000BE141C3C5C5'X);
      252.2      DECLARE CEE2V2 CHARACTER(8) STATIC INIT('00000BE241C3C5C5'X);
      253.2      DECLARE CEE2V3 CHARACTER(8) STATIC INIT('00000BE341C3C5C5'X);
      254.2      DECLARE CEE2V4 CHARACTER(8) STATIC INIT('00000BE441C3C5C5'X);
      255.2      DECLARE CEE2V5 CHARACTER(8) STATIC INIT('00000BE541C3C5C5'X);
      256.2      DECLARE CEE2V6 CHARACTER(8) STATIC INIT('00000BE641C3C5C5'X);
      257.2      DECLARE CEE2V7 CHARACTER(8) STATIC INIT('00000BE741C3C5C5'X);
      258.2      DECLARE CEE2V8 CHARACTER(8) STATIC INIT('00000BE841C3C5C5'X);
      259.2      DECLARE CEE2V9 CHARACTER(8) STATIC INIT('00000BE941C3C5C5'X);
      260.2      DECLARE CEE2VA CHARACTER(8) STATIC INIT('00000BEA41C3C5C5'X);
      261.2      DECLARE CEE2VB CHARACTER(8) STATIC INIT('00000BEB41C3C5C5'X);
      262.2      DECLARE CEE2VC CHARACTER(8) STATIC INIT('00000BEC41C3C5C5'X);
      263.2      DECLARE CEE2VD CHARACTER(8) STATIC INIT('00000BED41C3C5C5'X);
      264.2      DECLARE CEE2VE CHARACTER(8) STATIC INIT('00000BEE41C3C5C5'X);
      265.2      DECLARE CEE2VF CHARACTER(8) STATIC INIT('00000BEF41C3C5C5'X);
      266.2      DECLARE CEE2VG CHARACTER(8) STATIC INIT('00000BF041C3C5C5'X);
      267.2      DECLARE CEE2VH CHARACTER(8) STATIC INIT('00000BF141C3C5C5'X);
      268.2      DECLARE CEE2VI CHARACTER(8) STATIC INIT('00000BF241C3C5C5'X);
      269.2      DECLARE CEE2VJ CHARACTER(8) STATIC INIT('00000BF341C3C5C5'X);
      270.2      DECLARE CEE2VK CHARACTER(8) STATIC INIT('00000BF441C3C5C5'X);
      271.2      DECLARE CEE2VL CHARACTER(8) STATIC INIT('00000BF541C3C5C5'X);
      272.2      DECLARE CEE2VM CHARACTER(8) STATIC INIT('00000BF641C3C5C5'X);
      273.2      DECLARE CEE2VN CHARACTER(8) STATIC INIT('00000BF741C3C5C5'X);
      274.2      DECLARE CEE2VO CHARACTER(8) STATIC INIT('00000BF841C3C5C5'X);
      275.2      DECLARE CEE2VP CHARACTER(8) STATIC INIT('00000BF941C3C5C5'X);
      276.2      DECLARE CEE2VQ CHARACTER(8) STATIC INIT('00000BFA41C3C5C5'X);
      277.2      DECLARE CEE2VR CHARACTER(8) STATIC INIT('00000BFB41C3C5C5'X);
      278.2      DECLARE CEE2VS CHARACTER(8) STATIC INIT('00000BFC41C3C5C5'X);
      279.2      DECLARE CEE2VT CHARACTER(8) STATIC INIT('00000BFD41C3C5C5'X);
      280.2      DECLARE CEE30Q CHARACTER(8) STATIC INIT('00030C1A59C3C5C5'X);
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     281.2      DECLARE CEE30S CHARACTER(8) STATIC INIT('00020C1C51C3C5C5'X);
      282.2      DECLARE CEE30T CHARACTER(8) STATIC INIT('00020C1D51C3C5C5'X);
      283.2      DECLARE CEE30U CHARACTER(8) STATIC INIT('00020C1E51C3C5C5'X);
      284.2      DECLARE CEE30V CHARACTER(8) STATIC INIT('00030C1F59C3C5C5'X);
      285.2      DECLARE CEE310 CHARACTER(8) STATIC INIT('00030C2059C3C5C5'X);
      286.2      DECLARE CEE311 CHARACTER(8) STATIC INIT('00030C2159C3C5C5'X);
      287.2      DECLARE CEE312 CHARACTER(8) STATIC INIT('00030C2259C3C5C5'X);
      288.2      DECLARE CEE313 CHARACTER(8) STATIC INIT('00020C2351C3C5C5'X);
      289.2      DECLARE CEE314 CHARACTER(8) STATIC INIT('00020C2451C3C5C5'X);
      290.2      DECLARE CEE315 CHARACTER(8) STATIC INIT('00000C2541C3C5C5'X);
      291.2      DECLARE CEE316 CHARACTER(8) STATIC INIT('00020C2651C3C5C5'X);
      292.2      DECLARE CEE317 CHARACTER(8) STATIC INIT('00000C2741C3C5C5'X);
      293.2      DECLARE CEE31C CHARACTER(8) STATIC INIT('00000C2C41C3C5C5'X);
      294.2      DECLARE CEE31D CHARACTER(8) STATIC INIT('00000C2D41C3C5C5'X);
      295.2      DECLARE CEE31E CHARACTER(8) STATIC INIT('00000C2E41C3C5C5'X);
      296.2      DECLARE CEE31G CHARACTER(8) STATIC INIT('00000C3041C3C5C5'X);
      297.2      DECLARE CEE31H CHARACTER(8) STATIC INIT('00000C3141C3C5C5'X);
      298.2      DECLARE CEE31I CHARACTER(8) STATIC INIT('00000C3241C3C5C5'X);
      299.2      DECLARE CEE31J CHARACTER(8) STATIC INIT('00000C3341C3C5C5'X);
      300.2      DECLARE CEE31K CHARACTER(8) STATIC INIT('00000C3441C3C5C5'X);
      301.2      DECLARE CEE31L CHARACTER(8) STATIC INIT('00000C3541C3C5C5'X);
      302.2      DECLARE CEE31M CHARACTER(8) STATIC INIT('00000C3641C3C5C5'X);
      303.2      DECLARE CEE31N CHARACTER(8) STATIC INIT('00000C3741C3C5C5'X);
      304.2      DECLARE CEE31O CHARACTER(8) STATIC INIT('00000C3841C3C5C5'X);
      305.2      DECLARE CEE31P CHARACTER(8) STATIC INIT('00000C3941C3C5C5'X);
      306.2      DECLARE CEE31Q CHARACTER(8) STATIC INIT('00000C3A41C3C5C5'X);
      307.2      DECLARE CEE31R CHARACTER(8) STATIC INIT('00000C3B41C3C5C5'X);
      308.2      DECLARE CEE31S CHARACTER(8) STATIC INIT('00000C3C41C3C5C5'X);
      309.2      DECLARE CEE31T CHARACTER(8) STATIC INIT('00000C3D41C3C5C5'X);
      310.2      DECLARE CEE31U CHARACTER(8) STATIC INIT('00000C3E41C3C5C5'X);
      311.2      DECLARE CEE320 CHARACTER(8) STATIC INIT('00000C4041C3C5C5'X);
      312.2      DECLARE CEE321 CHARACTER(8) STATIC INIT('00000C4141C3C5C5'X);
      313.2      DECLARE CEE322 CHARACTER(8) STATIC INIT('00000C4241C3C5C5'X);
      314.2      DECLARE CEE323 CHARACTER(8) STATIC INIT('00000C4341C3C5C5'X);
      315.2      DECLARE CEE324 CHARACTER(8) STATIC INIT('00000C4441C3C5C5'X);
      316.2      DECLARE CEE325 CHARACTER(8) STATIC INIT('00000C4541C3C5C5'X);
      317.2      DECLARE CEE326 CHARACTER(8) STATIC INIT('00000C4641C3C5C5'X);
      318.2      DECLARE CEE327 CHARACTER(8) STATIC INIT('00000C4741C3C5C5'X);
      319.2      DECLARE CEE328 CHARACTER(8) STATIC INIT('00000C4841C3C5C5'X);
      320.2      DECLARE CEE329 CHARACTER(8) STATIC INIT('00000C4941C3C5C5'X);
      321.2      DECLARE CEE32A CHARACTER(8) STATIC INIT('00000C4A41C3C5C5'X);
      322.2      DECLARE CEE32B CHARACTER(8) STATIC INIT('00000C4B41C3C5C5'X);
      323.2      DECLARE CEE32C CHARACTER(8) STATIC INIT('00000C4C41C3C5C5'X);
      324.2      DECLARE CEE32D CHARACTER(8) STATIC INIT('00000C4D41C3C5C5'X);
      325.2      DECLARE CEE32E CHARACTER(8) STATIC INIT('00000C4E41C3C5C5'X);
      326.2      DECLARE CEE32F CHARACTER(8) STATIC INIT('00000C4F41C3C5C5'X);
      327.2      DECLARE CEE32G CHARACTER(8) STATIC INIT('00000C5041C3C5C5'X);
      328.2      DECLARE CEE32H CHARACTER(8) STATIC INIT('00000C5141C3C5C5'X);
      329.2      DECLARE CEE32I CHARACTER(8) STATIC INIT('00000C5241C3C5C5'X);
      330.2      DECLARE CEE32J CHARACTER(8) STATIC INIT('00000C5341C3C5C5'X);
      331.2      DECLARE CEE32K CHARACTER(8) STATIC INIT('00000C5441C3C5C5'X);
      332.2      DECLARE CEE32L CHARACTER(8) STATIC INIT('00000C5541C3C5C5'X);
      333.2      DECLARE CEE32M CHARACTER(8) STATIC INIT('00000C5641C3C5C5'X);
      334.2      DECLARE CEE32N CHARACTER(8) STATIC INIT('00000C5741C3C5C5'X);
      335.2      DECLARE CEE32O CHARACTER(8) STATIC INIT('00000C5841C3C5C5'X);
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     336.2      DECLARE CEE32P CHARACTER(8) STATIC INIT('00000C5941C3C5C5'X);
      337.2      DECLARE CEE32Q CHARACTER(8) STATIC INIT('00000C5A41C3C5C5'X);
      338.2      DECLARE CEE32R CHARACTER(8) STATIC INIT('00000C5B41C3C5C5'X);
      339.2      DECLARE CEE32S CHARACTER(8) STATIC INIT('00000C5C41C3C5C5'X);
      340.2      DECLARE CEE32T CHARACTER(8) STATIC INIT('00000C5D41C3C5C5'X);
      341.2      DECLARE CEE32U CHARACTER(8) STATIC INIT('00000C5E41C3C5C5'X);
      342.2      DECLARE CEE32V CHARACTER(8) STATIC INIT('00000C5F41C3C5C5'X);
      343.2      DECLARE CEE330 CHARACTER(8) STATIC INIT('00000C6041C3C5C5'X);
      344.2      DECLARE CEE331 CHARACTER(8) STATIC INIT('00000C6141C3C5C5'X);
      345.2      DECLARE CEE332 CHARACTER(8) STATIC INIT('00000C6241C3C5C5'X);
      346.2      DECLARE CEE333 CHARACTER(8) STATIC INIT('00000C6341C3C5C5'X);
      347.2      DECLARE CEE334 CHARACTER(8) STATIC INIT('00000C6441C3C5C5'X);
      348.2      DECLARE CEE335 CHARACTER(8) STATIC INIT('00000C6541C3C5C5'X);
      349.2      DECLARE CEE336 CHARACTER(8) STATIC INIT('00000C6641C3C5C5'X);
      350.2      DECLARE CEE337 CHARACTER(8) STATIC INIT('00000C6741C3C5C5'X);
      351.2      DECLARE CEE338 CHARACTER(8) STATIC INIT('00000C6841C3C5C5'X);
      352.2      DECLARE CEE339 CHARACTER(8) STATIC INIT('00000C6941C3C5C5'X);
      353.2      DECLARE CEE33A CHARACTER(8) STATIC INIT('00000C6A41C3C5C5'X);
      354.2      DECLARE CEE33B CHARACTER(8) STATIC INIT('00000C6B41C3C5C5'X);
      355.2      DECLARE CEE33C CHARACTER(8) STATIC INIT('00000C6C41C3C5C5'X);
      356.2      DECLARE CEE33D CHARACTER(8) STATIC INIT('00000C6D41C3C5C5'X);
      357.2      DECLARE CEE33E CHARACTER(8) STATIC INIT('00000C6E41C3C5C5'X);
      358.2      DECLARE CEE33F CHARACTER(8) STATIC INIT('00000C6F41C3C5C5'X);
      359.2      DECLARE CEE33G CHARACTER(8) STATIC INIT('00000C7041C3C5C5'X);
      360.2      DECLARE CEE33H CHARACTER(8) STATIC INIT('00000C7141C3C5C5'X);
      361.2      DECLARE CEE33I CHARACTER(8) STATIC INIT('00020C7251C3C5C5'X);
      362.2      DECLARE CEE33J CHARACTER(8) STATIC INIT('00000C7341C3C5C5'X);
      363.2      DECLARE CEE33K CHARACTER(8) STATIC INIT('00000C7441C3C5C5'X);
      364.2      DECLARE CEE33L CHARACTER(8) STATIC INIT('00000C7541C3C5C5'X);
      365.2      DECLARE CEE33M CHARACTER(8) STATIC INIT('00000C7641C3C5C5'X);
      366.2      DECLARE CEE33N CHARACTER(8) STATIC INIT('00020C7751C3C5C5'X);
      367.2      DECLARE CEE33O CHARACTER(8) STATIC INIT('00040C7861C3C5C5'X);
      368.2      DECLARE CEE33P CHARACTER(8) STATIC INIT('00000C7941C3C5C5'X);
      369.2      DECLARE CEE33Q CHARACTER(8) STATIC INIT('00020C7A51C3C5C5'X);
      370.2      DECLARE CEE33R CHARACTER(8) STATIC INIT('00010C7B49C3C5C5'X);
      371.2      DECLARE CEE33S CHARACTER(8) STATIC INIT('00010C7C49C3C5C5'X);
      372.2      DECLARE CEE33T CHARACTER(8) STATIC INIT('00010C7D49C3C5C5'X);
      373.2      DECLARE CEE33U CHARACTER(8) STATIC INIT('00030C7E59C3C5C5'X);
      374.2      DECLARE CEE33V CHARACTER(8) STATIC INIT('00030C7F59C3C5C5'X);
      375.2      DECLARE CEE340 CHARACTER(8) STATIC INIT('00030C8059C3C5C5'X);
      376.2      DECLARE CEE341 CHARACTER(8) STATIC INIT('00030C8159C3C5C5'X);
      377.2      DECLARE CEE342 CHARACTER(8) STATIC INIT('00030C8259C3C5C5'X);
      378.2      DECLARE CEE343 CHARACTER(8) STATIC INIT('00030C8359C3C5C5'X);
      379.2      DECLARE CEE344 CHARACTER(8) STATIC INIT('00030C8459C3C5C5'X);
      380.2      DECLARE CEE345 CHARACTER(8) STATIC INIT('00030C8559C3C5C5'X);
      381.2      DECLARE CEE346 CHARACTER(8) STATIC INIT('00030C8659C3C5C5'X);
      382.2      DECLARE CEE347 CHARACTER(8) STATIC INIT('00030C8759C3C5C5'X);
      383.2      DECLARE CEE348 CHARACTER(8) STATIC INIT('00030C8859C3C5C5'X);
      384.2      DECLARE CEE349 CHARACTER(8) STATIC INIT('00030C8959C3C5C5'X);
      385.2      DECLARE CEE34A CHARACTER(8) STATIC INIT('00030C8A59C3C5C5'X);
      386.2      DECLARE CEE34B CHARACTER(8) STATIC INIT('00030C8B59C3C5C5'X);
      387.2      DECLARE CEE34C CHARACTER(8) STATIC INIT('00030C8C59C3C5C5'X);
      388.2      DECLARE CEE34D CHARACTER(8) STATIC INIT('00030C8D59C3C5C5'X);
      389.2      DECLARE CEE34E CHARACTER(8) STATIC INIT('00030C8E59C3C5C5'X);
      390.2      DECLARE CEE34F CHARACTER(8) STATIC INIT('00030C8F59C3C5C5'X);
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     391.2      DECLARE CEE34G CHARACTER(8) STATIC INIT('00030C9059C3C5C5'X);
      392.2      DECLARE CEE34H CHARACTER(8) STATIC INIT('00030C9159C3C5C5'X);
      393.2      DECLARE CEE34I CHARACTER(8) STATIC INIT('00030C9259C3C5C5'X);
      394.2      DECLARE CEE34J CHARACTER(8) STATIC INIT('00030C9359C3C5C5'X);
      395.2      DECLARE CEE34K CHARACTER(8) STATIC INIT('00030C9459C3C5C5'X);
      396.2      DECLARE CEE34L CHARACTER(8) STATIC INIT('00030C9559C3C5C5'X);
      397.2      DECLARE CEE34M CHARACTER(8) STATIC INIT('00030C9659C3C5C5'X);
      398.2      DECLARE CEE34N CHARACTER(8) STATIC INIT('00030C9759C3C5C5'X);
      399.2      DECLARE CEE34O CHARACTER(8) STATIC INIT('00030C9859C3C5C5'X);
      400.2      DECLARE CEE34P CHARACTER(8) STATIC INIT('00030C9959C3C5C5'X);
      401.2      DECLARE CEE34Q CHARACTER(8) STATIC INIT('00030C9A59C3C5C5'X);
      402.2      DECLARE CEE34R CHARACTER(8) STATIC INIT('00030C9B59C3C5C5'X);
      403.2      DECLARE CEE34S CHARACTER(8) STATIC INIT('00030C9C59C3C5C5'X);
      404.2      DECLARE CEE34T CHARACTER(8) STATIC INIT('00030C9D59C3C5C5'X);
      405.2      DECLARE CEE34U CHARACTER(8) STATIC INIT('00020C9E51C3C5C5'X);
      406.2      DECLARE CEE34V CHARACTER(8) STATIC INIT('00030C9F59C3C5C5'X);
      407.2      DECLARE CEE350 CHARACTER(8) STATIC INIT('00030CA059C3C5C5'X);
      408.2      DECLARE CEE351 CHARACTER(8) STATIC INIT('00030CA159C3C5C5'X);
      409.2      DECLARE CEE352 CHARACTER(8) STATIC INIT('00030CA259C3C5C5'X);
      410.2      DECLARE CEE353 CHARACTER(8) STATIC INIT('00030CA359C3C5C5'X);
      411.2      DECLARE CEE354 CHARACTER(8) STATIC INIT('00030CA459C3C5C5'X);
      412.2      DECLARE CEE355 CHARACTER(8) STATIC INIT('00030CA559C3C5C5'X);
      413.2      DECLARE CEE356 CHARACTER(8) STATIC INIT('00030CA659C3C5C5'X);
      414.2      DECLARE CEE357 CHARACTER(8) STATIC INIT('00030CA759C3C5C5'X);
      415.2      DECLARE CEE358 CHARACTER(8) STATIC INIT('00030CA859C3C5C5'X);
      416.2      DECLARE CEE35H CHARACTER(8) STATIC INIT('00000CB141C3C5C5'X);
      417.2      DECLARE CEE35I CHARACTER(8) STATIC INIT('00040CB261C3C5C5'X);
      418.2      DECLARE CEE35J CHARACTER(8) STATIC INIT('00000CB341C3C5C5'X);
      419.2      DECLARE CEE35K CHARACTER(8) STATIC INIT('00020CB451C3C5C5'X);
      420.2      DECLARE CEE35L CHARACTER(8) STATIC INIT('00040CB561C3C5C5'X);
      421.2      DECLARE CEE35M CHARACTER(8) STATIC INIT('00040CB661C3C5C5'X);
      422.2      DECLARE CEE35N CHARACTER(8) STATIC INIT('00040CB761C3C5C5'X);
      423.2      DECLARE CEE35P CHARACTER(8) STATIC INIT('00020CB951C3C5C5'X);
      424.2      DECLARE CEE35Q CHARACTER(8) STATIC INIT('00020CBA51C3C5C5'X);
      425.2      DECLARE CEE35R CHARACTER(8) STATIC INIT('00020CBB51C3C5C5'X);
      426.2      DECLARE CEE35S CHARACTER(8) STATIC INIT('00010CBC49C3C5C5'X);
      427.2      DECLARE CEE35T CHARACTER(8) STATIC INIT('00010CBD49C3C5C5'X);
      428.2      DECLARE CEE35U CHARACTER(8) STATIC INIT('00010CBE49C3C5C5'X);
      429.2      DECLARE CEE35V CHARACTER(8) STATIC INIT('00040CBF61C3C5C5'X);
      430.2      DECLARE CEE360 CHARACTER(8) STATIC INIT('00030CC059C3C5C5'X);
      431.2      DECLARE CEE36S CHARACTER(8) STATIC INIT('00010CDC49C3C5C5'X);
      432.2      DECLARE CEE36T CHARACTER(8) STATIC INIT('00040CDD61C3C5C5'X);
      433.2      DECLARE CEE36U CHARACTER(8) STATIC INIT('00020CDE51C3C5C5'X);
      434.2      DECLARE CEE36V CHARACTER(8) STATIC INIT('00020CDF51C3C5C5'X);
      435.2      DECLARE CEE370 CHARACTER(8) STATIC INIT('00020CE051C3C5C5'X);
      436.2      DECLARE CEE371 CHARACTER(8) STATIC INIT('00020CE151C3C5C5'X);
      437.2      DECLARE CEE372 CHARACTER(8) STATIC INIT('00020CE251C3C5C5'X);
      438.2      DECLARE CEE373 CHARACTER(8) STATIC INIT('00020CE351C3C5C5'X);
      439.2      DECLARE CEE374 CHARACTER(8) STATIC INIT('00020CE451C3C5C5'X);
      440.2      DECLARE CEE375 CHARACTER(8) STATIC INIT('00020CE551C3C5C5'X);
      441.2      DECLARE CEE376 CHARACTER(8) STATIC INIT('00000CE641C3C5C5'X);
      442.2      DECLARE CEE377 CHARACTER(8) STATIC INIT('00020CE751C3C5C5'X);
      443.2      DECLARE CEE378 CHARACTER(8) STATIC INIT('00020CE851C3C5C5'X);
      444.2      DECLARE CEE379 CHARACTER(8) STATIC INIT('00020CE951C3C5C5'X);
      445.2      DECLARE CEE38M CHARACTER(8) STATIC INIT('00030D1659C3C5C5'X);
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     446.2      DECLARE CEE38N CHARACTER(8) STATIC INIT('00030D1759C3C5C5'X);
      447.2      DECLARE CEE38O CHARACTER(8) STATIC INIT('00020D1851C3C5C5'X);
      448.2      DECLARE CEE38P CHARACTER(8) STATIC INIT('00030D1959C3C5C5'X);
      449.2      DECLARE CEE38Q CHARACTER(8) STATIC INIT('00030D1A59C3C5C5'X);
      450.2      DECLARE CEE38R CHARACTER(8) STATIC INIT('00030D1B59C3C5C5'X);
      451.2      DECLARE CEE38S CHARACTER(8) STATIC INIT('00030D1C59C3C5C5'X);
      452.2      DECLARE CEE38T CHARACTER(8) STATIC INIT('00030D1D59C3C5C5'X);
      453.2      DECLARE CEE38U CHARACTER(8) STATIC INIT('00020D1E51C3C5C5'X);
      454.2      DECLARE CEE38V CHARACTER(8) STATIC INIT('00020D1F51C3C5C5'X);
      455.2      DECLARE CEE390 CHARACTER(8) STATIC INIT('00030D2059C3C5C5'X);
      456.2      DECLARE CEE391 CHARACTER(8) STATIC INIT('00010D2149C3C5C5'X);
      457.2      DECLARE CEE392 CHARACTER(8) STATIC INIT('00030D2259C3C5C5'X);
      458.2      DECLARE CEE393 CHARACTER(8) STATIC INIT('00030D2359C3C5C5'X);
      459.2      DECLARE CEE394 CHARACTER(8) STATIC INIT('00010D2449C3C5C5'X);
      460.2      DECLARE CEE395 CHARACTER(8) STATIC INIT('00030D2559C3C5C5'X);
      461.2      DECLARE CEE396 CHARACTER(8) STATIC INIT('00010D2649C3C5C5'X);
      462.2      DECLARE CEE397 CHARACTER(8) STATIC INIT('00020D2751C3C5C5'X);
      463.2      DECLARE CEE39A CHARACTER(8) STATIC INIT('00010D2A49C3C5C5'X);
      464.2      DECLARE CEE39K CHARACTER(8) STATIC INIT('00010D3449C3C5C5'X);
      465.2      DECLARE CEE3A8 CHARACTER(8) STATIC INIT('00010D4849C3C5C5'X);
      466.2      DECLARE CEE3A9 CHARACTER(8) STATIC INIT('00010D4949C3C5C5'X);
      467.2      DECLARE CEE3AA CHARACTER(8) STATIC INIT('00020D4A51C3C5C5'X);
      468.2      DECLARE CEE3AB CHARACTER(8) STATIC INIT('00020D4B51C3C5C5'X);
      469.2      DECLARE CEE3AC CHARACTER(8) STATIC INIT('00000D4C41C3C5C5'X);
      470.2      DECLARE CEE3AD CHARACTER(8) STATIC INIT('00000D4D41C3C5C5'X);
      471.2      DECLARE CEE3AE CHARACTER(8) STATIC INIT('00030D4E59C3C5C5'X);
      472.2      DECLARE CEE3AF CHARACTER(8) STATIC INIT('00030D4F59C3C5C5'X);
      473.2      DECLARE CEE3AG CHARACTER(8) STATIC INIT('00020D5051C3C5C5'X);
      474.2      DECLARE CEE3B0 CHARACTER(8) STATIC INIT('00030D6059C3C5C5'X);
      475.2      DECLARE CEE3B1 CHARACTER(8) STATIC INIT('00030D6159C3C5C5'X);
      476.2      DECLARE CEE3B2 CHARACTER(8) STATIC INIT('00030D6259C3C5C5'X);
      477.2      DECLARE CEE3B3 CHARACTER(8) STATIC INIT('00030D6359C3C5C5'X);
      478.2      DECLARE CEE3B4 CHARACTER(8) STATIC INIT('00030D6459C3C5C5'X);
      479.2      DECLARE CEE3B5 CHARACTER(8) STATIC INIT('00030D6559C3C5C5'X);
      480.2      DECLARE CEE3BP CHARACTER(8) STATIC INIT('00030D7959C3C5C5'X);
      481.2      DECLARE CEE3BQ CHARACTER(8) STATIC INIT('00020D7A51C3C5C5'X);
      482.2      DECLARE CEE3BR CHARACTER(8) STATIC INIT('00030D7B59C3C5C5'X);
      483.2      DECLARE CEE3BS CHARACTER(8) STATIC INIT('00030D7C59C3C5C5'X);
      484.2      DECLARE CEE3BU CHARACTER(8) STATIC INIT('00030D7E59C3C5C5'X);
      485.2      DECLARE CEE3BV CHARACTER(8) STATIC INIT('00020D7F51C3C5C5'X);
      486.2      DECLARE CEE3C0 CHARACTER(8) STATIC INIT('00030D8059C3C5C5'X);
      487.2      DECLARE CEE3C1 CHARACTER(8) STATIC INIT('00030D8159C3C5C5'X);
      488.2      DECLARE CEE3C2 CHARACTER(8) STATIC INIT('00020D8251C3C5C5'X);
      489.2      DECLARE CEE3C3 CHARACTER(8) STATIC INIT('00030D8359C3C5C5'X);
      490.2      DECLARE CEE3C4 CHARACTER(8) STATIC INIT('00020D8451C3C5C5'X);
      491.2      DECLARE CEE3C5 CHARACTER(8) STATIC INIT('00020D8551C3C5C5'X);
      492.2      DECLARE CEE3C6 CHARACTER(8) STATIC INIT('00020D8651C3C5C5'X);
      493.2      DECLARE CEE3C7 CHARACTER(8) STATIC INIT('00020D8751C3C5C5'X);
      494.2      DECLARE CEE3C8 CHARACTER(8) STATIC INIT('00020D8851C3C5C5'X);
      495.2      DECLARE CEE3C9 CHARACTER(8) STATIC INIT('00020D8951C3C5C5'X);
      496.2      DECLARE CEE3CA CHARACTER(8) STATIC INIT('00020D8A51C3C5C5'X);
      497.2      DECLARE CEE3CB CHARACTER(8) STATIC INIT('00020D8B51C3C5C5'X);
      498.2      DECLARE CEE3CC CHARACTER(8) STATIC INIT('00020D8C51C3C5C5'X);
      499.2      DECLARE CEE3CD CHARACTER(8) STATIC INIT('00020D8D51C3C5C5'X);
      500.2      DECLARE CEE3CE CHARACTER(8) STATIC INIT('00020D8E51C3C5C5'X);
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     501.2      DECLARE CEE3CF CHARACTER(8) STATIC INIT('00020D8F51C3C5C5'X);
      502.2      DECLARE CEE3CG CHARACTER(8) STATIC INIT('00030D9059C3C5C5'X);
      503.2      DECLARE CEE3CH CHARACTER(8) STATIC INIT('00030D9159C3C5C5'X);
      504.2      DECLARE CEE3CJ CHARACTER(8) STATIC INIT('00030D9359C3C5C5'X);
      505.2      DECLARE CEE3CK CHARACTER(8) STATIC INIT('00030D9459C3C5C5'X);
      506.2      DECLARE CEE3CO CHARACTER(8) STATIC INIT('00030D9859C3C5C5'X);
      507.2      DECLARE CEE3CP CHARACTER(8) STATIC INIT('00030D9959C3C5C5'X);
      508.2      DECLARE CEE3CQ CHARACTER(8) STATIC INIT('00030D9A59C3C5C5'X);
      509.2      DECLARE CEE3CS CHARACTER(8) STATIC INIT('00020D9C51C3C5C5'X);
      510.2      DECLARE CEE3CT CHARACTER(8) STATIC INIT('00030D9D59C3C5C5'X);
      511.2      DECLARE CEE3CU CHARACTER(8) STATIC INIT('00030D9E59C3C5C5'X);
      512.2      DECLARE CEE3CV CHARACTER(8) STATIC INIT('00030D9F59C3C5C5'X);
      513.2      DECLARE CEE3D0 CHARACTER(8) STATIC INIT('00030DA059C3C5C5'X);
      514.2      DECLARE CEE3D1 CHARACTER(8) STATIC INIT('00030DA159C3C5C5'X);
      515.2      DECLARE CEE3D2 CHARACTER(8) STATIC INIT('00030DA259C3C5C5'X);
      516.2      DECLARE CEE3D3 CHARACTER(8) STATIC INIT('00030DA359C3C5C5'X);
      517.2      DECLARE CEE3D4 CHARACTER(8) STATIC INIT('00030DA459C3C5C5'X);
      518.2      DECLARE CEE3D5 CHARACTER(8) STATIC INIT('00010DA549C3C5C5'X);
      519.2      DECLARE CEE3D6 CHARACTER(8) STATIC INIT('00030DA659C3C5C5'X);
      520.2      DECLARE CEE3D7 CHARACTER(8) STATIC INIT('00030DA759C3C5C5'X);
      521.2      DECLARE CEE3D8 CHARACTER(8) STATIC INIT('00000DA841C3C5C5'X);
      522.2      DECLARE CEE3D9 CHARACTER(8) STATIC INIT('00020DA951C3C5C5'X);
      523.2      DECLARE CEE3DA CHARACTER(8) STATIC INIT('00000DAA41C3C5C5'X);
      524.2      DECLARE CEE3DB CHARACTER(8) STATIC INIT('00020DAB51C3C5C5'X);
      525.2      DECLARE CEE3DC CHARACTER(8) STATIC INIT('00030DAC59C3C5C5'X);
      526.2      DECLARE CEE3DD CHARACTER(8) STATIC INIT('00030DAD59C3C5C5'X);
      527.2      DECLARE CEE3DE CHARACTER(8) STATIC INIT('00030DAE59C3C5C5'X);
      528.2      DECLARE CEE3DF CHARACTER(8) STATIC INIT('00030DAF59C3C5C5'X);
      529.2      DECLARE CEE3DG CHARACTER(8) STATIC INIT('00030DB059C3C5C5'X);
      530.2      DECLARE CEE3DH CHARACTER(8) STATIC INIT('00030DB159C3C5C5'X);
      531.2      DECLARE CEE3DI CHARACTER(8) STATIC INIT('00030DB259C3C5C5'X);
      532.2      DECLARE CEE3DJ CHARACTER(8) STATIC INIT('00030DB359C3C5C5'X);
      533.2      DECLARE CEE3DK CHARACTER(8) STATIC INIT('00030DB459C3C5C5'X);
      534.2      DECLARE CEE3DL CHARACTER(8) STATIC INIT('00030DB559C3C5C5'X);
      535.2      DECLARE CEE3DM CHARACTER(8) STATIC INIT('00030DB659C3C5C5'X);
      536.2      DECLARE CEE3DN CHARACTER(8) STATIC INIT('00030DB759C3C5C5'X);
      537.2      DECLARE CEE3DO CHARACTER(8) STATIC INIT('00030DB859C3C5C5'X);
      538.2      DECLARE CEE3DP CHARACTER(8) STATIC INIT('00030DB959C3C5C5'X);
      539.2      DECLARE CEE3DQ CHARACTER(8) STATIC INIT('00040DBA61C3C5C5'X);
      540.2      DECLARE CEE3DR CHARACTER(8) STATIC INIT('00000DBB41C3C5C5'X);
      541.2      DECLARE CEE3DS CHARACTER(8) STATIC INIT('00000DBC41C3C5C5'X);
      542.2      DECLARE CEE3DT CHARACTER(8) STATIC INIT('00030DBD59C3C5C5'X);
      543.2      DECLARE CEE3DU CHARACTER(8) STATIC INIT('00030DBE59C3C5C5'X);
      544.2      DECLARE CEE3DV CHARACTER(8) STATIC INIT('00030DBF59C3C5C5'X);
      545.2      DECLARE CEE3E0 CHARACTER(8) STATIC INIT('00030DC059C3C5C5'X);
      546.2      DECLARE CEE3E1 CHARACTER(8) STATIC INIT('00000DC141C3C5C5'X);
      547.2      DECLARE CEE3E2 CHARACTER(8) STATIC INIT('00000DC241C3C5C5'X);
      548.2      DECLARE CEE3E3 CHARACTER(8) STATIC INIT('00000DC341C3C5C5'X);
      549.2      DECLARE CEE3E4 CHARACTER(8) STATIC INIT('00000DC441C3C5C5'X);
      550.2      DECLARE CEE3E5 CHARACTER(8) STATIC INIT('00000DC541C3C5C5'X);
      551.2      DECLARE CEE3E6 CHARACTER(8) STATIC INIT('00000DC641C3C5C5'X);
      552.2      DECLARE CEE3E7 CHARACTER(8) STATIC INIT('00000DC741C3C5C5'X);
      553.2      DECLARE CEE3E8 CHARACTER(8) STATIC INIT('00000DC841C3C5C5'X);
      554.2      DECLARE CEE3EA CHARACTER(8) STATIC INIT('00030DCA59C3C5C5'X);
      555.2      DECLARE CEE3EB CHARACTER(8) STATIC INIT('00030DCB59C3C5C5'X);
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     556.2      DECLARE CEE3EC CHARACTER(8) STATIC INIT('00030DCC59C3C5C5'X);
      557.2      DECLARE CEE3ED CHARACTER(8) STATIC INIT('00030DCD59C3C5C5'X);
      558.2      DECLARE CEE3EE CHARACTER(8) STATIC INIT('00030DCE59C3C5C5'X);
      559.2      DECLARE CEE3EF CHARACTER(8) STATIC INIT('00030DCF59C3C5C5'X);
      560.2      DECLARE CEE3EG CHARACTER(8) STATIC INIT('00030DD059C3C5C5'X);
      561.2      DECLARE CEE3EH CHARACTER(8) STATIC INIT('00030DD159C3C5C5'X);
      562.2      DECLARE CEE3EI CHARACTER(8) STATIC INIT('00030DD259C3C5C5'X);
      563.2      DECLARE CEE3EJ CHARACTER(8) STATIC INIT('00030DD359C3C5C5'X);
      564.2      DECLARE CEE3EK CHARACTER(8) STATIC INIT('00030DD459C3C5C5'X);
      565.2      DECLARE CEE3EL CHARACTER(8) STATIC INIT('00030DD559C3C5C5'X);
      566.2      DECLARE CEE3EM CHARACTER(8) STATIC INIT('00030DD659C3C5C5'X);
      567.2      DECLARE CEE3EN CHARACTER(8) STATIC INIT('00020DD751C3C5C5'X);
      568.2      DECLARE CEE3EO CHARACTER(8) STATIC INIT('00020DD851C3C5C5'X);
      569.2      DECLARE CEE3EP CHARACTER(8) STATIC INIT('00020DD951C3C5C5'X);
      570.2      DECLARE CEE3EQ CHARACTER(8) STATIC INIT('00020DDA51C3C5C5'X);
      571.2      DECLARE CEE3ER CHARACTER(8) STATIC INIT('00020DDB51C3C5C5'X);
      572.2      DECLARE CEE3ES CHARACTER(8) STATIC INIT('00020DDC51C3C5C5'X);
      573.2      DECLARE CEE3ET CHARACTER(8) STATIC INIT('00030DDD59C3C5C5'X);
      574.2      DECLARE CEE3EU CHARACTER(8) STATIC INIT('00030DDE59C3C5C5'X);
      575.2      DECLARE CEE3EV CHARACTER(8) STATIC INIT('00030DDF59C3C5C5'X);
      576.2      DECLARE CEE3F0 CHARACTER(8) STATIC INIT('00030DE059C3C5C5'X);
      577.2      DECLARE CEE3F1 CHARACTER(8) STATIC INIT('00030DE159C3C5C5'X);
      578.2      DECLARE CEE3F2 CHARACTER(8) STATIC INIT('00030DE259C3C5C5'X);
      579.2      DECLARE CEE3F3 CHARACTER(8) STATIC INIT('00030DE359C3C5C5'X);
      580.2      DECLARE CEE3F4 CHARACTER(8) STATIC INIT('00030DE459C3C5C5'X);
      581.2      DECLARE CEE3F5 CHARACTER(8) STATIC INIT('00030DE559C3C5C5'X);
      582.2      DECLARE CEE3F6 CHARACTER(8) STATIC INIT('00030DE659C3C5C5'X);
      583.2      DECLARE CEE3F7 CHARACTER(8) STATIC INIT('00030DE759C3C5C5'X);
      584.2      DECLARE CEE3F8 CHARACTER(8) STATIC INIT('00030DE859C3C5C5'X);
      585.2      DECLARE CEE3F9 CHARACTER(8) STATIC INIT('00030DE959C3C5C5'X);
      586.2      DECLARE CEE3FA CHARACTER(8) STATIC INIT('00030DEA59C3C5C5'X);
      587.2      DECLARE CEE3FB CHARACTER(8) STATIC INIT('00030DEB59C3C5C5'X);
      588.2      DECLARE CEE3FC CHARACTER(8) STATIC INIT('00030DEC59C3C5C5'X);
      589.2      DECLARE CEE3FD CHARACTER(8) STATIC INIT('00000DED41C3C5C5'X);
      590.2      DECLARE CEE3FE CHARACTER(8) STATIC INIT('00000DEE41C3C5C5'X);
      591.2      DECLARE CEE3FF CHARACTER(8) STATIC INIT('00000DEF41C3C5C5'X);
      592.2      DECLARE CEE3FG CHARACTER(8) STATIC INIT('00000DF041C3C5C5'X);
      593.2      DECLARE CEE3FH CHARACTER(8) STATIC INIT('00020DF151C3C5C5'X);
      594.2      DECLARE CEE3FI CHARACTER(8) STATIC INIT('00030DF259C3C5C5'X);
      595.2      DECLARE CEE3FJ CHARACTER(8) STATIC INIT('00030DF359C3C5C5'X);
      596.2      DECLARE CEE3FK CHARACTER(8) STATIC INIT('00000DF441C3C5C5'X);
      597.2      DECLARE CEE3FL CHARACTER(8) STATIC INIT('00000DF541C3C5C5'X);
      598.2      DECLARE CEE3FM CHARACTER(8) STATIC INIT('00000DF641C3C5C5'X);
      599.2      DECLARE CEE3FN CHARACTER(8) STATIC INIT('00000DF741C3C5C5'X);
      600.2      DECLARE CEE3FO CHARACTER(8) STATIC INIT('00000DF841C3C5C5'X);
      601.2      DECLARE CEE3FP CHARACTER(8) STATIC INIT('00000DF941C3C5C5'X);
      602.2      DECLARE CEE3FQ CHARACTER(8) STATIC INIT('00000DFA41C3C5C5'X);
      603.2      DECLARE CEE3FR CHARACTER(8) STATIC INIT('00030DFB59C3C5C5'X);
      604.2      DECLARE CEE3FS CHARACTER(8) STATIC INIT('00030DFC59C3C5C5'X);
      605.2      DECLARE CEE3FT CHARACTER(8) STATIC INIT('00030DFD59C3C5C5'X);
      606.2      DECLARE CEE3FU CHARACTER(8) STATIC INIT('00030DFE59C3C5C5'X);
      607.2      DECLARE CEE3FV CHARACTER(8) STATIC INIT('00020DFF51C3C5C5'X);
      608.2      DECLARE CEE3G0 CHARACTER(8) STATIC INIT('00020E0051C3C5C5'X);
      609.2      DECLARE CEE3G1 CHARACTER(8) STATIC INIT('00020E0151C3C5C5'X);
      610.2      DECLARE CEE3G2 CHARACTER(8) STATIC INIT('00030E0259C3C5C5'X);
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     611.2      DECLARE CEE3G3 CHARACTER(8) STATIC INIT('00030E0359C3C5C5'X);
      612.2      DECLARE CEE3G4 CHARACTER(8) STATIC INIT('00030E0459C3C5C5'X);
      613.2      DECLARE CEE3G5 CHARACTER(8) STATIC INIT('00030E0559C3C5C5'X);
      614.2      DECLARE CEE3G6 CHARACTER(8) STATIC INIT('00000E0641C3C5C5'X);
      615.2      DECLARE CEE3G7 CHARACTER(8) STATIC INIT('00000E0741C3C5C5'X);
      616.2      DECLARE CEE3G8 CHARACTER(8) STATIC INIT('00000E0841C3C5C5'X);
      617.2      DECLARE CEE3G9 CHARACTER(8) STATIC INIT('00000E0941C3C5C5'X);
      618.2      DECLARE CEE3GA CHARACTER(8) STATIC INIT('00000E0A41C3C5C5'X);
      619.2      DECLARE CEE3GB CHARACTER(8) STATIC INIT('00030E0B59C3C5C5'X);
      620.2      DECLARE CEE3GC CHARACTER(8) STATIC INIT('00030E0C59C3C5C5'X);
      621.2      DECLARE CEE3GD CHARACTER(8) STATIC INIT('00020E0D51C3C5C5'X);
      622.2      DECLARE CEE3GE CHARACTER(8) STATIC INIT('00020E0E51C3C5C5'X);
      623.2      DECLARE CEE3GF CHARACTER(8) STATIC INIT('00020E0F51C3C5C5'X);
      624.2      DECLARE CEE3GG CHARACTER(8) STATIC INIT('00030E1059C3C5C5'X);
      625.2      DECLARE CEE3GH CHARACTER(8) STATIC INIT('00000E1141C3C5C5'X);
      626.2      DECLARE CEE3GI CHARACTER(8) STATIC INIT('00000E1241C3C5C5'X);
      627.2      DECLARE CEE3GJ CHARACTER(8) STATIC INIT('00000E1341C3C5C5'X);
      628.2      DECLARE CEE3GK CHARACTER(8) STATIC INIT('00000E1441C3C5C5'X);
      629.2      DECLARE CEE3GL CHARACTER(8) STATIC INIT('00000E1541C3C5C5'X);
      630.2      DECLARE CEE3GM CHARACTER(8) STATIC INIT('00000E1641C3C5C5'X);
      631.2      DECLARE CEE3GN CHARACTER(8) STATIC INIT('00000E1741C3C5C5'X);
      632.2      DECLARE CEE3GO CHARACTER(8) STATIC INIT('00000E1841C3C5C5'X);
      633.2      DECLARE CEE3GP CHARACTER(8) STATIC INIT('00000E1941C3C5C5'X);
      634.2      DECLARE CEE3GQ CHARACTER(8) STATIC INIT('00000E1A41C3C5C5'X);
      635.2      DECLARE CEE3GR CHARACTER(8) STATIC INIT('00000E1B41C3C5C5'X);
      636.2      DECLARE CEE3GS CHARACTER(8) STATIC INIT('00000E1C41C3C5C5'X);
      637.2      DECLARE CEE3GT CHARACTER(8) STATIC INIT('00000E1D41C3C5C5'X);
      638.2      DECLARE CEE3GU CHARACTER(8) STATIC INIT('00000E1E41C3C5C5'X);
      639.2      DECLARE CEE3GV CHARACTER(8) STATIC INIT('00000E1F41C3C5C5'X);
      640.2      DECLARE CEE3H0 CHARACTER(8) STATIC INIT('00000E2041C3C5C5'X);
      641.2      DECLARE CEE3H1 CHARACTER(8) STATIC INIT('00000E2141C3C5C5'X);
      642.2      DECLARE CEE3H2 CHARACTER(8) STATIC INIT('00000E2241C3C5C5'X);
      643.2      DECLARE CEE3H3 CHARACTER(8) STATIC INIT('00000E2341C3C5C5'X);
      644.2      DECLARE CEE3H4 CHARACTER(8) STATIC INIT('00000E2441C3C5C5'X);
      645.2      DECLARE CEE3H5 CHARACTER(8) STATIC INIT('00000E2541C3C5C5'X);
      646.2      DECLARE CEE3H6 CHARACTER(8) STATIC INIT('00000E2641C3C5C5'X);
      647.2      DECLARE CEE3H7 CHARACTER(8) STATIC INIT('00000E2741C3C5C5'X);
      648.2      DECLARE CEE3H8 CHARACTER(8) STATIC INIT('00000E2841C3C5C5'X);
      649.2      DECLARE CEE3H9 CHARACTER(8) STATIC INIT('00000E2941C3C5C5'X);
      650.2      DECLARE CEE3HA CHARACTER(8) STATIC INIT('00000E2A41C3C5C5'X);
      651.2      DECLARE CEE3HB CHARACTER(8) STATIC INIT('00000E2B41C3C5C5'X);
      652.2      DECLARE CEE3HC CHARACTER(8) STATIC INIT('00000E2C41C3C5C5'X);
      653.2      DECLARE CEE3HD CHARACTER(8) STATIC INIT('00000E2D41C3C5C5'X);
      654.2      DECLARE CEE3HE CHARACTER(8) STATIC INIT('00000E2E41C3C5C5'X);
      655.2      DECLARE CEE3HF CHARACTER(8) STATIC INIT('00000E2F41C3C5C5'X);
      656.2      DECLARE CEE3HG CHARACTER(8) STATIC INIT('00000E3041C3C5C5'X);
      657.2      DECLARE CEE3HH CHARACTER(8) STATIC INIT('00010E3149C3C5C5'X);
      658.2      DECLARE CEE3HI CHARACTER(8) STATIC INIT('00000E3241C3C5C5'X);
      659.2      DECLARE CEE3HJ CHARACTER(8) STATIC INIT('00000E3341C3C5C5'X);
      660.2      DECLARE CEE3HK CHARACTER(8) STATIC INIT('00000E3441C3C5C5'X);
      661.2      DECLARE CEE3HL CHARACTER(8) STATIC INIT('00000E3541C3C5C5'X);
      662.2      DECLARE CEE3HM CHARACTER(8) STATIC INIT('00000E3641C3C5C5'X);
      663.2      DECLARE CEE3HN CHARACTER(8) STATIC INIT('00000E3741C3C5C5'X);
      664.2      DECLARE CEE3HO CHARACTER(8) STATIC INIT('00010E3849C3C5C5'X);
      665.2      DECLARE CEE3HP CHARACTER(8) STATIC INIT('00000E3941C3C5C5'X);
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     666.2      DECLARE CEE3HQ CHARACTER(8) STATIC INIT('00000E3A41C3C5C5'X);
      667.2      DECLARE CEE3HR CHARACTER(8) STATIC INIT('00000E3B41C3C5C5'X);
      668.2      DECLARE CEE3HS CHARACTER(8) STATIC INIT('00000E3C41C3C5C5'X);
      669.2      DECLARE CEE3HT CHARACTER(8) STATIC INIT('00000E3D41C3C5C5'X);
      670.2      DECLARE CEE3HU CHARACTER(8) STATIC INIT('00000E3E41C3C5C5'X);
      671.2      DECLARE CEE3HV CHARACTER(8) STATIC INIT('00000E3F41C3C5C5'X);
      672.2      DECLARE CEE3I0 CHARACTER(8) STATIC INIT('00030E4059C3C5C5'X);
      673.2      DECLARE CEE3I1 CHARACTER(8) STATIC INIT('00010E4149C3C5C5'X);
      674.2      DECLARE CEE3I2 CHARACTER(8) STATIC INIT('00000E4241C3C5C5'X);
      675.2      DECLARE CEE3I3 CHARACTER(8) STATIC INIT('00000E4341C3C5C5'X);
      676.2      DECLARE CEE3I4 CHARACTER(8) STATIC INIT('00000E4441C3C5C5'X);
      677.2      DECLARE CEE3I5 CHARACTER(8) STATIC INIT('00000E4541C3C5C5'X);
      678.2      DECLARE CEE3I6 CHARACTER(8) STATIC INIT('00000E4641C3C5C5'X);
      679.2      DECLARE CEE3I7 CHARACTER(8) STATIC INIT('00000E4741C3C5C5'X);
      680.2      DECLARE CEE3I8 CHARACTER(8) STATIC INIT('00000E4841C3C5C5'X);
      681.2      DECLARE CEE3I9 CHARACTER(8) STATIC INIT('00000E4941C3C5C5'X);
      682.2      DECLARE CEE3IA CHARACTER(8) STATIC INIT('00000E4A41C3C5C5'X);
      683.2      DECLARE CEE3IB CHARACTER(8) STATIC INIT('00000E4B41C3C5C5'X);
      684.2      DECLARE CEE3IC CHARACTER(8) STATIC INIT('00000E4C41C3C5C5'X);
      685.2      DECLARE CEE3ID CHARACTER(8) STATIC INIT('00000E4D41C3C5C5'X);
      686.2      DECLARE CEE3IE CHARACTER(8) STATIC INIT('00000E4E41C3C5C5'X);
      687.2      DECLARE CEE3IF CHARACTER(8) STATIC INIT('00000E4F41C3C5C5'X);
      688.2      DECLARE CEE3IG CHARACTER(8) STATIC INIT('00000E5041C3C5C5'X);
      689.2      DECLARE CEE3IH CHARACTER(8) STATIC INIT('00000E5141C3C5C5'X);
      690.2      DECLARE CEE3II CHARACTER(8) STATIC INIT('00000E5241C3C5C5'X);
      691.2      DECLARE CEE3IJ CHARACTER(8) STATIC INIT('00000E5341C3C5C5'X);
      692.2      DECLARE CEE3IK CHARACTER(8) STATIC INIT('00000E5441C3C5C5'X);
      693.2      DECLARE CEE3IL CHARACTER(8) STATIC INIT('00000E5541C3C5C5'X);
      694.2      DECLARE CEE3IM CHARACTER(8) STATIC INIT('00000E5641C3C5C5'X);
      695.2      DECLARE CEE3IN CHARACTER(8) STATIC INIT('00000E5741C3C5C5'X);
      696.2      DECLARE CEE3IO CHARACTER(8) STATIC INIT('00000E5841C3C5C5'X);
      697.2      DECLARE CEE3IP CHARACTER(8) STATIC INIT('00000E5941C3C5C5'X);
      698.2      DECLARE CEE3IQ CHARACTER(8) STATIC INIT('00000E5A41C3C5C5'X);
      699.2      DECLARE CEE3IR CHARACTER(8) STATIC INIT('00000E5B41C3C5C5'X);
      700.2      DECLARE CEE3IS CHARACTER(8) STATIC INIT('00000E5C41C3C5C5'X);
      701.2      DECLARE CEE3IT CHARACTER(8) STATIC INIT('00000E5D41C3C5C5'X);
      702.2      DECLARE CEE3IU CHARACTER(8) STATIC INIT('00000E5E41C3C5C5'X);
      703.2      DECLARE CEE3IV CHARACTER(8) STATIC INIT('00000E5F41C3C5C5'X);
      704.2      DECLARE CEE3J0 CHARACTER(8) STATIC INIT('00000E6041C3C5C5'X);
      705.2      DECLARE CEE3J1 CHARACTER(8) STATIC INIT('00000E6141C3C5C5'X);
      706.2      DECLARE CEE3J2 CHARACTER(8) STATIC INIT('00000E6241C3C5C5'X);
      707.2      DECLARE CEE3J3 CHARACTER(8) STATIC INIT('00000E6341C3C5C5'X);
      708.2      DECLARE CEE3J4 CHARACTER(8) STATIC INIT('00000E6441C3C5C5'X);
      709.2      DECLARE CEE3J5 CHARACTER(8) STATIC INIT('00000E6541C3C5C5'X);
      710.2      DECLARE CEE3J6 CHARACTER(8) STATIC INIT('00000E6641C3C5C5'X);
      711.2      DECLARE CEE3J7 CHARACTER(8) STATIC INIT('00000E6741C3C5C5'X);
      712.2      DECLARE CEE3J8 CHARACTER(8) STATIC INIT('00000E6841C3C5C5'X);
      713.2      DECLARE CEE3J9 CHARACTER(8) STATIC INIT('00000E6941C3C5C5'X);
      714.2      DECLARE CEE3JA CHARACTER(8) STATIC INIT('00000E6A41C3C5C5'X);
      715.2      DECLARE CEE3JB CHARACTER(8) STATIC INIT('00000E6B41C3C5C5'X);
      716.2      DECLARE CEE3JC CHARACTER(8) STATIC INIT('00000E6C41C3C5C5'X);
      717.2      DECLARE CEE3JD CHARACTER(8) STATIC INIT('00000E6D41C3C5C5'X);
      718.2      DECLARE CEE3JE CHARACTER(8) STATIC INIT('00000E6E41C3C5C5'X);
      719.2      DECLARE CEE3JF CHARACTER(8) STATIC INIT('00000E6F41C3C5C5'X);
      720.2      DECLARE CEE3JG CHARACTER(8) STATIC INIT('00000E7041C3C5C5'X);
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     721.2      DECLARE CEE3JH CHARACTER(8) STATIC INIT('00000E7141C3C5C5'X);
      722.2      DECLARE CEE3JI CHARACTER(8) STATIC INIT('00000E7241C3C5C5'X);
      723.2      DECLARE CEE3JJ CHARACTER(8) STATIC INIT('00000E7341C3C5C5'X);
      724.2      DECLARE CEE3JK CHARACTER(8) STATIC INIT('00000E7441C3C5C5'X);
      725.2      DECLARE CEE3JL CHARACTER(8) STATIC INIT('00010E7549C3C5C5'X);
      726.2      DECLARE CEE3JM CHARACTER(8) STATIC INIT('00030E7659C3C5C5'X);
      727.2      DECLARE CEE3JN CHARACTER(8) STATIC INIT('00000E7741C3C5C5'X);
      728.2      DECLARE CEE3JO CHARACTER(8) STATIC INIT('00000E7841C3C5C5'X);
      729.2      DECLARE CEE3JP CHARACTER(8) STATIC INIT('00000E7941C3C5C5'X);
      730.2      DECLARE CEE3JQ CHARACTER(8) STATIC INIT('00000E7A41C3C5C5'X);
      731.2      DECLARE CEE3JR CHARACTER(8) STATIC INIT('00000E7B41C3C5C5'X);
      732.2      DECLARE CEE3JS CHARACTER(8) STATIC INIT('00000E7C41C3C5C5'X);
      733.2      DECLARE CEE3JT CHARACTER(8) STATIC INIT('00000E7D41C3C5C5'X);
      734.2      DECLARE CEE3JU CHARACTER(8) STATIC INIT('00000E7E41C3C5C5'X);
      735.2      DECLARE CEE3JV CHARACTER(8) STATIC INIT('00000E7F41C3C5C5'X);
      736.2      DECLARE CEE3K0 CHARACTER(8) STATIC INIT('00000E8041C3C5C5'X);
      737.2      DECLARE CEE3K1 CHARACTER(8) STATIC INIT('00000E8141C3C5C5'X);
      738.2      DECLARE CEE3K2 CHARACTER(8) STATIC INIT('00000E8241C3C5C5'X);
      739.2      DECLARE CEE3K3 CHARACTER(8) STATIC INIT('00010E8349C3C5C5'X);
      740.2      DECLARE CEE3K4 CHARACTER(8) STATIC INIT('00000E8441C3C5C5'X);
      741.2      DECLARE CEE3K5 CHARACTER(8) STATIC INIT('00000E8541C3C5C5'X);
      742.2      DECLARE CEE3K6 CHARACTER(8) STATIC INIT('00000E8641C3C5C5'X);
      743.2      DECLARE CEE3K8 CHARACTER(8) STATIC INIT('00000E8841C3C5C5'X);
      744.2      DECLARE CEE3K9 CHARACTER(8) STATIC INIT('00000E8941C3C5C5'X);
      745.2      DECLARE CEE3KA CHARACTER(8) STATIC INIT('00000E8A41C3C5C5'X);
      746.2      DECLARE CEE3KB CHARACTER(8) STATIC INIT('00000E8B41C3C5C5'X);
      747.2      DECLARE CEE3KC CHARACTER(8) STATIC INIT('00000E8C41C3C5C5'X);
      748.2      DECLARE CEE3KD CHARACTER(8) STATIC INIT('00000E8D41C3C5C5'X);
      749.2      DECLARE CEE3KE CHARACTER(8) STATIC INIT('00000E8E41C3C5C5'X);
      750.2      DECLARE CEE3KF CHARACTER(8) STATIC INIT('00000E8F41C3C5C5'X);
      751.2      DECLARE CEE3KG CHARACTER(8) STATIC INIT('00030E9059C3C5C5'X);
      752.2      DECLARE CEE3KI CHARACTER(8) STATIC INIT('00000E9241C3C5C5'X);
      753.2      DECLARE CEE3KJ CHARACTER(8) STATIC INIT('00000E9341C3C5C5'X);
      754.2      DECLARE CEE3KK CHARACTER(8) STATIC INIT('00000E9441C3C5C5'X);
      755.2      DECLARE CEE3KL CHARACTER(8) STATIC INIT('00000E9541C3C5C5'X);
      756.2      DECLARE CEE3KM CHARACTER(8) STATIC INIT('00000E9641C3C5C5'X);
      757.2      DECLARE CEE3KN CHARACTER(8) STATIC INIT('00000E9741C3C5C5'X);
      758.2      DECLARE CEE3KO CHARACTER(8) STATIC INIT('00000E9841C3C5C5'X);
      759.2      DECLARE CEE3KP CHARACTER(8) STATIC INIT('00000E9941C3C5C5'X);
      760.2      DECLARE CEE3KQ CHARACTER(8) STATIC INIT('00020E9A51C3C5C5'X);
      761.2      DECLARE CEE3KR CHARACTER(8) STATIC INIT('00000E9B41C3C5C5'X);
      762.2      DECLARE CEE3KS CHARACTER(8) STATIC INIT('00000E9C41C3C5C5'X);
      763.2      DECLARE CEE3KT CHARACTER(8) STATIC INIT('00000E9D41C3C5C5'X);
      764.2      DECLARE CEE3KU CHARACTER(8) STATIC INIT('00000E9E41C3C5C5'X);
      765.2      DECLARE CEE3KV CHARACTER(8) STATIC INIT('00000E9F41C3C5C5'X);
      766.2      DECLARE CEE3L0 CHARACTER(8) STATIC INIT('00000EA041C3C5C5'X);
      767.2      DECLARE CEE3L1 CHARACTER(8) STATIC INIT('00000EA141C3C5C5'X);
      768.2      DECLARE CEE3L2 CHARACTER(8) STATIC INIT('00000EA241C3C5C5'X);
      769.2      DECLARE CEE3L3 CHARACTER(8) STATIC INIT('00000EA341C3C5C5'X);
      770.2      DECLARE CEE3L4 CHARACTER(8) STATIC INIT('00000EA441C3C5C5'X);
      771.2      DECLARE CEE3L5 CHARACTER(8) STATIC INIT('00000EA541C3C5C5'X);
      772.2      DECLARE CEE3L6 CHARACTER(8) STATIC INIT('00000EA641C3C5C5'X);
      773.2      DECLARE CEE3L7 CHARACTER(8) STATIC INIT('00000EA741C3C5C5'X);
      774.2      DECLARE CEE3L8 CHARACTER(8) STATIC INIT('00000EA841C3C5C5'X);
      775.2      DECLARE CEE3L9 CHARACTER(8) STATIC INIT('00000EA941C3C5C5'X);
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     776.2      DECLARE CEE3LA CHARACTER(8) STATIC INIT('00030EAA59C3C5C5'X);
      777.2      DECLARE CEE3LB CHARACTER(8) STATIC INIT('00000EAB41C3C5C5'X);
      778.2      DECLARE CEE3LG CHARACTER(8) STATIC INIT('00020EB051C3C5C5'X);
      779.2      DECLARE CEE3LH CHARACTER(8) STATIC INIT('00000EB141C3C5C5'X);
      780.2      DECLARE CEE3LI CHARACTER(8) STATIC INIT('00000EB241C3C5C5'X);
      781.2      DECLARE CEE3LL CHARACTER(8) STATIC INIT('00000EB541C3C5C5'X);
      782.2      DECLARE CEE3LM CHARACTER(8) STATIC INIT('00000EB641C3C5C5'X);
      783.2      DECLARE CEE3LN CHARACTER(8) STATIC INIT('00000EB741C3C5C5'X);
      784.2      DECLARE CEE3LO CHARACTER(8) STATIC INIT('00000EB841C3C5C5'X);
      785.2      DECLARE CEE3LP CHARACTER(8) STATIC INIT('00000EB941C3C5C5'X);
      786.2      DECLARE CEE3LQ CHARACTER(8) STATIC INIT('00000EBA41C3C5C5'X);
      787.2      DECLARE CEE3LR CHARACTER(8) STATIC INIT('00000EBB41C3C5C5'X);
      788.2      DECLARE CEE3LS CHARACTER(8) STATIC INIT('00000EBC41C3C5C5'X);
      789.2      DECLARE CEE3LV CHARACTER(8) STATIC INIT('00010EBF49C3C5C5'X);
      790.2      DECLARE CEE3M5 CHARACTER(8) STATIC INIT('00000EC541C3C5C5'X);
      791.2      DECLARE CEE3M6 CHARACTER(8) STATIC INIT('00020EC651C3C5C5'X);
      792.2      DECLARE CEE3M7 CHARACTER(8) STATIC INIT('00000EC741C3C5C5'X);
      793.2      DECLARE CEE3M8 CHARACTER(8) STATIC INIT('00000EC841C3C5C5'X);
      794.2      DECLARE CEE3M9 CHARACTER(8) STATIC INIT('00000EC941C3C5C5'X);
      795.2      DECLARE CEE3MA CHARACTER(8) STATIC INIT('00000ECA41C3C5C5'X);
      796.2      DECLARE CEE3MB CHARACTER(8) STATIC INIT('00000ECB41C3C5C5'X);
      797.2      DECLARE CEE3MC CHARACTER(8) STATIC INIT('00000ECC41C3C5C5'X);
      798.2      DECLARE CEE3MD CHARACTER(8) STATIC INIT('00000ECD41C3C5C5'X);
      799.2      DECLARE CEE3ME CHARACTER(8) STATIC INIT('00000ECE41C3C5C5'X);
      800.2      DECLARE CEE3MF CHARACTER(8) STATIC INIT('00000ECF41C3C5C5'X);
      801.2      DECLARE CEE3MG CHARACTER(8) STATIC INIT('00000ED041C3C5C5'X);
      802.2      DECLARE CEE3MH CHARACTER(8) STATIC INIT('00000ED141C3C5C5'X);
      803.2      DECLARE CEE3MI CHARACTER(8) STATIC INIT('00000ED241C3C5C5'X);
      804.2      DECLARE CEE3MJ CHARACTER(8) STATIC INIT('00000ED341C3C5C5'X);
      805.2      DECLARE CEE3MK CHARACTER(8) STATIC INIT('00000ED441C3C5C5'X);
      806.2      DECLARE CEE3ML CHARACTER(8) STATIC INIT('00000ED541C3C5C5'X);
      807.2      DECLARE CEE3MM CHARACTER(8) STATIC INIT('00000ED641C3C5C5'X);
      808.2      DECLARE CEE3MN CHARACTER(8) STATIC INIT('00000ED741C3C5C5'X);
      809.2      DECLARE CEE3MO CHARACTER(8) STATIC INIT('00030ED859C3C5C5'X);
      810.2      DECLARE CEE3N9 CHARACTER(8) STATIC INIT('00020EE951C3C5C5'X);
      811.2      DECLARE CEE3NA CHARACTER(8) STATIC INIT('00020EEA51C3C5C5'X);
      812.2      DECLARE CEE3NB CHARACTER(8) STATIC INIT('00000EEB41C3C5C5'X);
      813.2      DECLARE CEE3NC CHARACTER(8) STATIC INIT('00000EEC41C3C5C5'X);
      814.2      DECLARE CEE3ND CHARACTER(8) STATIC INIT('00000EED41C3C5C5'X);
      815.2      DECLARE CEE3NE CHARACTER(8) STATIC INIT('00000EEE41C3C5C5'X);
      816.2      DECLARE CEE3NF CHARACTER(8) STATIC INIT('00000EEF41C3C5C5'X);
      817.2      DECLARE CEE3NG CHARACTER(8) STATIC INIT('00000EF041C3C5C5'X);
      818.2      DECLARE CEE3NH CHARACTER(8) STATIC INIT('00000EF141C3C5C5'X);
      819.2      DECLARE CEE3NI CHARACTER(8) STATIC INIT('00000EF241C3C5C5'X);
      820.2      DECLARE CEE3NJ CHARACTER(8) STATIC INIT('00000EF341C3C5C5'X);
      821.2      DECLARE CEE3NL CHARACTER(8) STATIC INIT('00000EF541C3C5C5'X);
      822.2      DECLARE CEE3NM CHARACTER(8) STATIC INIT('00000EF641C3C5C5'X);
      823.2      DECLARE CEE3NN CHARACTER(8) STATIC INIT('00000EF741C3C5C5'X);
      824.2      DECLARE CEE3NO CHARACTER(8) STATIC INIT('00000EF841C3C5C5'X);
      825.2      DECLARE CEE3NP CHARACTER(8) STATIC INIT('00000EF941C3C5C5'X);
      826.2      DECLARE CEE3NS CHARACTER(8) STATIC INIT('00000EFC41C3C5C5'X);
      827.2      DECLARE CEE3NT CHARACTER(8) STATIC INIT('00000EFD41C3C5C5'X);
      828.2      DECLARE CEE3NU CHARACTER(8) STATIC INIT('00000EFE41C3C5C5'X);
      829.2      DECLARE CEE3NV CHARACTER(8) STATIC INIT('00000EFF41C3C5C5'X);
      830.2      DECLARE CEE3O0 CHARACTER(8) STATIC INIT('00000F0041C3C5C5'X);
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     831.2      DECLARE CEE3O1 CHARACTER(8) STATIC INIT('00000F0141C3C5C5'X);
      832.2      DECLARE CEE3O2 CHARACTER(8) STATIC INIT('00000F0241C3C5C5'X);
      833.2      DECLARE CEE3O3 CHARACTER(8) STATIC INIT('00000F0341C3C5C5'X);
      834.2      DECLARE CEE3O4 CHARACTER(8) STATIC INIT('00000F0441C3C5C5'X);
      835.2      DECLARE CEE3O5 CHARACTER(8) STATIC INIT('00000F0541C3C5C5'X);
      836.2      DECLARE CEE3O6 CHARACTER(8) STATIC INIT('00000F0641C3C5C5'X);
      837.2      DECLARE CEE3O7 CHARACTER(8) STATIC INIT('00000F0741C3C5C5'X);
      838.2      DECLARE CEE3O8 CHARACTER(8) STATIC INIT('00000F0841C3C5C5'X);
      839.2      DECLARE CEE3O9 CHARACTER(8) STATIC INIT('00000F0941C3C5C5'X);
      840.2      DECLARE CEE3OA CHARACTER(8) STATIC INIT('00000F0A41C3C5C5'X);
      841.2      DECLARE CEE3OB CHARACTER(8) STATIC INIT('00000F0B41C3C5C5'X);
      842.2      DECLARE CEE3OC CHARACTER(8) STATIC INIT('00000F0C41C3C5C5'X);
      843.2      DECLARE CEE3OD CHARACTER(8) STATIC INIT('00000F0D41C3C5C5'X);
      844.2      DECLARE CEE3OE CHARACTER(8) STATIC INIT('00000F0E41C3C5C5'X);
      845.2      DECLARE CEE3OF CHARACTER(8) STATIC INIT('00000F0F41C3C5C5'X);
      846.2      DECLARE CEE3OG CHARACTER(8) STATIC INIT('00000F1041C3C5C5'X);
      847.2      DECLARE CEE3OH CHARACTER(8) STATIC INIT('00000F1141C3C5C5'X);
      848.2      DECLARE CEE3OI CHARACTER(8) STATIC INIT('00000F1241C3C5C5'X);
      849.2      DECLARE CEE3OJ CHARACTER(8) STATIC INIT('00000F1341C3C5C5'X);
      850.2      DECLARE CEE3OK CHARACTER(8) STATIC INIT('00000F1441C3C5C5'X);
      851.2      DECLARE CEE3OL CHARACTER(8) STATIC INIT('00000F1541C3C5C5'X);
      852.2      DECLARE CEE3OM CHARACTER(8) STATIC INIT('00000F1641C3C5C5'X);
      853.2      DECLARE CEE3ON CHARACTER(8) STATIC INIT('00000F1741C3C5C5'X);
      854.2      DECLARE CEE3OO CHARACTER(8) STATIC INIT('00000F1841C3C5C5'X);
      855.2      DECLARE CEE3OP CHARACTER(8) STATIC INIT('00000F1941C3C5C5'X);
      856.2      DECLARE CEE3OQ CHARACTER(8) STATIC INIT('00000F1A41C3C5C5'X);
      857.2      DECLARE CEE3OR CHARACTER(8) STATIC INIT('00000F1B41C3C5C5'X);
      858.2      DECLARE CEE3OS CHARACTER(8) STATIC INIT('00000F1C41C3C5C5'X);
      859.2      DECLARE CEE3OT CHARACTER(8) STATIC INIT('00000F1D41C3C5C5'X);
      860.2      DECLARE CEE3OU CHARACTER(8) STATIC INIT('00000F1E41C3C5C5'X);
      861.2      DECLARE CEE3OV CHARACTER(8) STATIC INIT('00000F1F41C3C5C5'X);
      862.2      DECLARE CEE3P0 CHARACTER(8) STATIC INIT('00000F2041C3C5C5'X);
      863.2      DECLARE CEE3P1 CHARACTER(8) STATIC INIT('00000F2141C3C5C5'X);
      864.2      DECLARE CEE3P2 CHARACTER(8) STATIC INIT('00000F2241C3C5C5'X);
      865.2      DECLARE CEE3P3 CHARACTER(8) STATIC INIT('00000F2341C3C5C5'X);
      866.2      DECLARE CEE3P4 CHARACTER(8) STATIC INIT('00000F2441C3C5C5'X);
      867.2      DECLARE CEE3P5 CHARACTER(8) STATIC INIT('00000F2541C3C5C5'X);
      868.2      DECLARE CEE3P6 CHARACTER(8) STATIC INIT('00000F2641C3C5C5'X);
      869.2      DECLARE CEE3P7 CHARACTER(8) STATIC INIT('00000F2741C3C5C5'X);
      870.2      DECLARE CEE3PS CHARACTER(8) STATIC INIT('00030F3C59C3C5C5'X);
      871.2      DECLARE CEE3PT CHARACTER(8) STATIC INIT('00030F3D59C3C5C5'X);
      872.2      DECLARE CEE3Q6 CHARACTER(8) STATIC INIT('00030F4659C3C5C5'X);
      873.2      DECLARE CEE3Q7 CHARACTER(8) STATIC INIT('00030F4759C3C5C5'X);
      874.2      DECLARE CEE3Q8 CHARACTER(8) STATIC INIT('00030F4859C3C5C5'X);
      875.2      DECLARE CEE3Q9 CHARACTER(8) STATIC INIT('00030F4959C3C5C5'X);
      876.2      DECLARE CEE3QA CHARACTER(8) STATIC INIT('00000F4A41C3C5C5'X);
      877.2      DECLARE CEE3QB CHARACTER(8) STATIC INIT('00030F4B59C3C5C5'X);
      878.2      DECLARE CEE3QC CHARACTER(8) STATIC INIT('00030F4C59C3C5C5'X);
      879.2      DECLARE CEE3QD CHARACTER(8) STATIC INIT('00030F4D59C3C5C5'X);
      880.2      DECLARE CEE3QE CHARACTER(8) STATIC INIT('00000F4E41C3C5C5'X);
      881.2      DECLARE CEE3QF CHARACTER(8) STATIC INIT('00030F4F59C3C5C5'X);
      882.2      DECLARE CEE3QQ CHARACTER(8) STATIC INIT('00010F5A49C3C5C5'X);
      883.2      DECLARE CEE3QR CHARACTER(8) STATIC INIT('00010F5B49C3C5C5'X);
      884.2      DECLARE CEE3QS CHARACTER(8) STATIC INIT('00010F5C49C3C5C5'X);
      885.2      DECLARE CEE3T1 CHARACTER(8) STATIC INIT('00030FA159C3C5C5'X);
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     886.2      DECLARE CEE3TF CHARACTER(8) STATIC INIT('00030FAF59C3C5C5'X);
      887.2      DECLARE CEE3VM CHARACTER(8) STATIC INIT('00030FF659C3C5C5'X);
      888.2      DECLARE CEE3VN CHARACTER(8) STATIC INIT('00030FF759C3C5C5'X);
      889.2      DECLARE CEE4S9 CHARACTER(8) STATIC INIT('0003138959C3C5C5'X);
      890.2      DECLARE CEE4SA CHARACTER(8) STATIC INIT('0003138A59C3C5C5'X);
      891.2      DECLARE CEE4VD CHARACTER(8) STATIC INIT('000413ED61C3C5C5'X);
      892.2      DECLARE CEE4VE CHARACTER(8) STATIC INIT('000213EE51C3C5C5'X);
      893.2      DECLARE CEE4VF CHARACTER(8) STATIC INIT('000113EF49C3C5C5'X);
      894.2      DECLARE CEE4VG CHARACTER(8) STATIC INIT('000313F059C3C5C5'X);
      895.2      DECLARE CEE4VH CHARACTER(8) STATIC INIT('000313F159C3C5C5'X);
      896.2      DECLARE CEE4VI CHARACTER(8) STATIC INIT('000313F259C3C5C5'X);
      897.2      DECLARE CEE50V CHARACTER(8) STATIC INIT('0003141F59C3C5C5'X);
      898.2      DECLARE CEE510 CHARACTER(8) STATIC INIT('0003142059C3C5C5'X);
      899.2      DECLARE CEE512 CHARACTER(8) STATIC INIT('0003142259C3C5C5'X);
      900.2      DECLARE CEE513 CHARACTER(8) STATIC INIT('0003142359C3C5C5'X);
      901.2      DECLARE CEE519 CHARACTER(8) STATIC INIT('0003142959C3C5C5'X);
      902.2      DECLARE CEE51A CHARACTER(8) STATIC INIT('0003142A59C3C5C5'X);
      903.2      DECLARE CEE51O CHARACTER(8) STATIC INIT('0003143859C3C5C5'X);
      904.2      DECLARE CEE51P CHARACTER(8) STATIC INIT('0003143959C3C5C5'X);
      905.2      DECLARE CEE51Q CHARACTER(8) STATIC INIT('0003143A59C3C5C5'X);
      906.2      DECLARE CEE51R CHARACTER(8) STATIC INIT('0003143B59C3C5C5'X);
      907.2      DECLARE CEE51S CHARACTER(8) STATIC INIT('0000143C41C3C5C5'X);
      908.2      DECLARE CEE52H CHARACTER(8) STATIC INIT('0003145159C3C5C5'X);
      909.2      DECLARE CEE52I CHARACTER(8) STATIC INIT('0003145259C3C5C5'X);
      910.2      DECLARE CEE52J CHARACTER(8) STATIC INIT('0003145359C3C5C5'X);
      911.2      DECLARE CEE52K CHARACTER(8) STATIC INIT('0003145459C3C5C5'X);
      912.2      DECLARE CEE52L CHARACTER(8) STATIC INIT('0003145559C3C5C5'X);
      913.2      DECLARE CEE52M CHARACTER(8) STATIC INIT('0003145659C3C5C5'X);
      914.2      DECLARE CEE52N CHARACTER(8) STATIC INIT('0002145751C3C5C5'X);
      915.2      DECLARE CEE52O CHARACTER(8) STATIC INIT('0003145859C3C5C5'X);
      916.2      DECLARE CEE52P CHARACTER(8) STATIC INIT('0003145959C3C5C5'X);
      917.2      DECLARE CEE52Q CHARACTER(8) STATIC INIT('0003145A59C3C5C5'X);
      918.2      DECLARE CEE52R CHARACTER(8) STATIC INIT('0003145B59C3C5C5'X);
      919.2      DECLARE CEE52S CHARACTER(8) STATIC INIT('0004145C61C3C5C5'X);
      920.2      DECLARE CEE52T CHARACTER(8) STATIC INIT('0003145D59C3C5C5'X);
      921.2      DECLARE CEE52U CHARACTER(8) STATIC INIT('0003145E59C3C5C5'X);
      922.2      DECLARE CEE52V CHARACTER(8) STATIC INIT('0001145F49C3C5C5'X);
      923.2      DECLARE CEE530 CHARACTER(8) STATIC INIT('0001146049C3C5C5'X);
      924.2      DECLARE CEE531 CHARACTER(8) STATIC INIT('0003146159C3C5C5'X);
      925.2      DECLARE CEE532 CHARACTER(8) STATIC INIT('0003146259C3C5C5'X);
      926.2      DECLARE CEE533 CHARACTER(8) STATIC INIT('0001146349C3C5C5'X);
      927.2      DECLARE CEE534 CHARACTER(8) STATIC INIT('0003146459C3C5C5'X);
      928.2      DECLARE CEE535 CHARACTER(8) STATIC INIT('0003146559C3C5C5'X);
      929.2      DECLARE CEE536 CHARACTER(8) STATIC INIT('0003146659C3C5C5'X);
      930.2      DECLARE CEE537 CHARACTER(8) STATIC INIT('0001146749C3C5C5'X);
      931.2      DECLARE CEE538 CHARACTER(8) STATIC INIT('0001146849C3C5C5'X);
      932.2      DECLARE CEE539 CHARACTER(8) STATIC INIT('0003146959C3C5C5'X);
      933.2      DECLARE CEE53A CHARACTER(8) STATIC INIT('0001146A49C3C5C5'X);
      934.2      DECLARE CEE53B CHARACTER(8) STATIC INIT('0003146B59C3C5C5'X);
      935.2      DECLARE CEE53C CHARACTER(8) STATIC INIT('0003146C59C3C5C5'X);
      936.2      DECLARE CEE53D CHARACTER(8) STATIC INIT('0001146D49C3C5C5'X);
      937.2      DECLARE CEE53E CHARACTER(8) STATIC INIT('0003146E59C3C5C5'X);
      938.2      DECLARE CEE53F CHARACTER(8) STATIC INIT('0003146F59C3C5C5'X);
      939.2      DECLARE CEE53G CHARACTER(8) STATIC INIT('0003147059C3C5C5'X);
      940.2      DECLARE CEE53H CHARACTER(8) STATIC INIT('0003147159C3C5C5'X);
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     941.2      DECLARE CEE53I CHARACTER(8) STATIC INIT('0000147241C3C5C5'X);
      942.2      DECLARE CEE53J CHARACTER(8) STATIC INIT('0000147341C3C5C5'X);
      943.2      DECLARE CEE53K CHARACTER(8) STATIC INIT('0000147441C3C5C5'X);
      944.2      DECLARE CEE53L CHARACTER(8) STATIC INIT('0000147541C3C5C5'X);
      945.2      DECLARE CEE53M CHARACTER(8) STATIC INIT('0000147641C3C5C5'X);
      946.2      DECLARE CEE55L CHARACTER(8) STATIC INIT('000314B559C3C5C5'X);
      947.2      DECLARE CEE55M CHARACTER(8) STATIC INIT('000314B659C3C5C5'X);
      948.2      DECLARE CEE58P CHARACTER(8) STATIC INIT('0003151959C3C5C5'X);
      949.2      DECLARE CEE58Q CHARACTER(8) STATIC INIT('0000151A41C3C5C5'X);
      950.2      DECLARE CEE58R CHARACTER(8) STATIC INIT('0000151B41C3C5C5'X);
      951.2      DECLARE CEE58S CHARACTER(8) STATIC INIT('0000151C41C3C5C5'X);
      952.2      DECLARE CEE58T CHARACTER(8) STATIC INIT('0000151D41C3C5C5'X);
      953.2      DECLARE CEE5CM CHARACTER(8) STATIC INIT('0003159659C3C5C5'X);
      954.2      DECLARE CEE5CN CHARACTER(8) STATIC INIT('0003159759C3C5C5'X);
      955.2      DECLARE CEE5CO CHARACTER(8) STATIC INIT('0003159859C3C5C5'X);
      956.2      DECLARE CEE5CP CHARACTER(8) STATIC INIT('0003159959C3C5C5'X);
      957.2      DECLARE CEE5CQ CHARACTER(8) STATIC INIT('0003159A59C3C5C5'X);
      958.2      DECLARE CEE5CR CHARACTER(8) STATIC INIT('0003159B59C3C5C5'X);
      959.2      DECLARE CEE5CS CHARACTER(8) STATIC INIT('0003159C59C3C5C5'X);
      960.2      DECLARE CEE5CT CHARACTER(8) STATIC INIT('0003159D59C3C5C5'X);
      961.2      DECLARE CEE5DF CHARACTER(8) STATIC INIT('000315AF59C3C5C5'X);
      962.2      DECLARE CEE5DG CHARACTER(8) STATIC INIT('000315B059C3C5C5'X);
      963.2      DECLARE CEE5DH CHARACTER(8) STATIC INIT('000315B159C3C5C5'X);
      964.2      DECLARE CEE5F1 CHARACTER(8) STATIC INIT('000315E159C3C5C5'X);
      965.2      DECLARE CEE5F2 CHARACTER(8) STATIC INIT('000315E259C3C5C5'X);
      966.2      DECLARE CEE5F3 CHARACTER(8) STATIC INIT('000315E359C3C5C5'X);
      967.2      DECLARE CEE5F4 CHARACTER(8) STATIC INIT('000315E459C3C5C5'X);
      968.2      DECLARE CEE5F5 CHARACTER(8) STATIC INIT('000315E559C3C5C5'X);
      969.2      DECLARE CEE5F6 CHARACTER(8) STATIC INIT('000315E659C3C5C5'X);
      970.2      DECLARE CEE5F7 CHARACTER(8) STATIC INIT('000315E759C3C5C5'X);
      971.2      DECLARE CEE5F8 CHARACTER(8) STATIC INIT('000315E859C3C5C5'X);
      972.2      DECLARE CEE5F9 CHARACTER(8) STATIC INIT('000315E959C3C5C5'X);
      973.2      DECLARE CEE5FC CHARACTER(8) STATIC INIT('000315EC59C3C5C5'X);
      974.2      DECLARE CEE5FD CHARACTER(8) STATIC INIT('000315ED59C3C5C5'X);
      975.2      DECLARE CEE5FQ CHARACTER(8) STATIC INIT('000315FA59C3C5C5'X);
      976.2      DECLARE CEE5FR CHARACTER(8) STATIC INIT('000315FB59C3C5C5'X);
      977.2      DECLARE CEE5FS CHARACTER(8) STATIC INIT('000315FC59C3C5C5'X);
      978.2      DECLARE CEE5FT CHARACTER(8) STATIC INIT('000315FD59C3C5C5'X);
      979.2      DECLARE CEE5GJ CHARACTER(8) STATIC INIT('0003161359C3C5C5'X);
      980.2      DECLARE CEE5I5 CHARACTER(8) STATIC INIT('0003164559C3C5C5'X);
      981.2      DECLARE CEE5I6 CHARACTER(8) STATIC INIT('0003164659C3C5C5'X);
      982.2      DECLARE CEE5I7 CHARACTER(8) STATIC INIT('0003164759C3C5C5'X);
      983.2      DECLARE CEE5I8 CHARACTER(8) STATIC INIT('0004164861C3C5C5'X);
      984.2      DECLARE CEE5I9 CHARACTER(8) STATIC INIT('0003164959C3C5C5'X);
      985.2      DECLARE CEE5IA CHARACTER(8) STATIC INIT('0003164A59C3C5C5'X);
      986.2      DECLARE CEE5IB CHARACTER(8) STATIC INIT('0000164B41C3C5C5'X);
      987.2      DECLARE CEE5IC CHARACTER(8) STATIC INIT('0003164C59C3C5C5'X);
      988.2      DECLARE CEE5ID CHARACTER(8) STATIC INIT('0003164D59C3C5C5'X);
      989.2      DECLARE CEE5IE CHARACTER(8) STATIC INIT('0003164E59C3C5C5'X);
      990.2      DECLARE CEE5IF CHARACTER(8) STATIC INIT('0003164F59C3C5C5'X);
      991.2      DECLARE CEE5IG CHARACTER(8) STATIC INIT('0003165059C3C5C5'X);
      992.2      DECLARE CEE5IH CHARACTER(8) STATIC INIT('0003165159C3C5C5'X);
      993.2      DECLARE CEE5II CHARACTER(8) STATIC INIT('0003165259C3C5C5'X);
      994.2      DECLARE CEE5IJ CHARACTER(8) STATIC INIT('0003165359C3C5C5'X);
      995.2      DECLARE CEE5IK CHARACTER(8) STATIC INIT('0004165461C3C5C5'X);
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0     996.2      DECLARE CEE5IL CHARACTER(8) STATIC INIT('0004165561C3C5C5'X);
      997.2      DECLARE CEE5IM CHARACTER(8) STATIC INIT('0004165661C3C5C5'X);
      998.2      DECLARE CEE5IN CHARACTER(8) STATIC INIT('0003165759C3C5C5'X);
      999.2      DECLARE CEE5IO CHARACTER(8) STATIC INIT('0004165861C3C5C5'X);
     1000.2      DECLARE CEE5IP CHARACTER(8) STATIC INIT('0000165941C3C5C5'X);
     1001.2      DECLARE CEE5IQ CHARACTER(8) STATIC INIT('0000165A41C3C5C5'X);
     1002.2      DECLARE CEE5IS CHARACTER(8) STATIC INIT('0000165C41C3C5C5'X);
     1003.2      DECLARE CEE5IU CHARACTER(8) STATIC INIT('0003165E59C3C5C5'X);
     1004.2      DECLARE CEE5IV CHARACTER(8) STATIC INIT('0003165F59C3C5C5'X);
     1005.2      DECLARE CEE5J0 CHARACTER(8) STATIC INIT('0004166061C3C5C5'X);
     1006.2      DECLARE CEE5J1 CHARACTER(8) STATIC INIT('0003166159C3C5C5'X);
     1007.2      DECLARE CEE5J2 CHARACTER(8) STATIC INIT('0003166259C3C5C5'X);
     1008.2      DECLARE CEE5J3 CHARACTER(8) STATIC INIT('0003166359C3C5C5'X);
     1009.2      DECLARE CEE5J4 CHARACTER(8) STATIC INIT('0003166459C3C5C5'X);
     1010.2      DECLARE CEE5J5 CHARACTER(8) STATIC INIT('0003166559C3C5C5'X);
     1011.2      DECLARE CEE5J6 CHARACTER(8) STATIC INIT('0003166659C3C5C5'X);
     1012.2      DECLARE CEE5J7 CHARACTER(8) STATIC INIT('0003166759C3C5C5'X);
     1013.2      DECLARE CEE5J8 CHARACTER(8) STATIC INIT('0000166841C3C5C5'X);
     1014.2      DECLARE CEE5J9 CHARACTER(8) STATIC INIT('0003166959C3C5C5'X);
     1015.2      DECLARE CEE5JA CHARACTER(8) STATIC INIT('0003166A59C3C5C5'X);
     1016.2      DECLARE CEE5JB CHARACTER(8) STATIC INIT('0003166B59C3C5C5'X);
     1017.2      DECLARE CEE5JC CHARACTER(8) STATIC INIT('0003166C59C3C5C5'X);
     1018.2      DECLARE CEE5JD CHARACTER(8) STATIC INIT('0004166D61C3C5C5'X);
     1019.2      DECLARE CEE5JE CHARACTER(8) STATIC INIT('0003166E59C3C5C5'X);
     1020.2      DECLARE CEE5JF CHARACTER(8) STATIC INIT('0003166F59C3C5C5'X);
     1021.2      DECLARE CEE5JG CHARACTER(8) STATIC INIT('0003167059C3C5C5'X);
     1022.2      DECLARE CEE5JH CHARACTER(8) STATIC INIT('0004167161C3C5C5'X);
     1023.2      DECLARE CEE5JI CHARACTER(8) STATIC INIT('0003167259C3C5C5'X);
     1024.2      DECLARE CEE5JJ CHARACTER(8) STATIC INIT('0003167359C3C5C5'X);
     1025.2      DECLARE CEE5JK CHARACTER(8) STATIC INIT('0003167459C3C5C5'X);
     1026.2      DECLARE CEE5JL CHARACTER(8) STATIC INIT('0003167559C3C5C5'X);
     1027.2      DECLARE CEE5JM CHARACTER(8) STATIC INIT('0003167659C3C5C5'X);
     1028.2      DECLARE CEE5JN CHARACTER(8) STATIC INIT('0004167761C3C5C5'X);
     1029.2      DECLARE CEE5K1 CHARACTER(8) STATIC INIT('0004168161C3C5C5'X);
     1030.2      DECLARE CEE5K2 CHARACTER(8) STATIC INIT('0004168261C3C5C5'X);
     1031.2      DECLARE CEE5K3 CHARACTER(8) STATIC INIT('0004168361C3C5C5'X);
     1032.2      DECLARE CEE5K4 CHARACTER(8) STATIC INIT('0003168459C3C5C5'X);
     1033.2      DECLARE CEE5K5 CHARACTER(8) STATIC INIT('0003168559C3C5C5'X);
     1034.2      DECLARE CEE5K6 CHARACTER(8) STATIC INIT('0003168659C3C5C5'X);
     1035.2      DECLARE CEE5K7 CHARACTER(8) STATIC INIT('0004168761C3C5C5'X);
     1036.2      DECLARE CEE5K8 CHARACTER(8) STATIC INIT('0003168859C3C5C5'X);
     1037.2      DECLARE CEE5K9 CHARACTER(8) STATIC INIT('0003168959C3C5C5'X);
     1038.2      DECLARE CEE5KA CHARACTER(8) STATIC INIT('0003168A59C3C5C5'X);
     1039.2      DECLARE CEE5KB CHARACTER(8) STATIC INIT('0003168B59C3C5C5'X);
     1040.2      DECLARE CEE5KC CHARACTER(8) STATIC INIT('0003168C59C3C5C5'X);
     1041.2      DECLARE CEE5KD CHARACTER(8) STATIC INIT('0003168D59C3C5C5'X);
     1042.2      DECLARE CEE5KE CHARACTER(8) STATIC INIT('0003168E59C3C5C5'X);
     1043.2      DECLARE CEE5KF CHARACTER(8) STATIC INIT('0003168F59C3C5C5'X);
     1044.2      DECLARE CEE5KG CHARACTER(8) STATIC INIT('0003169059C3C5C5'X);
     1045.2      DECLARE CEE5KH CHARACTER(8) STATIC INIT('0003169159C3C5C5'X);
     1046.2      DECLARE CEE5KI CHARACTER(8) STATIC INIT('0003169259C3C5C5'X);
     1047.2      DECLARE CEE5KJ CHARACTER(8) STATIC INIT('0004169361C3C5C5'X);
     1048.2      DECLARE CEE5KK CHARACTER(8) STATIC INIT('0004169461C3C5C5'X);
     1049.2      DECLARE CEE5KL CHARACTER(8) STATIC INIT('0004169561C3C5C5'X);
     1050.2      DECLARE CEE5KM CHARACTER(8) STATIC INIT('0003169659C3C5C5'X);
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0    1051.2      DECLARE CEE5KN CHARACTER(8) STATIC INIT('0004169761C3C5C5'X);
     1052.2      DECLARE CEE5KO CHARACTER(8) STATIC INIT('0000169841C3C5C5'X);
     1053.2      DECLARE CEE5KP CHARACTER(8) STATIC INIT('0000169941C3C5C5'X);
     1054.2      DECLARE CEE5KQ CHARACTER(8) STATIC INIT('0003169A59C3C5C5'X);
     1055.2      DECLARE CEE5KR CHARACTER(8) STATIC INIT('0000169B41C3C5C5'X);
     1056.2      DECLARE CEE5KS CHARACTER(8) STATIC INIT('0000169C41C3C5C5'X);
     1057.2      DECLARE CEE5KT CHARACTER(8) STATIC INIT('0000169D41C3C5C5'X);
     1058.2      DECLARE CEE5KU CHARACTER(8) STATIC INIT('0003169E59C3C5C5'X);
     1059.2      DECLARE CEE5KV CHARACTER(8) STATIC INIT('0004169F61C3C5C5'X);
     1060.2      DECLARE CEE5L0 CHARACTER(8) STATIC INIT('000016A041C3C5C5'X);
     1061.2      DECLARE CEE5L1 CHARACTER(8) STATIC INIT('000016A141C3C5C5'X);
     1062.2      DECLARE CEE5L2 CHARACTER(8) STATIC INIT('000316A259C3C5C5'X);
     1063.2      DECLARE CEE5L3 CHARACTER(8) STATIC INIT('000316A359C3C5C5'X);
     1064.2      DECLARE CEE5L4 CHARACTER(8) STATIC INIT('000316A459C3C5C5'X);
     1065.2
     1066.2      DECLARE CEEIBMCT  CHARACTER(8) BASED;
     1067.2
       11.0       /*   END %INCLUDE CEEIBMCT */
       12.0      /* feedback code for all callable services*/
       13.0         DCL 01 FC ,
       13.0         254 MsgSev        REAL FIXED BINARY(15,0),
       13.0                            254 MsgNo         REAL FIXED BINARY(15,0)
       13.0                                               254 Flags,
       13.0                                                  255 Case          B
       13.0      UNALIGNED,                                    255 Severity
       13.0      UNALIGNED,                                    255 Control
       13.0      UNALIGNED,                                 254 FacID         CH
       13.0       Facility ID */,                           254 ISI           RE
       13.0       BINARY(31,0)    /* Instance-Specific Information */;
       13.0
       14.0      /************************************************************/
       15.0      /** Parameters passed to CEEMOUT.                          **/
       16.0      /**                                                        **/
       17.0      /************************************************************/
       18.0         DCL STARTMSG CHAR(80) VARYING
       18.0
       19.0               INIT('Callable service example starting (PL/I)');
       20.0         DCL ENDMSG CHAR(80) VARYING
       20.0
       21.0               INIT('Callable service example ending (PL/I)');
       22.0         DCL CHRDATE CHAR(80);
       22.0
       23.0         DCL PATTERN CHAR(80) VARYING;
       23.0
       24.0         DCL STRMSG CHAR(80) VARYING;
       24.0
       25.0         DCL DESTINATION REAL FIXED BINARY ( 31,0 );
       26.0      /************************************************************/
       27.0      /** Parameters passed to CEELOCT.                          **/
       28.0      /**                                                        **/
       29.0      /************************************************************/
       30.0         DCL LILDATE REAL FIXED BINARY ( 31,0 );
       31.0         DCL LILSECS REAL FLOAT DECIMAL ( 16 );
       32.0         DCL GREG CHARACTER ( 17 );
       33.0      /************************************************************/
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
0    Line.File
0      34.0      /************************************************************/
       35.0      /** Start execution.  Print the first message.             **/
       36.0      /**                                                        **/
       37.0      /************************************************************/
       38.0         DESTINATION = 2;
       39.0         CALL CEEMOUT ( STARTMSG , DESTINATION , FC );
       40.0         IF  ^(ADDR( FC)->CEEIBMCT =  CEE000)  THEN  DO;
       40.0
       41.0            DISPLAY( 'CEEMOUT failed with msg ' || FC.MSGNO );
       42.0            STOP;
       43.0            END;
       44.0      /************************************************************/
       45.0      /** Get the local date and time. Format it, and print it   **/
       46.0      /** out.                                                   **/
       47.0      /************************************************************/
       48.0         CALL CEELOCT ( LILDATE , LILSECS , GREG , FC );
       49.0         IF ^(ADDR( FC)->CEEIBMCT =  CEE000)  THEN  DO;
       49.0
       50.0            DISPLAY( 'CEELOCT failed with msg ' || FC.MSGNO );
       51.0            STOP;
       52.0            END;
       53.0         PATTERN = 'Today is Wwwwwwwwwwwwz, Mmmmmmmmmmz, ZD, YYYY.';
       54.0         CALL CEEDATE ( LILDATE , PATTERN , CHRDATE , FC );
       55.0         IF  ^(ADDR( FC)->CEEIBMCT =  CEE000)  THEN  DO;
       55.0
       56.0            DISPLAY( 'CEEDATE failed with msg ' || FC.MSGNO );
       57.0            STOP;
       58.0            END;
       59.0         STRMSG = CHRDATE;
       60.0         CALL CEEMOUT ( STRMSG , DESTINATION , FC );
       61.0         IF  ^(ADDR( FC)->CEEIBMCT =  CEE000)  THEN  DO;
       61.0
       62.0            DISPLAY( 'CEEMOUT failed with msg ' || FC.MSGNO );
       63.0            STOP;
       64.0            END;
       65.0      /************************************************************/
       66.0      /** Say good bye.                                          **/
       67.0      /**                                                        **/
       68.0      /************************************************************/
       69.0         CALL CEEMOUT ( ENDMSG , DESTINATION , FC );
       70.0         IF  ^(ADDR( FC)->CEEIBMCT =  CEE000)  THEN  DO;
       70.0
       71.0            DISPLAY( 'CEEMOUT failed with msg ' || FC.MSGNO );
       72.0            STOP;
       73.0            END;
       74.0      END;
15655-PL5  IBM(R) Enterprise PL/I for z/OS       /*compilation unit: cecgxmp
- No Compiler Messages
0 File Reference Table
0   File    Included From  Name
0      0                   KC03CCA.LANG.SOURCE(PL1)
       1          10.0     CEE.SCEESAMP(CEEIBMAW)
       2          11.0     CEE.SCEESAMP(CEEIBMCT)
- Component    Return Code    Messages (Total/Suppressed)    Time
0 MACRO            0                2  /  2                   0 secs
  Compiler         0               18  /  18                  0 secs
0 End of compilation of CECGXMP
1z/OS V2 R3 BINDER     08:43:53 WEDNESDAY APRIL  7, 2021
 BATCH EMULATOR  JOB(KC03CCAP) STEP(STEP1   ) PGM= IEWBLINK  PROCEDURE(BIND    )



                                 *** O P E R A T I O N   S U M M A R Y   R E P O

1PROCESSING OPTIONS:

    ALIASES             NO
    ALIGN2              NO
    AMODE               UNSPECIFIED
    CALL                YES
    CASE                UPPER
    COMPAT              UNSPECIFIED
    COMPRESS            AUTO
    DCBS                NO
    DYNAM               NO
    EXTATTR             UNSPECIFIED
    EXITS:              NONE
    FILL                NONE
    GID                 UNSPECIFIED
    HOBSET              NO
    INFO                NO
    LET                 04
    LINECT              060
    LIST                SUMMARY
    LISTPRIV            NO
    LONGPARM            NO
    MAP                 NO
    MAXBLK              032760
    MODMAP              NO
    MSGLEVEL            00
    OVLY                NO
    PRINT               YES
    RES                 NO
    REUSABILITY         UNSPECIFIED
    RMODE               UNSPECIFIED
    RMODEX              NO
    SIGN                NO
    STORENX             NOREPLACE
    STRIPCL             NO
    STRIPSEC            NO
    SYMTRACE
    TERM                NO
    TRAP                ON
    UID                 UNSPECIFIED
    UPCASE              NO
    WKSPACE             000000K,000000K
    XCAL                NO
    XREF                NO
    ***END OF OPTIONS***




1SAVE OPERATION SUMMARY:

    MEMBER NAME         PL1
    LOAD LIBRARY        KC03CCA.LANG.LOAD
    PROGRAM TYPE        LOAD MODULE
    VOLUME SERIAL       KCTR16
    MAX BLOCK           27920
    DISPOSITION         ADDED NEW
    TIME OF SAVE        08.43.54  APR  7, 2021


1SAVE MODULE ATTRIBUTES:

    AC                  000
    AMODE                31
    COMPRESSION         NONE
    DC                  NO
    EDITABLE            YES
    EXCEEDS 16MB        NO
    EXECUTABLE          YES
    LONGPARM            NO
    MIGRATABLE          YES
    OL                  NO
    OVLY                NO
    PACK,PRIME          NO,NO
    PAGE ALIGN          NO
    REFR                NO
    RENT                NO
    REUS                NO
    RMODE               ANY
    SCTR                NO
    SIGN                NO
    SSI
    SYM GENERATED       NO
    TEST                NO
    XPLINK              NO
    MODULE SIZE (HEX)   000031D0


1 ENTRY POINT AND ALIAS SUMMARY:

  NAME:            ENTRY TYPE AMODE C_OFFSET CLASS NAME        STATUS

  CEESTART          MAIN_EP      31 00000000 B_TEXT

                          *** E N D   O F   O P E R A T I O N   S U M M A R Y




1z/OS V2 R3 BINDER     08:43:53 WEDNESDAY APRIL  7, 2021
 BATCH EMULATOR  JOB(KC03CCAP) STEP(STEP1   ) PGM= IEWBLINK  PROCEDURE(BIND    )
 IEW2008I 0F03 PROCESSING COMPLETED.  RETURN CODE =  0.



1----------------------
 MESSAGE SUMMARY REPORT
 ----------------------
  TERMINAL MESSAGES      (SEVERITY = 16)
  NONE

  SEVERE MESSAGES        (SEVERITY = 12)
  NONE

  ERROR MESSAGES         (SEVERITY = 08)
  NONE

  WARNING MESSAGES       (SEVERITY = 04)
  NONE

  INFORMATIONAL MESSAGES (SEVERITY = 00)
  2008


  **** END OF MESSAGE SUMMARY REPORT ****

